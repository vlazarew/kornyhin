
theory Axiomatic_Padding 
                           use why3.Bool.Bool 
                           
end

theory Int32_of_Int16

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Int32.t = (Int32.of_int (Int16.to_int n))
  
end

theory Bit_int32_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Int32_of_Int16
  
  use export enum.Bit_int32_of_bit_int16
  
end

theory Int64_of_Int16

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Int64.t = (Int64.of_int (Int16.to_int n))
  
end

theory Bit_int64_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Int64_of_Int16
  
  use export enum.Bit_int64_of_bit_int16
  
end

theory Int64_of_Int32

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Int64.t = (Int64.of_int (Int32.to_int n))
  
end

theory Bit_int64_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Int64_of_Int32
  
  use export enum.Bit_int64_of_bit_int32
  
end

theory Int8_of_Int16

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Int8.t = (Int8.of_int (Int16.to_int n))
  
end

theory Bit_int8_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Int8_of_Int16
  
  use export enum.Bit_int8_of_bit_int16
  
end

theory Int8_of_Int32

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Int8.t = (Int8.of_int (Int32.to_int n))
  
end

theory Bit_int8_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Int8_of_Int32
  
  use export enum.Bit_int8_of_bit_int32
  
end

theory Int8_of_Int64

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Int8.t = (Int8.of_int (Int64.to_int n))
  
end

theory Bit_int8_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Int8_of_Int64
  
  use export enum.Bit_int8_of_bit_int64
  
end

theory Uint16_of_Int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint16.t = (Uint16.of_int (Int16.to_int n))
  
end

theory Bit_uint16_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint16_of_Int16
  
  use export enum.Bit_uint16_of_bit_int16
  
end

theory Uint16_of_Int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint16.t = (Uint16.of_int (Int32.to_int n))
  
end

theory Bit_uint16_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint16_of_Int32
  
  use export enum.Bit_uint16_of_bit_int32
  
end

theory Uint16_of_Int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint16.t = (Uint16.of_int (Int64.to_int n))
  
end

theory Bit_uint16_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint16_of_Int64
  
  use export enum.Bit_uint16_of_bit_int64
  
end

theory Uint16_of_Int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint16.t = (Uint16.of_int (Int8.to_int n))
  
end

theory Bit_uint16_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint16_of_Int8
  
  use export enum.Bit_uint16_of_bit_int8
  
end

theory Uint32_of_Int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint32.t = (Uint32.of_int (Int16.to_int n))
  
end

theory Bit_uint32_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint32_of_Int16
  
  use export enum.Bit_uint32_of_bit_int16
  
end

theory Uint32_of_Int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint32.t = (Uint32.of_int (Int32.to_int n))
  
end

theory Bit_uint32_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint32_of_Int32
  
  use export enum.Bit_uint32_of_bit_int32
  
end

theory Uint32_of_Int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint32.t = (Uint32.of_int (Int64.to_int n))
  
end

theory Bit_uint32_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint32_of_Int64
  
  use export enum.Bit_uint32_of_bit_int64
  
end

theory Uint32_of_Int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint32.t = (Uint32.of_int (Int8.to_int n))
  
end

theory Bit_uint32_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint32_of_Int8
  
  use export enum.Bit_uint32_of_bit_int8
  
end

theory Uint32_of_Uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Uint32.t = (Uint32.of_int (Uint16.to_int n))
  
end

theory Bit_uint32_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Uint32_of_Uint16
  
  use export enum.Bit_uint32_of_bit_uint16
  
end

theory Uint64_of_Int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint64.t = (Uint64.of_int (Int16.to_int n))
  
end

theory Bit_uint64_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint64_of_Int16
  
  use export enum.Bit_uint64_of_bit_int16
  
end

theory Uint64_of_Int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint64.t = (Uint64.of_int (Int32.to_int n))
  
end

theory Bit_uint64_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint64_of_Int32
  
  use export enum.Bit_uint64_of_bit_int32
  
end

theory Uint64_of_Int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint64.t = (Uint64.of_int (Int64.to_int n))
  
end

theory Bit_uint64_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint64_of_Int64
  
  use export enum.Bit_uint64_of_bit_int64
  
end

theory Uint64_of_Int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint64.t = (Uint64.of_int (Int8.to_int n))
  
end

theory Bit_uint64_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint64_of_Int8
  
  use export enum.Bit_uint64_of_bit_int8
  
end

theory Uint64_of_Uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Uint64.t = (Uint64.of_int (Uint16.to_int n))
  
end

theory Bit_uint64_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Uint64_of_Uint16
  
  use export enum.Bit_uint64_of_bit_uint16
  
end

theory Uint64_of_Uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Uint64.t = (Uint64.of_int (Uint32.to_int n))
  
end

theory Bit_uint64_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Uint64_of_Uint32
  
  use export enum.Bit_uint64_of_bit_uint32
  
end

theory Uint8_of_Int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint8.t = (Uint8.of_int (Int16.to_int n))
  
end

theory Bit_uint8_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint8_of_Int16
  
  use export enum.Bit_uint8_of_bit_int16
  
end

theory Uint8_of_Int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint8.t = (Uint8.of_int (Int32.to_int n))
  
end

theory Bit_uint8_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint8_of_Int32
  
  use export enum.Bit_uint8_of_bit_int32
  
end

theory Uint8_of_Int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint8.t = (Uint8.of_int (Int64.to_int n))
  
end

theory Bit_uint8_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint8_of_Int64
  
  use export enum.Bit_uint8_of_bit_int64
  
end

theory Uint8_of_Int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint8.t = (Uint8.of_int (Int8.to_int n))
  
end

theory Bit_uint8_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint8_of_Int8
  
  use export enum.Bit_uint8_of_bit_int8
  
end

theory Uint8_of_Uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Uint8.t = (Uint8.of_int (Uint16.to_int n))
  
end

theory Bit_uint8_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Uint8_of_Uint16
  
  use export enum.Bit_uint8_of_bit_uint16
  
end

theory Uint8_of_Uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Uint8.t = (Uint8.of_int (Uint32.to_int n))
  
end

theory Bit_uint8_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Uint8_of_Uint32
  
  use export enum.Bit_uint8_of_bit_uint32
  
end

theory Uint8_of_Uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Uint8.t = (Uint8.of_int (Uint64.to_int n))
  
end

theory Bit_uint8_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Uint8_of_Uint64
  
  use export enum.Bit_uint8_of_bit_uint64
  
end

theory Int16_of_Int32

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Int16.t = (Int16.of_int (Int32.to_int n))
  
end

theory Bit_int16_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Int16_of_Int32
  
  use export enum.Bit_int16_of_bit_int32
  
end

theory Int16_of_Int64

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Int16.t = (Int16.of_int (Int64.to_int n))
  
end

theory Bit_int16_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Int16_of_Int64
  
  use export enum.Bit_int16_of_bit_int64
  
end

theory Int32_of_Int64

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Int32.t = (Int32.of_int (Int64.to_int n))
  
end

theory Bit_int32_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Int32_of_Int64
  
  use export enum.Bit_int32_of_bit_int64
  
end

theory Int16_of_Int8

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Int16.t = (Int16.of_int (Int8.to_int n))
  
end

theory Bit_int16_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Int16_of_Int8
  
  use export enum.Bit_int16_of_bit_int8
  
end

theory Int32_of_Int8

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Int32.t = (Int32.of_int (Int8.to_int n))
  
end

theory Bit_int32_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Int32_of_Int8
  
  use export enum.Bit_int32_of_bit_int8
  
end

theory Int64_of_Int8

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Int64.t = (Int64.of_int (Int8.to_int n))
  
end

theory Bit_int64_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Int64_of_Int8
  
  use export enum.Bit_int64_of_bit_int8
  
end

theory Int16_of_Uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int16.t = (Int16.of_int (Uint16.to_int n))
  
end

theory Bit_int16_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int16_of_Uint16
  
  use export enum.Bit_int16_of_bit_uint16
  
end

theory Int32_of_Uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int32.t = (Int32.of_int (Uint16.to_int n))
  
end

theory Bit_int32_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int32_of_Uint16
  
  use export enum.Bit_int32_of_bit_uint16
  
end

theory Int64_of_Uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int64.t = (Int64.of_int (Uint16.to_int n))
  
end

theory Bit_int64_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int64_of_Uint16
  
  use export enum.Bit_int64_of_bit_uint16
  
end

theory Int8_of_Uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int8.t = (Int8.of_int (Uint16.to_int n))
  
end

theory Bit_int8_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int8_of_Uint16
  
  use export enum.Bit_int8_of_bit_uint16
  
end

theory Int16_of_Uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int16.t = (Int16.of_int (Uint32.to_int n))
  
end

theory Bit_int16_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int16_of_Uint32
  
  use export enum.Bit_int16_of_bit_uint32
  
end

theory Int32_of_Uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int32.t = (Int32.of_int (Uint32.to_int n))
  
end

theory Bit_int32_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int32_of_Uint32
  
  use export enum.Bit_int32_of_bit_uint32
  
end

theory Int64_of_Uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int64.t = (Int64.of_int (Uint32.to_int n))
  
end

theory Bit_int64_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int64_of_Uint32
  
  use export enum.Bit_int64_of_bit_uint32
  
end

theory Int8_of_Uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int8.t = (Int8.of_int (Uint32.to_int n))
  
end

theory Bit_int8_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int8_of_Uint32
  
  use export enum.Bit_int8_of_bit_uint32
  
end

theory Uint16_of_Uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Uint16.t = (Uint16.of_int (Uint32.to_int n))
  
end

theory Bit_uint16_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Uint16_of_Uint32
  
  use export enum.Bit_uint16_of_bit_uint32
  
end

theory Int16_of_Uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int16.t = (Int16.of_int (Uint64.to_int n))
  
end

theory Bit_int16_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int16_of_Uint64
  
  use export enum.Bit_int16_of_bit_uint64
  
end

theory Int32_of_Uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int32.t = (Int32.of_int (Uint64.to_int n))
  
end

theory Bit_int32_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int32_of_Uint64
  
  use export enum.Bit_int32_of_bit_uint64
  
end

theory Int64_of_Uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int64.t = (Int64.of_int (Uint64.to_int n))
  
end

theory Bit_int64_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int64_of_Uint64
  
  use export enum.Bit_int64_of_bit_uint64
  
end

theory Int8_of_Uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int8.t = (Int8.of_int (Uint64.to_int n))
  
end

theory Bit_int8_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int8_of_Uint64
  
  use export enum.Bit_int8_of_bit_uint64
  
end

theory Uint16_of_Uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Uint16.t = (Uint16.of_int (Uint64.to_int n))
  
end

theory Bit_uint16_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Uint16_of_Uint64
  
  use export enum.Bit_uint16_of_bit_uint64
  
end

theory Uint32_of_Uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Uint32.t = (Uint32.of_int (Uint64.to_int n))
  
end

theory Bit_uint32_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Uint32_of_Uint64
  
  use export enum.Bit_uint32_of_bit_uint64
  
end

theory Int16_of_Uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int16.t = (Int16.of_int (Uint8.to_int n))
  
end

theory Bit_int16_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int16_of_Uint8
  
  use export enum.Bit_int16_of_bit_uint8
  
end

theory Int32_of_Uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int32.t = (Int32.of_int (Uint8.to_int n))
  
end

theory Bit_int32_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int32_of_Uint8
  
  use export enum.Bit_int32_of_bit_uint8
  
end

theory Int64_of_Uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int64.t = (Int64.of_int (Uint8.to_int n))
  
end

theory Bit_int64_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int64_of_Uint8
  
  use export enum.Bit_int64_of_bit_uint8
  
end

theory Int8_of_Uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int8.t = (Int8.of_int (Uint8.to_int n))
  
end

theory Bit_int8_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int8_of_Uint8
  
  use export enum.Bit_int8_of_bit_uint8
  
end

theory Uint16_of_Uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Uint16.t = (Uint16.of_int (Uint8.to_int n))
  
end

theory Bit_uint16_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Uint16_of_Uint8
  
  use export enum.Bit_uint16_of_bit_uint8
  
end

theory Uint32_of_Uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Uint32.t = (Uint32.of_int (Uint8.to_int n))
  
end

theory Bit_uint32_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Uint32_of_Uint8
  
  use export enum.Bit_uint32_of_bit_uint8
  
end

theory Uint64_of_Uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Uint64.t = (Uint64.of_int (Uint8.to_int n))
  
end

theory Bit_uint64_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Uint64_of_Uint8
  
  use export enum.Bit_uint64_of_bit_uint8
  
end

module Unsafe_uint8

  use why3.Bool.Bool 
  
  use import enum.Uint8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint8

  use why3.Bool.Bool 
  
  use import enum.Uint8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint8

  use why3.Bool.Bool 
  
  use import enum.Bit_uint8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint8

  use why3.Bool.Bool 
  
  use import enum.Bit_uint8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_uint64

  use why3.Bool.Bool 
  
  use import enum.Uint64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint64

  use why3.Bool.Bool 
  
  use import enum.Uint64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint64

  use why3.Bool.Bool 
  
  use import enum.Bit_uint64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint64

  use why3.Bool.Bool 
  
  use import enum.Bit_uint64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_uint32

  use why3.Bool.Bool 
  
  use import enum.Uint32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint32

  use why3.Bool.Bool 
  
  use import enum.Uint32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint32

  use why3.Bool.Bool 
  
  use import enum.Bit_uint32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint32

  use why3.Bool.Bool 
  
  use import enum.Bit_uint32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_uint16

  use why3.Bool.Bool 
  
  use import enum.Uint16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint16

  use why3.Bool.Bool 
  
  use import enum.Uint16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint16

  use why3.Bool.Bool 
  
  use import enum.Bit_uint16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint16

  use why3.Bool.Bool 
  
  use import enum.Bit_uint16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int8

  use why3.Bool.Bool 
  
  use import enum.Int8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int8

  use why3.Bool.Bool 
  
  use import enum.Int8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int8

  use why3.Bool.Bool 
  
  use import enum.Bit_int8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int8

  use why3.Bool.Bool 
  
  use import enum.Bit_int8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int64

  use why3.Bool.Bool 
  
  use import enum.Int64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int64

  use why3.Bool.Bool 
  
  use import enum.Int64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int64

  use why3.Bool.Bool 
  
  use import enum.Bit_int64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int64

  use why3.Bool.Bool 
  
  use import enum.Bit_int64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int32

  use why3.Bool.Bool 
  
  use import enum.Int32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int32

  use why3.Bool.Bool 
  
  use import enum.Int32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int32

  use why3.Bool.Bool 
  
  use import enum.Bit_int32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int32

  use why3.Bool.Bool 
  
  use import enum.Bit_int32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int16

  use why3.Bool.Bool 
  
  use import enum.Int16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int16

  use why3.Bool.Bool 
  
  use import enum.Int16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int16

  use why3.Bool.Bool 
  
  use import enum.Bit_int16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int16

  use why3.Bool.Bool 
  
  use import enum.Bit_int16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Globals_simple

  use why3.Bool.Bool 
  
end

theory Root_voidP

  use why3.Bool.Bool 
  
  use import core.Voidp 
  
end

module Root_voidP_safe

  use why3.Bool.Bool 
  
end

module Root_voidP_unsafe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Value_6_safe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Value_6_unsafe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Map_8_safe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Map_8_unsafe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Key_5_safe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Key_5_unsafe

  use why3.Bool.Bool 
  
end

theory Root___anonstruct_Map_8

  use why3.Bool.Bool 
  
  type __anonstruct_Map_8 
  
end

theory Root___anonstruct_Value_6

  use why3.Bool.Bool 
  
  type __anonstruct_Value_6 
  
end

theory Logic_item_deleted

  use import core.Voidp 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate item_deleted (map_15 : (pointer __anonstruct_Map_8)) (index_6 :
  int) (__anonstruct_Map_8_items_map_15_16_at_L2 : (memory __anonstruct_Map_8
  (pointer voidP))) (__anonstruct_Map_8_items_map_15_16_at_L1 : (memory
  __anonstruct_Map_8 (pointer voidP)))
  (__anonstruct_Item_7_existent_items_45_at_L2 : (memory voidP Int32.t))
  (__anonstruct_Item_7_existent_items_45_at_L1 : (memory voidP Int32.t))
  (__anonstruct_Item_7_value_1_items_45_at_L2 : (memory voidP (pointer
  __anonstruct_Value_6))) (__anonstruct_Item_7_value_1_items_45_at_L1 :
  (memory voidP (pointer __anonstruct_Value_6)))
  (__anonstruct_Item_7___anonstruct_Key_5_b_items_45_at_L2 : (memory voidP
  Int32.t)) (__anonstruct_Item_7___anonstruct_Key_5_b_items_45_at_L1 :
  (memory voidP Int32.t))
  (__anonstruct_Item_7___anonstruct_Key_5_a_items_45_at_L2 : (memory voidP
  Int32.t)) (__anonstruct_Item_7___anonstruct_Key_5_a_items_45_at_L1 :
  (memory voidP Int32.t)) (__anonstruct_Value_6_d_items_45_at_L2 : (memory
  __anonstruct_Value_6 Int32.t)) (__anonstruct_Value_6_d_items_45_at_L1 :
  (memory __anonstruct_Value_6 Int32.t))
  (__anonstruct_Value_6_c_items_45_at_L2 : (memory __anonstruct_Value_6
  Int32.t)) (__anonstruct_Value_6_c_items_45_at_L1 : (memory
  __anonstruct_Value_6 Int32.t))
  =
     ((Int32.(=)
      (select __anonstruct_Item_7___anonstruct_Key_5_a_items_45_at_L1
      (shift (select __anonstruct_Map_8_items_map_15_16_at_L1 map_15)
      index_6))
      (select __anonstruct_Item_7___anonstruct_Key_5_a_items_45_at_L2
      (shift (select __anonstruct_Map_8_items_map_15_16_at_L2 map_15)
      index_6)))
     /\
     ((Int32.(=)
      (select __anonstruct_Item_7___anonstruct_Key_5_b_items_45_at_L1
      (shift (select __anonstruct_Map_8_items_map_15_16_at_L1 map_15)
      index_6))
      (select __anonstruct_Item_7___anonstruct_Key_5_b_items_45_at_L2
      (shift (select __anonstruct_Map_8_items_map_15_16_at_L2 map_15)
      index_6)))
     /\
     ((Int32.(=)
      (select __anonstruct_Value_6_c_items_45_at_L1
      (select __anonstruct_Item_7_value_1_items_45_at_L1
      (shift (select __anonstruct_Map_8_items_map_15_16_at_L1 map_15)
      index_6)))
      (select __anonstruct_Value_6_c_items_45_at_L2
      (select __anonstruct_Item_7_value_1_items_45_at_L2
      (shift (select __anonstruct_Map_8_items_map_15_16_at_L2 map_15)
      index_6))))
     /\
     ((Int32.(=)
      (select __anonstruct_Value_6_d_items_45_at_L1
      (select __anonstruct_Item_7_value_1_items_45_at_L1
      (shift (select __anonstruct_Map_8_items_map_15_16_at_L1 map_15)
      index_6)))
      (select __anonstruct_Value_6_d_items_45_at_L2
      (select __anonstruct_Item_7_value_1_items_45_at_L2
      (shift (select __anonstruct_Map_8_items_map_15_16_at_L2 map_15)
      index_6))))
     /\
     (Int32.(=)
     (select __anonstruct_Item_7_existent_items_45_at_L1
     (shift (select __anonstruct_Map_8_items_map_15_16_at_L1 map_15) index_6))
     (select __anonstruct_Item_7_existent_items_45_at_L2
     (shift (select __anonstruct_Map_8_items_map_15_16_at_L2 map_15) index_6)))))))
  
  
end

theory Logic_items_deleted

  use import core.Voidp 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_item_deleted 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate items_deleted (map_16 : (pointer __anonstruct_Map_8)) (begin_5 :
  int) (end_6 : int) (__anonstruct_Map_8_items_map_16_17_at_L2 : (memory
  __anonstruct_Map_8 (pointer voidP)))
  (__anonstruct_Map_8_items_map_16_17_at_L1 : (memory __anonstruct_Map_8
  (pointer voidP))) (__anonstruct_Item_7_existent_items_57_at_L2 : (memory
  voidP Int32.t)) (__anonstruct_Item_7_existent_items_57_at_L1 : (memory
  voidP Int32.t)) (__anonstruct_Item_7_value_1_items_57_at_L2 : (memory voidP
  (pointer __anonstruct_Value_6)))
  (__anonstruct_Item_7_value_1_items_57_at_L1 : (memory voidP (pointer
  __anonstruct_Value_6)))
  (__anonstruct_Item_7___anonstruct_Key_5_b_items_57_at_L2 : (memory voidP
  Int32.t)) (__anonstruct_Item_7___anonstruct_Key_5_b_items_57_at_L1 :
  (memory voidP Int32.t))
  (__anonstruct_Item_7___anonstruct_Key_5_a_items_57_at_L2 : (memory voidP
  Int32.t)) (__anonstruct_Item_7___anonstruct_Key_5_a_items_57_at_L1 :
  (memory voidP Int32.t)) (__anonstruct_Value_6_d_items_57_at_L2 : (memory
  __anonstruct_Value_6 Int32.t)) (__anonstruct_Value_6_d_items_57_at_L1 :
  (memory __anonstruct_Value_6 Int32.t))
  (__anonstruct_Value_6_c_items_57_at_L2 : (memory __anonstruct_Value_6
  Int32.t)) (__anonstruct_Value_6_c_items_57_at_L1 : (memory
  __anonstruct_Value_6 Int32.t))
  =
     (forall k_3 : int.
      ((((<=) begin_5 k_3) /\ ((<) k_3 end_6)) ->
       (item_deleted map_16 k_3 __anonstruct_Map_8_items_map_16_17_at_L2
       __anonstruct_Map_8_items_map_16_17_at_L1
       __anonstruct_Item_7_existent_items_57_at_L2
       __anonstruct_Item_7_existent_items_57_at_L1
       __anonstruct_Item_7_value_1_items_57_at_L2
       __anonstruct_Item_7_value_1_items_57_at_L1
       __anonstruct_Item_7___anonstruct_Key_5_b_items_57_at_L2
       __anonstruct_Item_7___anonstruct_Key_5_b_items_57_at_L1
       __anonstruct_Item_7___anonstruct_Key_5_a_items_57_at_L2
       __anonstruct_Item_7___anonstruct_Key_5_a_items_57_at_L1
       __anonstruct_Value_6_d_items_57_at_L2
       __anonstruct_Value_6_d_items_57_at_L1
       __anonstruct_Value_6_c_items_57_at_L2
       __anonstruct_Value_6_c_items_57_at_L1)))
  
  
end

theory Axiomatic_ItemsCount

  use import core.Voidp 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_items_deleted 
  
  use enum.Int32 
  
  use import int.Int 
  
  use bool.Bool 
  
  use why3.Bool.Bool 
  
  function count (pointer __anonstruct_Map_8) int int (memory
  __anonstruct_Map_8 (pointer voidP)) (memory voidP Int32.t) :
  int
  
  
  axiom Count_zero #"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 7 65 172#
  "expl:Axiom count_zero"  :
  (forall __anonstruct_Map_8_items_map_2_at_L : (memory __anonstruct_Map_8
   (pointer voidP)).
   (forall __anonstruct_Item_7_existent_items_34_at_L : (memory voidP
    Int32.t).
    (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 9 22 104#
    (forall map_0_1 : (pointer __anonstruct_Map_8).
     (forall begin_0_0 : int.
      (forall end_1 : int.
       (((>=) begin_0_0 end_1) ->
        ((=)
        (count map_0_1 begin_0_0 end_1 __anonstruct_Map_8_items_map_2_at_L
        __anonstruct_Item_7_existent_items_34_at_L) (0)))))))))
  
  axiom Count_one #"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 9 105 235#
  "expl:Axiom count_one"  :
  (forall __anonstruct_Map_8_items_map_2_at_L : (memory __anonstruct_Map_8
   (pointer voidP)).
   (forall __anonstruct_Item_7_existent_items_34_at_L : (memory voidP
    Int32.t).
    (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 11 21 127#
    (forall map_1_0 : (pointer __anonstruct_Map_8).
     (forall index_0 : int.
      ((=)
      (count map_1_0 index_0 (Int.(+) index_0 (1))
      __anonstruct_Map_8_items_map_2_at_L
      __anonstruct_Item_7_existent_items_34_at_L)
      (if
       (Int32.(=)
       (select __anonstruct_Item_7_existent_items_34_at_L
       (shift (select __anonstruct_Map_8_items_map_2_at_L map_1_0) index_0))
       (#"map_c.jc" 62 55 67# "expl:Integer cast" (Int32.of_int (1)))) then
       (1) else (0))))))))
  
  axiom Count_split
  #"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 11 128 308#
  "expl:Axiom count_split"  :
  (forall __anonstruct_Map_8_items_map_2_at_L : (memory __anonstruct_Map_8
   (pointer voidP)).
   (forall __anonstruct_Item_7_existent_items_34_at_L : (memory voidP
    Int32.t).
    (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 13 23 177#
    (forall map_2_0 : (pointer __anonstruct_Map_8).
     (forall begin_1 : int.
      (forall index_0_0 : int.
       (forall end_2 : int.
        ((((<=) begin_1 index_0_0) /\ ((<=) index_0_0 end_2)) ->
         ((=)
         (count map_2_0 begin_1 end_2 __anonstruct_Map_8_items_map_2_at_L
         __anonstruct_Item_7_existent_items_34_at_L)
         (Int.(+)
         (count map_2_0 begin_1 index_0_0 __anonstruct_Map_8_items_map_2_at_L
         __anonstruct_Item_7_existent_items_34_at_L)
         (count map_2_0 index_0_0 end_2 __anonstruct_Map_8_items_map_2_at_L
         __anonstruct_Item_7_existent_items_34_at_L)))))))))))
  
  predicate count_saved_p (map_3 : (pointer __anonstruct_Map_8)) (begin_2 :
  int) (end_3 : int) (__anonstruct_Map_8_items_map_2_at_L2 : (memory
  __anonstruct_Map_8 (pointer voidP))) (__anonstruct_Map_8_items_map_2_at_L1
  : (memory __anonstruct_Map_8 (pointer voidP)))
  (__anonstruct_Item_7_existent_items_34_at_L2 : (memory voidP Int32.t))
  (__anonstruct_Item_7_existent_items_34_at_L1 : (memory voidP Int32.t))
  =
     ((=)
     (count map_3 begin_2 end_3 __anonstruct_Map_8_items_map_2_at_L1
     __anonstruct_Item_7_existent_items_34_at_L1)
     (count map_3 begin_2 end_3 __anonstruct_Map_8_items_map_2_at_L2
     __anonstruct_Item_7_existent_items_34_at_L2))
  
  
  axiom Count_saved
  #"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 17 69 234#
  "expl:Axiom count_saved"  :
  (forall __anonstruct_Map_8_items_map_2_at_L2 : (memory __anonstruct_Map_8
   (pointer voidP)).
   (forall __anonstruct_Map_8_items_map_2_at_L1 : (memory __anonstruct_Map_8
    (pointer voidP)).
    (forall __anonstruct_Item_7_existent_items_34_at_L2 : (memory voidP
     Int32.t).
     (forall __anonstruct_Item_7_existent_items_34_at_L1 : (memory voidP
      Int32.t).
      (forall __anonstruct_Item_7_value_1_items_34_at_L2 : (memory voidP
       (pointer __anonstruct_Value_6)).
       (forall __anonstruct_Item_7_value_1_items_34_at_L1 : (memory voidP
        (pointer __anonstruct_Value_6)).
        (forall __anonstruct_Item_7___anonstruct_Key_5_b_items_34_at_L2 :
         (memory voidP Int32.t).
         (forall __anonstruct_Item_7___anonstruct_Key_5_b_items_34_at_L1 :
          (memory voidP Int32.t).
          (forall __anonstruct_Item_7___anonstruct_Key_5_a_items_34_at_L2 :
           (memory voidP Int32.t).
           (forall __anonstruct_Item_7___anonstruct_Key_5_a_items_34_at_L1 :
            (memory voidP Int32.t).
            (forall __anonstruct_Value_6_d_items_34_at_L2 : (memory
             __anonstruct_Value_6 Int32.t).
             (forall __anonstruct_Value_6_d_items_34_at_L1 : (memory
              __anonstruct_Value_6 Int32.t).
              (forall __anonstruct_Value_6_c_items_34_at_L2 : (memory
               __anonstruct_Value_6 Int32.t).
               (forall __anonstruct_Value_6_c_items_34_at_L1 : (memory
                __anonstruct_Value_6 Int32.t).
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 19 31 162#
                (forall map_4 : (pointer __anonstruct_Map_8).
                 (forall begin_3 : int.
                  (forall end_4 : int.
                   ((items_deleted map_4 begin_3 end_4
                    __anonstruct_Map_8_items_map_2_at_L2
                    __anonstruct_Map_8_items_map_2_at_L1
                    __anonstruct_Item_7_existent_items_34_at_L2
                    __anonstruct_Item_7_existent_items_34_at_L1
                    __anonstruct_Item_7_value_1_items_34_at_L2
                    __anonstruct_Item_7_value_1_items_34_at_L1
                    __anonstruct_Item_7___anonstruct_Key_5_b_items_34_at_L2
                    __anonstruct_Item_7___anonstruct_Key_5_b_items_34_at_L1
                    __anonstruct_Item_7___anonstruct_Key_5_a_items_34_at_L2
                    __anonstruct_Item_7___anonstruct_Key_5_a_items_34_at_L1
                    __anonstruct_Value_6_d_items_34_at_L2
                    __anonstruct_Value_6_d_items_34_at_L1
                    __anonstruct_Value_6_c_items_34_at_L2
                    __anonstruct_Value_6_c_items_34_at_L1) ->
                    (count_saved_p map_4 begin_3 end_4
                    __anonstruct_Map_8_items_map_2_at_L2
                    __anonstruct_Map_8_items_map_2_at_L1
                    __anonstruct_Item_7_existent_items_34_at_L2
                    __anonstruct_Item_7_existent_items_34_at_L1))))))))))))))))))))
  
  axiom Count_existent
  #"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 20 94 274#
  "expl:Axiom count_existent"  :
  (forall __anonstruct_Map_8_items_map_2_at_L : (memory __anonstruct_Map_8
   (pointer voidP)).
   (forall __anonstruct_Item_7_existent_items_34_at_L : (memory voidP
    Int32.t).
    (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 22 26 177#
    (forall map_5 : (pointer __anonstruct_Map_8).
     (forall begin_4 : int.
      (forall end_5 : int.
       ((forall k_1 : int.
         ((((<=) begin_4 k_1) /\ ((<) k_1 end_5)) ->
          ((=)
          (Bool.notb
          ((<>)
          (Int32.to_int
          (select __anonstruct_Item_7_existent_items_34_at_L
          (shift (select __anonstruct_Map_8_items_map_2_at_L map_5) k_1)))
          (0))) ((<>) (1) (0)))))
       \/
       ((=)
       (count map_5 begin_4 end_5 __anonstruct_Map_8_items_map_2_at_L
       __anonstruct_Item_7_existent_items_34_at_L) (0)))))))))
  
  function all_count (map_6 : (pointer __anonstruct_Map_8))
  (__anonstruct_Map_8_capacity_map_6_4_at_L : (memory __anonstruct_Map_8
  Int32.t)) (__anonstruct_Map_8_items_map_6_4_at_L : (memory
  __anonstruct_Map_8 (pointer voidP)))
  (__anonstruct_Item_7_existent_items_83_at_L : (memory voidP Int32.t)) : int
  =
     (count map_6 (0)
     (Int32.to_int (select __anonstruct_Map_8_capacity_map_6_4_at_L map_6))
     __anonstruct_Map_8_items_map_6_4_at_L
     __anonstruct_Item_7_existent_items_83_at_L)
  
  
end

module Exceptions

  use why3.Bool.Bool 
  
  exception Goto_return_label_0_exc unit
  
  exception Goto_return_label_1_exc unit
  
  exception Goto_while_0_break_exc unit
  
  exception Goto_while_0_break_0_exc unit
  
  exception Goto_while_0_break_1_exc unit
  
  exception Loop_continue_exc unit
  
  exception Loop_exit_exc unit
  
  exception Return_label_exc unit
  
end

theory Struct_voidP

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  use import core.Voidp_tag_id 
  
  predicate frame_tag_struct_voidP (p : (pointer voidP)) (old_voidP_tag_table
  : (tag_table voidP)) (voidP_tag_table : (tag_table voidP))
  =
     ((tag_extends old_voidP_tag_table voidP_tag_table) /\
     (alloc_tag_block old_voidP_tag_table voidP_tag_table p))
  
  predicate frame_free_struct_voidP (p : (pointer voidP))
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((free_extends old_voidP_alloc_table voidP_alloc_table) /\
     (free_block old_voidP_alloc_table voidP_alloc_table p))
  
  predicate frame_alloc_struct_voidP (p : (pointer voidP)) (n : int)
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((alloc_extends old_voidP_alloc_table voidP_alloc_table) /\
     (alloc_block old_voidP_alloc_table voidP_alloc_table p n))
  
  predicate fresh_tag_struct_voidP (p : (pointer voidP)) (n : int)
  (voidP_tag_table : (tag_table voidP))
  = (tag_fresh voidP_tag_table p)
  
  predicate fresh_alloc_struct_voidP (p : (pointer voidP)) (n : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (alloc_fresh voidP_alloc_table p)
  
  predicate container_of_singleton_struct_voidP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP)) = true
  
  predicate container_of_struct_voidP (p : (pointer voidP)) (l : int) (r :
  int) (voidP_tag_table : (tag_table voidP)) = true
  
  predicate typeof_singleton_struct_voidP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = ((=) (typeof voidP_tag_table p) voidP_tag)
  
  predicate typeof_struct_voidP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     (((=) (typeof voidP_tag_table p) voidP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof voidP_tag_table (shift p i)) voidP_tag))))
  
  predicate instanceof_singleton_struct_voidP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = (instanceof voidP_tag_table p voidP_tag)
  
  predicate instanceof_struct_voidP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     ((instanceof voidP_tag_table p voidP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof voidP_tag_table (shift p i) voidP_tag))))
  
  predicate right_valid_struct_voidP (p : (pointer voidP)) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  = ((>=) (offset_max voidP_alloc_table p) b)
  
  predicate left_valid_struct_voidP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = ((<=) (offset_min voidP_alloc_table p) a)
  
  predicate strict_left_valid_struct_voidP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = ((=) (offset_min voidP_alloc_table p) a)
  
  predicate valid_struct_voidP (p : (pointer voidP)) (a : int) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  =
     (((<=) (offset_min voidP_alloc_table p) a) /\
     ((>=) (offset_max voidP_alloc_table p) b))
  
  predicate strict_valid_struct_voidP (p : (pointer voidP)) (a : int) (b :
  int) (voidP_alloc_table : (alloc_table voidP))
  =
     (((=) (offset_min voidP_alloc_table p) a) /\
     ((=) (offset_max voidP_alloc_table p) b))
  
end

theory Struct___anonstruct_Value_6

  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import core.Tag_id 
  
  use import core.Tag 
  
  use import Root___anonstruct_Value_6 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  function __anonstruct_Value_6_tag  : (tag_id
  __anonstruct_Value_6)
  
  axiom U___anonstruct_Value_6_parenttag_bottom  :
  (parenttag __anonstruct_Value_6_tag bottom_tag)
  
  axiom U___anonstruct_Value_6_is_final  :
  (forall __anonstruct_Value_6_tag_table : (tag_table __anonstruct_Value_6).
   (forall p : (pointer __anonstruct_Value_6).
    ((instanceof __anonstruct_Value_6_tag_table p __anonstruct_Value_6_tag)
     ->
     ((=) (typeof __anonstruct_Value_6_tag_table p) __anonstruct_Value_6_tag))))
  
  predicate frame_tag_struct___anonstruct_Value_6 (p : (pointer
  __anonstruct_Value_6)) (old___anonstruct_Value_6_tag_table : (tag_table
  __anonstruct_Value_6)) (__anonstruct_Value_6_tag_table : (tag_table
  __anonstruct_Value_6))
  =
     ((tag_extends old___anonstruct_Value_6_tag_table
      __anonstruct_Value_6_tag_table)
     /\
     (alloc_tag_block old___anonstruct_Value_6_tag_table
     __anonstruct_Value_6_tag_table p))
  
  predicate frame_free_struct___anonstruct_Value_6 (p : (pointer
  __anonstruct_Value_6)) (old___anonstruct_Value_6_alloc_table : (alloc_table
  __anonstruct_Value_6)) (__anonstruct_Value_6_alloc_table : (alloc_table
  __anonstruct_Value_6))
  =
     ((free_extends old___anonstruct_Value_6_alloc_table
      __anonstruct_Value_6_alloc_table)
     /\
     (free_block old___anonstruct_Value_6_alloc_table
     __anonstruct_Value_6_alloc_table p))
  
  predicate frame_alloc_struct___anonstruct_Value_6 (p : (pointer
  __anonstruct_Value_6)) (n : int) (old___anonstruct_Value_6_alloc_table :
  (alloc_table __anonstruct_Value_6)) (__anonstruct_Value_6_alloc_table :
  (alloc_table __anonstruct_Value_6))
  =
     ((alloc_extends old___anonstruct_Value_6_alloc_table
      __anonstruct_Value_6_alloc_table)
     /\
     (alloc_block old___anonstruct_Value_6_alloc_table
     __anonstruct_Value_6_alloc_table p n))
  
  predicate fresh_tag_struct___anonstruct_Value_6 (p : (pointer
  __anonstruct_Value_6)) (n : int) (__anonstruct_Value_6_tag_table :
  (tag_table __anonstruct_Value_6))
  = (tag_fresh __anonstruct_Value_6_tag_table p)
  
  predicate fresh_alloc_struct___anonstruct_Value_6 (p : (pointer
  __anonstruct_Value_6)) (n : int) (__anonstruct_Value_6_alloc_table :
  (alloc_table __anonstruct_Value_6))
  = (alloc_fresh __anonstruct_Value_6_alloc_table p)
  
  predicate container_of_singleton_struct___anonstruct_Value_6 (p : (pointer
  __anonstruct_Value_6)) (__anonstruct_Value_6_tag_table : (tag_table
  __anonstruct_Value_6)) = true
  
  predicate container_of_struct___anonstruct_Value_6 (p : (pointer
  __anonstruct_Value_6)) (l : int) (r : int) (__anonstruct_Value_6_tag_table
  : (tag_table __anonstruct_Value_6)) = true
  
  predicate typeof_singleton_struct___anonstruct_Value_6 (p : (pointer
  __anonstruct_Value_6)) (__anonstruct_Value_6_tag_table : (tag_table
  __anonstruct_Value_6))
  = ((=) (typeof __anonstruct_Value_6_tag_table p) __anonstruct_Value_6_tag)
  
  predicate typeof_struct___anonstruct_Value_6 (p : (pointer
  __anonstruct_Value_6)) (l : int) (r : int) (__anonstruct_Value_6_tag_table
  : (tag_table __anonstruct_Value_6))
  =
     (((=) (typeof __anonstruct_Value_6_tag_table p) __anonstruct_Value_6_tag)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof __anonstruct_Value_6_tag_table (shift p i))
       __anonstruct_Value_6_tag))))
  
  predicate instanceof_singleton_struct___anonstruct_Value_6 (p : (pointer
  __anonstruct_Value_6)) (__anonstruct_Value_6_tag_table : (tag_table
  __anonstruct_Value_6))
  = (instanceof __anonstruct_Value_6_tag_table p __anonstruct_Value_6_tag)
  
  predicate instanceof_struct___anonstruct_Value_6 (p : (pointer
  __anonstruct_Value_6)) (l : int) (r : int) (__anonstruct_Value_6_tag_table
  : (tag_table __anonstruct_Value_6))
  =
     ((instanceof __anonstruct_Value_6_tag_table p __anonstruct_Value_6_tag)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof __anonstruct_Value_6_tag_table (shift p i)
       __anonstruct_Value_6_tag))))
  
  predicate right_valid_struct___anonstruct_Value_6 (p : (pointer
  __anonstruct_Value_6)) (b : int) (__anonstruct_Value_6_alloc_table :
  (alloc_table __anonstruct_Value_6))
  = ((>=) (offset_max __anonstruct_Value_6_alloc_table p) b)
  
  predicate left_valid_struct___anonstruct_Value_6 (p : (pointer
  __anonstruct_Value_6)) (a : int) (__anonstruct_Value_6_alloc_table :
  (alloc_table __anonstruct_Value_6))
  = ((<=) (offset_min __anonstruct_Value_6_alloc_table p) a)
  
  predicate strict_left_valid_struct___anonstruct_Value_6 (p : (pointer
  __anonstruct_Value_6)) (a : int) (__anonstruct_Value_6_alloc_table :
  (alloc_table __anonstruct_Value_6))
  = ((=) (offset_min __anonstruct_Value_6_alloc_table p) a)
  
  predicate valid_struct___anonstruct_Value_6 (p : (pointer
  __anonstruct_Value_6)) (a : int) (b : int)
  (__anonstruct_Value_6_alloc_table : (alloc_table __anonstruct_Value_6))
  =
     (((<=) (offset_min __anonstruct_Value_6_alloc_table p) a) /\
     ((>=) (offset_max __anonstruct_Value_6_alloc_table p) b))
  
  predicate strict_valid_struct___anonstruct_Value_6 (p : (pointer
  __anonstruct_Value_6)) (a : int) (b : int)
  (__anonstruct_Value_6_alloc_table : (alloc_table __anonstruct_Value_6))
  =
     (((=) (offset_min __anonstruct_Value_6_alloc_table p) a) /\
     ((=) (offset_max __anonstruct_Value_6_alloc_table p) b))
  
  axiom U___anonstruct_Value_6_int  :
  ((=) (int_of_tag __anonstruct_Value_6_tag) (7))
  
end

theory Struct___anonstruct_Item_7

  use import core.Voidp_tag_id 
  
  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import core.Tag_id 
  
  use import core.Tag 
  
  use import Struct_voidP 
  
  use import Struct___anonstruct_Value_6 
  
  use import Root___anonstruct_Value_6 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  function __anonstruct_Item_7_tag  : (tag_id
  voidP)
  
  axiom U___anonstruct_Item_7_parenttag_voidP  :
  (parenttag __anonstruct_Item_7_tag voidP_tag)
  
  axiom U___anonstruct_Item_7_is_final  :
  (forall voidP_tag_table : (tag_table voidP).
   (forall p : (pointer voidP).
    ((instanceof voidP_tag_table p __anonstruct_Item_7_tag) ->
     ((=) (typeof voidP_tag_table p) __anonstruct_Item_7_tag))))
  
  predicate frame_tag_struct___anonstruct_Item_7 (p : (pointer voidP))
  (old___anonstruct_Value_6_tag_table : (tag_table __anonstruct_Value_6))
  (__anonstruct_Value_6_tag_table : (tag_table __anonstruct_Value_6))
  (old_voidP_tag_table : (tag_table voidP)) (voidP_tag_table : (tag_table
  voidP)) (__anonstruct_Item_7_value_1 : (memory voidP (pointer
  __anonstruct_Value_6)))
  =
     ((tag_extends old___anonstruct_Value_6_tag_table
      __anonstruct_Value_6_tag_table)
     /\
     ((alloc_tag_blockset old___anonstruct_Value_6_tag_table
      __anonstruct_Value_6_tag_table
      (pset_singleton (select __anonstruct_Item_7_value_1 p)))
     /\
     ((tag_extends old_voidP_tag_table voidP_tag_table) /\
     (alloc_tag_block old_voidP_tag_table voidP_tag_table p))))
  
  predicate frame_free_struct___anonstruct_Item_7 (p : (pointer voidP))
  (old___anonstruct_Value_6_alloc_table : (alloc_table __anonstruct_Value_6))
  (__anonstruct_Value_6_alloc_table : (alloc_table __anonstruct_Value_6))
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP)) (__anonstruct_Item_7_value_1 : (memory voidP (pointer
  __anonstruct_Value_6)))
  =
     ((free_extends old___anonstruct_Value_6_alloc_table
      __anonstruct_Value_6_alloc_table)
     /\
     ((alloc_blockset old___anonstruct_Value_6_alloc_table
      __anonstruct_Value_6_alloc_table
      (pset_singleton (select __anonstruct_Item_7_value_1 p)))
     /\
     ((free_extends old_voidP_alloc_table voidP_alloc_table) /\
     (free_block old_voidP_alloc_table voidP_alloc_table p))))
  
  predicate frame_alloc_struct___anonstruct_Item_7 (p : (pointer voidP)) (n :
  int) (old___anonstruct_Value_6_alloc_table : (alloc_table
  __anonstruct_Value_6)) (__anonstruct_Value_6_alloc_table : (alloc_table
  __anonstruct_Value_6)) (old_voidP_alloc_table : (alloc_table voidP))
  (voidP_alloc_table : (alloc_table voidP)) (__anonstruct_Item_7_value_1 :
  (memory voidP (pointer __anonstruct_Value_6)))
  =
     ((alloc_extends old___anonstruct_Value_6_alloc_table
      __anonstruct_Value_6_alloc_table)
     /\
     ((alloc_blockset old___anonstruct_Value_6_alloc_table
      __anonstruct_Value_6_alloc_table
      (pset_singleton (select __anonstruct_Item_7_value_1 p)))
     /\
     ((alloc_extends old_voidP_alloc_table voidP_alloc_table) /\
     (alloc_block old_voidP_alloc_table voidP_alloc_table p n))))
  
  predicate fresh_tag_struct___anonstruct_Item_7 (p : (pointer voidP)) (n :
  int) (__anonstruct_Value_6_tag_table : (tag_table __anonstruct_Value_6))
  (voidP_tag_table : (tag_table voidP)) (__anonstruct_Item_7_value_1 :
  (memory voidP (pointer __anonstruct_Value_6)))
  =
     ((fresh_tag_struct_voidP p n voidP_tag_table) /\
     ((fresh_tag_struct___anonstruct_Value_6
      (select __anonstruct_Item_7_value_1 p) (0)
      __anonstruct_Value_6_tag_table)
     /\
     (forall i : int.
      ((instanceof voidP_tag_table (shift p i) __anonstruct_Item_7_tag) ->
       (fresh_tag_struct___anonstruct_Value_6
       (select __anonstruct_Item_7_value_1 (shift p i)) (0)
       __anonstruct_Value_6_tag_table)))))
  
  predicate fresh_alloc_struct___anonstruct_Item_7 (p : (pointer voidP)) (n :
  int) (__anonstruct_Value_6_alloc_table : (alloc_table
  __anonstruct_Value_6)) (voidP_alloc_table : (alloc_table voidP))
  (__anonstruct_Item_7_value_1 : (memory voidP (pointer
  __anonstruct_Value_6)))
  =
     ((fresh_alloc_struct_voidP p n voidP_alloc_table) /\
     ((fresh_alloc_struct___anonstruct_Value_6
      (select __anonstruct_Item_7_value_1 p) (0)
      __anonstruct_Value_6_alloc_table)
     /\
     (forall i : int.
      ((((<=) (0) i) /\ ((<=) i n)) ->
       (fresh_alloc_struct___anonstruct_Value_6
       (select __anonstruct_Item_7_value_1 (shift p i)) (0)
       __anonstruct_Value_6_alloc_table)))))
  
  predicate container_of_singleton_struct___anonstruct_Item_7 (p : (pointer
  voidP)) (__anonstruct_Value_6_tag_table : (tag_table __anonstruct_Value_6))
  (voidP_tag_table : (tag_table voidP)) (__anonstruct_Item_7_value_1 :
  (memory voidP (pointer __anonstruct_Value_6)))
  =
     (container_of_singleton_struct___anonstruct_Value_6
     (select __anonstruct_Item_7_value_1 p) __anonstruct_Value_6_tag_table)
  
  predicate container_of_struct___anonstruct_Item_7 (p : (pointer voidP)) (l
  : int) (r : int) (__anonstruct_Value_6_tag_table : (tag_table
  __anonstruct_Value_6)) (voidP_tag_table : (tag_table voidP))
  (__anonstruct_Item_7_value_1 : (memory voidP (pointer
  __anonstruct_Value_6)))
  =
     ((container_of_singleton_struct___anonstruct_Value_6
      (select __anonstruct_Item_7_value_1 p) __anonstruct_Value_6_tag_table)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (container_of_singleton_struct___anonstruct_Value_6
       (select __anonstruct_Item_7_value_1 (shift p i))
       __anonstruct_Value_6_tag_table))))
  
  predicate typeof_singleton_struct___anonstruct_Item_7 (p : (pointer voidP))
  (__anonstruct_Value_6_tag_table : (tag_table __anonstruct_Value_6))
  (voidP_tag_table : (tag_table voidP)) (__anonstruct_Item_7_value_1 :
  (memory voidP (pointer __anonstruct_Value_6)))
  =
     (((=) (typeof voidP_tag_table p) __anonstruct_Item_7_tag) /\
     (typeof_singleton_struct___anonstruct_Value_6
     (select __anonstruct_Item_7_value_1 p) __anonstruct_Value_6_tag_table))
  
  predicate typeof_struct___anonstruct_Item_7 (p : (pointer voidP)) (l : int)
  (r : int) (__anonstruct_Value_6_tag_table : (tag_table
  __anonstruct_Value_6)) (voidP_tag_table : (tag_table voidP))
  (__anonstruct_Item_7_value_1 : (memory voidP (pointer
  __anonstruct_Value_6)))
  =
     (((=) (typeof voidP_tag_table p) __anonstruct_Item_7_tag) /\
     ((typeof_singleton_struct___anonstruct_Value_6
      (select __anonstruct_Item_7_value_1 p) __anonstruct_Value_6_tag_table)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (((=) (typeof voidP_tag_table (shift p i)) __anonstruct_Item_7_tag) /\
       (typeof_singleton_struct___anonstruct_Value_6
       (select __anonstruct_Item_7_value_1 (shift p i))
       __anonstruct_Value_6_tag_table))))))
  
  predicate instanceof_singleton_struct___anonstruct_Item_7 (p : (pointer
  voidP)) (__anonstruct_Value_6_tag_table : (tag_table __anonstruct_Value_6))
  (voidP_tag_table : (tag_table voidP)) (__anonstruct_Item_7_value_1 :
  (memory voidP (pointer __anonstruct_Value_6)))
  =
     ((instanceof voidP_tag_table p __anonstruct_Item_7_tag) /\
     (instanceof_singleton_struct___anonstruct_Value_6
     (select __anonstruct_Item_7_value_1 p) __anonstruct_Value_6_tag_table))
  
  predicate instanceof_struct___anonstruct_Item_7 (p : (pointer voidP)) (l :
  int) (r : int) (__anonstruct_Value_6_tag_table : (tag_table
  __anonstruct_Value_6)) (voidP_tag_table : (tag_table voidP))
  (__anonstruct_Item_7_value_1 : (memory voidP (pointer
  __anonstruct_Value_6)))
  =
     ((instanceof voidP_tag_table p __anonstruct_Item_7_tag) /\
     ((instanceof_singleton_struct___anonstruct_Value_6
      (select __anonstruct_Item_7_value_1 p) __anonstruct_Value_6_tag_table)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((instanceof voidP_tag_table (shift p i) __anonstruct_Item_7_tag) /\
       (instanceof_singleton_struct___anonstruct_Value_6
       (select __anonstruct_Item_7_value_1 (shift p i))
       __anonstruct_Value_6_tag_table))))))
  
  predicate right_valid_struct___anonstruct_Item_7 (p : (pointer voidP)) (b :
  int) (__anonstruct_Value_6_alloc_table : (alloc_table
  __anonstruct_Value_6)) (voidP_alloc_table : (alloc_table voidP))
  (__anonstruct_Item_7_value_1 : (memory voidP (pointer
  __anonstruct_Value_6)))
  =
     ((right_valid_struct_voidP p b voidP_alloc_table) /\
     (right_valid_struct___anonstruct_Value_6
     (select __anonstruct_Item_7_value_1 p) (0)
     __anonstruct_Value_6_alloc_table))
  
  predicate left_valid_struct___anonstruct_Item_7 (p : (pointer voidP)) (a :
  int) (__anonstruct_Value_6_alloc_table : (alloc_table
  __anonstruct_Value_6)) (voidP_alloc_table : (alloc_table voidP))
  (__anonstruct_Item_7_value_1 : (memory voidP (pointer
  __anonstruct_Value_6)))
  =
     ((left_valid_struct_voidP p a voidP_alloc_table) /\
     (left_valid_struct___anonstruct_Value_6
     (select __anonstruct_Item_7_value_1 p) (0)
     __anonstruct_Value_6_alloc_table))
  
  predicate strict_left_valid_struct___anonstruct_Item_7 (p : (pointer
  voidP)) (a : int) (__anonstruct_Value_6_alloc_table : (alloc_table
  __anonstruct_Value_6)) (voidP_alloc_table : (alloc_table voidP))
  (__anonstruct_Item_7_value_1 : (memory voidP (pointer
  __anonstruct_Value_6)))
  =
     ((strict_left_valid_struct_voidP p a voidP_alloc_table) /\
     (left_valid_struct___anonstruct_Value_6
     (select __anonstruct_Item_7_value_1 p) (0)
     __anonstruct_Value_6_alloc_table))
  
  predicate valid_struct___anonstruct_Item_7 (p : (pointer voidP)) (a : int)
  (b : int) (__anonstruct_Value_6_alloc_table : (alloc_table
  __anonstruct_Value_6)) (voidP_alloc_table : (alloc_table voidP))
  (__anonstruct_Item_7_value_1 : (memory voidP (pointer
  __anonstruct_Value_6)))
  =
     ((valid_struct_voidP p a b voidP_alloc_table) /\
     ((valid_struct___anonstruct_Value_6
      (select __anonstruct_Item_7_value_1 p) (0) (0)
      __anonstruct_Value_6_alloc_table)
     /\
     (forall i : int.
      ((((<=) a i) /\ ((<=) i b)) ->
       (valid_struct___anonstruct_Value_6
       (select __anonstruct_Item_7_value_1 (shift p i)) (0) (0)
       __anonstruct_Value_6_alloc_table)))))
  
  predicate strict_valid_struct___anonstruct_Item_7 (p : (pointer voidP)) (a
  : int) (b : int) (__anonstruct_Value_6_alloc_table : (alloc_table
  __anonstruct_Value_6)) (voidP_alloc_table : (alloc_table voidP))
  (__anonstruct_Item_7_value_1 : (memory voidP (pointer
  __anonstruct_Value_6)))
  =
     ((strict_valid_struct_voidP p a b voidP_alloc_table) /\
     ((valid_struct___anonstruct_Value_6
      (select __anonstruct_Item_7_value_1 p) (0) (0)
      __anonstruct_Value_6_alloc_table)
     /\
     (forall i : int.
      ((((<=) a i) /\ ((<=) i b)) ->
       (valid_struct___anonstruct_Value_6
       (select __anonstruct_Item_7_value_1 (shift p i)) (0) (0)
       __anonstruct_Value_6_alloc_table)))))
  
  axiom U___anonstruct_Item_7_int  :
  ((=) (int_of_tag __anonstruct_Item_7_tag) (4))
  
end

module Struct___anonstruct_Item_7_unsafe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Item_7 
  
  use import Root___anonstruct_Value_6 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct___anonstruct_Item_7
  (p : (pointer voidP)) 
   (__anonstruct_Value_6_alloc_table : ref (alloc_table
    __anonstruct_Value_6)) 
    (voidP_alloc_table : ref (alloc_table voidP)) 
     (__anonstruct_Item_7_value_1 : (memory voidP (pointer
      __anonstruct_Value_6))) : unit
      requires {
        (("expl:Deallocation" ((=) p null)) \/
        (freeable !voidP_alloc_table p)) }
      writes { __anonstruct_Value_6_alloc_table, voidP_alloc_table }
      ensures {
        ((((=) p null) /\
         (((=) !__anonstruct_Value_6_alloc_table (old
          !__anonstruct_Value_6_alloc_table))
         /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))))
        \/
        ((frame_free_struct___anonstruct_Item_7 p (old
         !__anonstruct_Value_6_alloc_table) !__anonstruct_Value_6_alloc_table
         (old !voidP_alloc_table) !voidP_alloc_table
         __anonstruct_Item_7_value_1)
        /\
        (fresh_alloc_struct___anonstruct_Item_7 p
        (offset_max (old !voidP_alloc_table) p)
        !__anonstruct_Value_6_alloc_table !voidP_alloc_table
        __anonstruct_Item_7_value_1))) }
  
  val allocate_struct___anonstruct_Item_7_requires
  (n : int) 
   (__anonstruct_Value_6_alloc_table : ref (alloc_table
    __anonstruct_Value_6)) 
    (voidP_alloc_table : ref (alloc_table voidP)) 
     (__anonstruct_Value_6_tag_table : ref (tag_table __anonstruct_Value_6)) 
      (voidP_tag_table : ref (tag_table voidP)) 
       (__anonstruct_Item_7_value_1 : (memory voidP (pointer
        __anonstruct_Value_6))) : (pointer voidP)
        requires { ((>=) n (0)) } writes { __anonstruct_Value_6_alloc_table,
        __anonstruct_Value_6_tag_table, voidP_alloc_table, voidP_tag_table }
        ensures {
          ((strict_valid_struct___anonstruct_Item_7 result (0)
           (Int.(-) n (1)) !__anonstruct_Value_6_alloc_table
           !voidP_alloc_table __anonstruct_Item_7_value_1)
          /\
          ((frame_alloc_struct___anonstruct_Item_7 result n (old
           !__anonstruct_Value_6_alloc_table)
           !__anonstruct_Value_6_alloc_table (old !voidP_alloc_table)
           !voidP_alloc_table __anonstruct_Item_7_value_1)
          /\
          ((frame_tag_struct___anonstruct_Item_7 result (old
           !__anonstruct_Value_6_tag_table) !__anonstruct_Value_6_tag_table
           (old !voidP_tag_table) !voidP_tag_table
           __anonstruct_Item_7_value_1)
          /\
          ((fresh_alloc_struct___anonstruct_Item_7 result (Int.(-) n (1))
           (old !__anonstruct_Value_6_alloc_table) (old !voidP_alloc_table)
           __anonstruct_Item_7_value_1)
          /\
          ((fresh_tag_struct___anonstruct_Item_7 result (Int.(-) n (1)) (old
           !__anonstruct_Value_6_tag_table) (old !voidP_tag_table)
           __anonstruct_Item_7_value_1)
          /\
          ((typeof_struct___anonstruct_Item_7 result (0) n
           !__anonstruct_Value_6_tag_table !voidP_tag_table
           __anonstruct_Item_7_value_1)
          /\
          (container_of_struct___anonstruct_Item_7 result (0) n
          !__anonstruct_Value_6_tag_table !voidP_tag_table
          __anonstruct_Item_7_value_1))))))) }
  
end

module Safe_uint64_of_Safe_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint64.t
   requires { (Uint64.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int32.to_int n)) }
  
end

module Function_initializeMap_safety
#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 126 4 37#
"expl:initializeMap, safety"

  use import core.Voidp 
  
  use import core.Upd_safe 
  
  use import core.Upd_offset_safe 
  
  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Item_7_unsafe 
  
  use import core.Shift_safe 
  
  use Safe_uint64_of_Safe_int32 
  
  use Safe_uint64 
  
  use Safe_int32 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Exceptions 
  
  use import core.Eq_pointer_safe 
  
  use bool.Bool 
  
  use import core.Alloc_table 
  
  use import core.Acc_safe 
  
  use why3.Bool.Bool 
  
  let initializeMap #"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 126 4 37#
  "expl:Function initializeMap, safety" =
  fun
   (map_1 : (pointer __anonstruct_Map_8)) (size : Int32.t)
   (__anonstruct_Map_8_map_1_23_alloc_table : ref (alloc_table
   __anonstruct_Map_8)) (__anonstruct_Value_6_items_51_alloc_table : ref
   (alloc_table __anonstruct_Value_6)) (voidP_items_51_alloc_table : ref
   (alloc_table voidP)) (voidP_items_51_tag_table : ref (tag_table voidP))
   (__anonstruct_Value_6_items_51_tag_table : ref (tag_table
   __anonstruct_Value_6)) (__anonstruct_Item_7_existent_items_51 : ref
   (memory voidP Int32.t)) (__anonstruct_Map_8_items_map_1_23 : ref (memory
   __anonstruct_Map_8 (pointer voidP))) (__anonstruct_Map_8_capacity_map_1_23
   : ref (memory __anonstruct_Map_8 Int32.t))
   (__anonstruct_Map_8_count_map_1_23 : ref (memory __anonstruct_Map_8
   Int32.t)) (__anonstruct_Item_7_value_1_items_51 : (memory voidP (pointer
   __anonstruct_Value_6))) 
   requires {
   (#"map_c.jc" 228 12 243#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 115 16 24#
    (Int32.(>) size (#"map_c.jc" 228 29 41# "expl:Integer cast" (Int32.of_int
    (0)))))
   /\
   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 116 16 27#
   (#"map_c.jc" 228 12 243#
   ((#"map_c.jc" 228 12 243#
    ((<=) (offset_min !__anonstruct_Map_8_map_1_23_alloc_table map_1) (0)))
   /\
   (#"map_c.jc" 228 12 243#
   ((#"map_c.jc" 228 12 243#
    ((>=) (offset_max !__anonstruct_Map_8_map_1_23_alloc_table map_1) (0)))
   /\ (#"map_c.jc" 228 12 243# ((=) true true))))))))) }
   ensures { ("expl:Postcondition" true) }  ->
   'Init:
   (let return = ref (Safe_int32.any_  () ) in
   try
    begin
    (let i_3 = ref (Safe_int32.any_  () ) in
    (let __retres = ref (Safe_int32.any_  () ) in
    try
     begin
     (if
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 128 8 17#
     (Safe_int32.(<=)  size
      (#"map_c.jc" 253 27 39# "expl:Integer cast" (Safe_int32.of_int (0))) ))
     then
      begin
      (__retres :=
       (let _jessie_39 =
       (#"map_c.jc" 254 29 42# "expl:Integer cast"
       (Safe_int32.of_int  (Int.(-_)  (1) ) )) in
       begin
       (assert {
       (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 129 8 18#
       "expl:Pointer index bounds" true) }); _jessie_39 end));
       (raise (Return_label_exc ())) end else ());
      begin
      (let _jessie_59 =
      (let _jessie_58 =
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 133 17 44#
      "expl:Allocation size"
      (allocate_struct___anonstruct_Item_7_requires 
       (Safe_uint64.to_int 
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 133 24 28#
        "expl:Integer cast" (Safe_uint64_of_Safe_int32.cast  size )) )
       __anonstruct_Value_6_items_51_alloc_table voidP_items_51_alloc_table
       __anonstruct_Value_6_items_51_tag_table voidP_items_51_tag_table
       __anonstruct_Item_7_value_1_items_51 )) in
      begin
      (assert {
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 133 17 44#
      "expl:Pointer index bounds" true) }); _jessie_58 end) in
      (let _jessie_60 = map_1 in
      (let _jessie_61 = (0) in
      (let _jessie_62 = _jessie_60 in
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 133 17 44#
      "expl:Pointer dereference"
      (upd  !__anonstruct_Map_8_map_1_23_alloc_table
       __anonstruct_Map_8_items_map_1_23 _jessie_60 _jessie_59 ))))));
       (if
       (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 136 8 19#
       (Bool.notb 
        (#"map_c.jc" 260 23 52#
        (neq_pointer  !voidP_items_51_alloc_table !voidP_items_51_alloc_table
         (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 136 9 19#
         "expl:Pointer dereference"
         (acc  !__anonstruct_Map_8_map_1_23_alloc_table
          !__anonstruct_Map_8_items_map_1_23 map_1 )) (null  ) )) ))
       then
        begin
        (__retres :=
         (let _jessie_63 =
         (#"map_c.jc" 261 30 43# "expl:Integer cast"
         (Safe_int32.of_int  (Int.(-_)  (1) ) )) in
         begin
         (assert {
         (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 137 8 18#
         "expl:Pointer index bounds" true) }); _jessie_63 end));
         (raise (Return_label_exc ())) end else ());
       begin
       (let _jessie_54 =
       (let _jessie_53 = size in
       begin
       (assert {
       (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 141 4 24#
       "expl:Pointer index bounds" true) }); _jessie_53 end) in
       (let _jessie_55 = map_1 in
       (let _jessie_56 = (0) in
       (let _jessie_57 = _jessie_55 in
       (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 141 4 24#
       "expl:Pointer dereference"
       (upd  !__anonstruct_Map_8_map_1_23_alloc_table
        __anonstruct_Map_8_capacity_map_1_23 _jessie_55 _jessie_54 ))))));
        begin
        (let _jessie_42 =
        (let _jessie_41 =
        (#"map_c.jc" 266 40 52# "expl:Integer cast" (Safe_int32.of_int (0)))
        in
        begin
        (assert {
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 142 4 18#
        "expl:Pointer index bounds" true) }); _jessie_41 end) in
        (let _jessie_43 = map_1 in
        (let _jessie_44 = (0) in
        (let _jessie_45 = _jessie_43 in
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 142 4 18#
        "expl:Pointer dereference"
        (upd  !__anonstruct_Map_8_map_1_23_alloc_table
         __anonstruct_Map_8_count_map_1_23 _jessie_43 _jessie_42 ))))));
         try
          begin
          (i_3 :=
           (let _jessie_52 =
           (#"map_c.jc" 268 23 35# "expl:Integer cast"
           (Safe_int32.of_int (0))) in
           begin
           (assert {
           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 149 13 14#
           "expl:Pointer index bounds" true) }); _jessie_52 end));
           'LoopEntry:
           begin
           'LoopEntry:
           'Loop_2:
           loop
           invariant { (#"map_c.jc" 270 9 918# true) }
             variant {
               (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 147 21 29#
               (Int.(-) (Int32.to_int size) (Int32.to_int !i_3))) }
            begin
            any unit
            requires { true } reads { __anonstruct_Item_7_existent_items_51,
            __anonstruct_Map_8_items_map_1_23, map_1, size }
            ensures {
              ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 146 23 96#
               (forall index_8 : int.
                ((((<=) (0) index_8) /\ ((<) index_8 (Int32.to_int !i_3))) ->
                 (Int32.(=)
                 (select !__anonstruct_Item_7_existent_items_51
                 (shift (select !__anonstruct_Map_8_items_map_1_23 map_1)
                 index_8)) (#"map_c.jc" 279 36 48# "expl:Integer cast"
                 (Int32.of_int (0)))))))
              /\
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 145 23 37#
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 145 23 37#
              ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 145 23 29#
               (Int32.(<=) (#"map_c.jc" 272 41 53# "expl:Integer cast"
               (Int32.of_int (0))) !i_3))
              /\
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 145 28 37#
              (Int32.(<=) !i_3 size)))))) } ;
             try
              begin
              'LoopCurrent:
              begin
              'LoopCurrent:
              (if
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 149 20 28#
              (Safe_int32.(<)  !i_3 size )) then ()
              else (raise (Goto_while_0_break_exc ())));
               begin
               (let _jessie_47 =
               (let _jessie_46 =
               (#"map_c.jc" 285 84 96# "expl:Integer cast"
               (Safe_int32.of_int (0))) in
               begin
               (assert {
               (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 150 8 34#
               "expl:Pointer index bounds" true) }); _jessie_46 end) in
               (let _jessie_48 =
               (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 150 8 18#
               "expl:Pointer dereference"
               (acc  !__anonstruct_Map_8_map_1_23_alloc_table
                !__anonstruct_Map_8_items_map_1_23 map_1 )) in
               (let _jessie_49 = (Safe_int32.to_int  !i_3 ) in
               (let _jessie_50 = (shift_typesafe  _jessie_48 _jessie_49 ) in
               (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 150 8 34#
               "expl:Pointer dereference"
               (upd_offset_typesafe  !voidP_items_51_alloc_table
                __anonstruct_Item_7_existent_items_51 _jessie_48 _jessie_49
                _jessie_47 ))))));
                (i_3 :=
                 (let _jessie_51 =
                 (Safe_int32.(+)  !i_3
                  (#"map_c.jc" 286 53 65# "expl:Integer cast"
                  (Safe_int32.of_int (1))) ) in
                 begin
                 (assert {
                 (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 149 30 33#
                 "expl:Pointer index bounds" true) }); _jessie_51 end)) end
              end; (raise (Loop_continue_exc ())) end with Loop_continue_exc
              _jessie_4 -> () end end end;
            (raise (Goto_while_0_break_exc ())) end end with
          Goto_while_0_break_exc _jessie_1 ->
          'While_0_break: 'While_0_break: () end;
         begin
         (__retres :=
          (let _jessie_40 =
          (#"map_c.jc" 291 27 39# "expl:Integer cast"
          (Safe_int32.of_int (0))) in
          begin
          (assert {
          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 153 4 13#
          "expl:Pointer index bounds" true) }); _jessie_40 end));
          (raise (Return_label_exc ())) end end end end end with
     Return_label_exc _jessie_2 ->
     'Return_label:
     'Return_label:
     begin
     (return :=
      (let _jessie_64 = !__retres in
      begin
      (assert { (#"map_c.jc" 293 7 22# "expl:Pointer index bounds" true) });
       _jessie_64 end)); (raise Return) end end)); absurd  end with Return ->
    !return end)
  
end

module Struct___anonstruct_Item_7_safe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Item_7 
  
  use import Root___anonstruct_Value_6 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct___anonstruct_Item_7
  (p : (pointer voidP)) 
   (__anonstruct_Value_6_alloc_table : ref (alloc_table
    __anonstruct_Value_6)) 
    (voidP_alloc_table : ref (alloc_table voidP)) 
     (__anonstruct_Item_7_value_1 : (memory voidP (pointer
      __anonstruct_Value_6))) : unit
      requires { true } writes { __anonstruct_Value_6_alloc_table,
      voidP_alloc_table }
      ensures {
        ((((=) p null) /\
         (((=) !__anonstruct_Value_6_alloc_table (old
          !__anonstruct_Value_6_alloc_table))
         /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))))
        \/
        ((frame_free_struct___anonstruct_Item_7 p (old
         !__anonstruct_Value_6_alloc_table) !__anonstruct_Value_6_alloc_table
         (old !voidP_alloc_table) !voidP_alloc_table
         __anonstruct_Item_7_value_1)
        /\
        (fresh_alloc_struct___anonstruct_Item_7 p
        (offset_max (old !voidP_alloc_table) p)
        !__anonstruct_Value_6_alloc_table !voidP_alloc_table
        __anonstruct_Item_7_value_1))) }
  
  val allocate_struct___anonstruct_Item_7
  (n : int) 
   (__anonstruct_Value_6_alloc_table : ref (alloc_table
    __anonstruct_Value_6)) 
    (voidP_alloc_table : ref (alloc_table voidP)) 
     (__anonstruct_Value_6_tag_table : ref (tag_table __anonstruct_Value_6)) 
      (voidP_tag_table : ref (tag_table voidP)) 
       (__anonstruct_Item_7_value_1 : (memory voidP (pointer
        __anonstruct_Value_6))) : (pointer voidP)
        requires { true } writes { __anonstruct_Value_6_alloc_table,
        __anonstruct_Value_6_tag_table, voidP_alloc_table, voidP_tag_table }
        ensures {
          ((strict_valid_struct___anonstruct_Item_7 result (0)
           (Int.(-) n (1)) !__anonstruct_Value_6_alloc_table
           !voidP_alloc_table __anonstruct_Item_7_value_1)
          /\
          ((frame_alloc_struct___anonstruct_Item_7 result n (old
           !__anonstruct_Value_6_alloc_table)
           !__anonstruct_Value_6_alloc_table (old !voidP_alloc_table)
           !voidP_alloc_table __anonstruct_Item_7_value_1)
          /\
          ((frame_tag_struct___anonstruct_Item_7 result (old
           !__anonstruct_Value_6_tag_table) !__anonstruct_Value_6_tag_table
           (old !voidP_tag_table) !voidP_tag_table
           __anonstruct_Item_7_value_1)
          /\
          ((fresh_alloc_struct___anonstruct_Item_7 result (Int.(-) n (1))
           (old !__anonstruct_Value_6_alloc_table) (old !voidP_alloc_table)
           __anonstruct_Item_7_value_1)
          /\
          ((fresh_tag_struct___anonstruct_Item_7 result (Int.(-) n (1)) (old
           !__anonstruct_Value_6_tag_table) (old !voidP_tag_table)
           __anonstruct_Item_7_value_1)
          /\
          ((typeof_struct___anonstruct_Item_7 result (0) n
           !__anonstruct_Value_6_tag_table !voidP_tag_table
           __anonstruct_Item_7_value_1)
          /\
          (container_of_struct___anonstruct_Item_7 result (0) n
          !__anonstruct_Value_6_tag_table !voidP_tag_table
          __anonstruct_Item_7_value_1))))))) }
  
  val allocate_singleton_struct___anonstruct_Item_7
  (__anonstruct_Value_6_alloc_table : ref (alloc_table
   __anonstruct_Value_6)) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (__anonstruct_Value_6_tag_table : ref (tag_table __anonstruct_Value_6)) 
     (voidP_tag_table : ref (tag_table voidP)) 
      (__anonstruct_Item_7_value_1 : (memory voidP (pointer
       __anonstruct_Value_6))) : (pointer voidP)
       requires { true } writes { __anonstruct_Value_6_alloc_table,
       __anonstruct_Value_6_tag_table, voidP_alloc_table, voidP_tag_table }
       ensures {
         ((strict_valid_struct___anonstruct_Item_7 result (0) (0)
          !__anonstruct_Value_6_alloc_table !voidP_alloc_table
          __anonstruct_Item_7_value_1)
         /\
         ((frame_alloc_struct___anonstruct_Item_7 result (1) (old
          !__anonstruct_Value_6_alloc_table)
          !__anonstruct_Value_6_alloc_table (old !voidP_alloc_table)
          !voidP_alloc_table __anonstruct_Item_7_value_1)
         /\
         ((frame_tag_struct___anonstruct_Item_7 result (old
          !__anonstruct_Value_6_tag_table) !__anonstruct_Value_6_tag_table
          (old !voidP_tag_table) !voidP_tag_table
          __anonstruct_Item_7_value_1)
         /\
         ((fresh_alloc_struct___anonstruct_Item_7 result (0) (old
          !__anonstruct_Value_6_alloc_table) (old !voidP_alloc_table)
          __anonstruct_Item_7_value_1)
         /\
         ((fresh_tag_struct___anonstruct_Item_7 result (0) (old
          !__anonstruct_Value_6_tag_table) (old !voidP_tag_table)
          __anonstruct_Item_7_value_1)
         /\
         ((typeof_singleton_struct___anonstruct_Item_7 result
          !__anonstruct_Value_6_tag_table !voidP_tag_table
          __anonstruct_Item_7_value_1)
         /\
         (container_of_singleton_struct___anonstruct_Item_7 result
         !__anonstruct_Value_6_tag_table !voidP_tag_table
         __anonstruct_Item_7_value_1))))))) }
  
end

module Unsafe_uint64_of_Unsafe_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Int32.to_int n)) }
  
end

theory Logic_is_map_valid

  use import core.Voidp 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  predicate is_map_valid (map_19 : (pointer __anonstruct_Map_8))
  (voidP_items_48_alloc_table_at_L : (alloc_table voidP))
  (__anonstruct_Value_6_items_48_alloc_table_at_L : (alloc_table
  __anonstruct_Value_6)) (__anonstruct_Map_8_count_map_19_20_at_L : (memory
  __anonstruct_Map_8 Int32.t)) (__anonstruct_Map_8_capacity_map_19_20_at_L :
  (memory __anonstruct_Map_8 Int32.t))
  (__anonstruct_Map_8_items_map_19_20_at_L : (memory __anonstruct_Map_8
  (pointer voidP))) (__anonstruct_Item_7_value_1_items_48_at_L : (memory
  voidP (pointer __anonstruct_Value_6)))
  =
     ((Int32.(<=) (#"map_c.jc" 189 7 19# "expl:Integer cast" (Int32.of_int
      (0))) (select __anonstruct_Map_8_count_map_19_20_at_L map_19))
     /\
     ((Int32.(<=) (select __anonstruct_Map_8_count_map_19_20_at_L map_19)
      (select __anonstruct_Map_8_capacity_map_19_20_at_L map_19))
     /\
     (if
      ((<=) (0)
      (Int.(-)
      (Int32.to_int
      (select __anonstruct_Map_8_capacity_map_19_20_at_L map_19)) (1))) then
      (((<=)
       (offset_min voidP_items_48_alloc_table_at_L
       (select __anonstruct_Map_8_items_map_19_20_at_L map_19)) (0))
      /\
      (((>=)
       (offset_max voidP_items_48_alloc_table_at_L
       (select __anonstruct_Map_8_items_map_19_20_at_L map_19))
       (Int.(-)
       (Int32.to_int
       (select __anonstruct_Map_8_capacity_map_19_20_at_L map_19)) (1)))
      /\
      (forall __framac_tmp1 : int.
       ((((<=) (0) __framac_tmp1) /\
        ((<=) __framac_tmp1
        (Int.(-)
        (Int32.to_int
        (select __anonstruct_Map_8_capacity_map_19_20_at_L map_19)) (1)))) ->
        (((<=)
         (offset_min __anonstruct_Value_6_items_48_alloc_table_at_L
         (select __anonstruct_Item_7_value_1_items_48_at_L
         (shift (select __anonstruct_Map_8_items_map_19_20_at_L map_19)
         __framac_tmp1))) (0))
        /\
        (((>=)
         (offset_max __anonstruct_Value_6_items_48_alloc_table_at_L
         (select __anonstruct_Item_7_value_1_items_48_at_L
         (shift (select __anonstruct_Map_8_items_map_19_20_at_L map_19)
         __framac_tmp1))) (0))
        /\ ((=) true true))))))) else ((=) true true))))
  
  
end

module Function_initializeMap_behaviors
#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 126 4 37#
"expl:initializeMap, behaviors"

  use import core.Voidp 
  
  use import core.Upd_unsafe 
  
  use Unsafe_uint64_of_Unsafe_int32 
  
  use Unsafe_uint64 
  
  use Unsafe_int32 
  
  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Item_7_safe 
  
  use import core.Shift_unsafe 
  
  use import core.Same_except 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pset_deref 
  
  use import core.Pset_all 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_map_valid 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Exceptions 
  
  use bool.Bool 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use import core.Acc_unsafe 
  
  use why3.Bool.Bool 
  
  let initializeMap_ensures_default
  #"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 126 4 37#
  "expl:Function initializeMap, default behavior" =
  fun
   (map_1 : (pointer __anonstruct_Map_8)) (size : Int32.t)
   (__anonstruct_Map_8_map_1_23_alloc_table : ref (alloc_table
   __anonstruct_Map_8)) (__anonstruct_Value_6_items_51_alloc_table : ref
   (alloc_table __anonstruct_Value_6)) (voidP_items_51_alloc_table : ref
   (alloc_table voidP)) (voidP_items_51_tag_table : ref (tag_table voidP))
   (__anonstruct_Value_6_items_51_tag_table : ref (tag_table
   __anonstruct_Value_6)) (__anonstruct_Item_7_existent_items_51 : ref
   (memory voidP Int32.t)) (__anonstruct_Map_8_items_map_1_23 : ref (memory
   __anonstruct_Map_8 (pointer voidP))) (__anonstruct_Map_8_capacity_map_1_23
   : ref (memory __anonstruct_Map_8 Int32.t))
   (__anonstruct_Map_8_count_map_1_23 : ref (memory __anonstruct_Map_8
   Int32.t)) (__anonstruct_Item_7_value_1_items_51 : (memory voidP (pointer
   __anonstruct_Value_6))) 
   requires {
   (#"map_c.jc" 228 12 243#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 115 16 24#
    (Int32.(>) size (#"map_c.jc" 228 29 41# "expl:Integer cast" (Int32.of_int
    (0)))))
   /\
   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 116 16 27#
   (#"map_c.jc" 228 12 243#
   ((#"map_c.jc" 228 12 243#
    ((<=) (offset_min !__anonstruct_Map_8_map_1_23_alloc_table map_1) (0)))
   /\
   (#"map_c.jc" 228 12 243#
   ((#"map_c.jc" 228 12 243#
    ((>=) (offset_max !__anonstruct_Map_8_map_1_23_alloc_table map_1) (0)))
   /\ (#"map_c.jc" 228 12 243# ((=) true true))))))))) }
   ensures {
     ("expl:Postcondition"
     ((#"map_c.jc" 233 12 32# "expl:Allocates clause"
      (((#"map_c.jc" 233 12 32# "expl:Allocates clause"
        (alloc_same_except (old !voidP_items_51_alloc_table)
        !voidP_items_51_alloc_table
        (pset_all
        (pset_deref !__anonstruct_Map_8_items_map_1_23
        (pset_singleton map_1)))))
       /\
       ((#"map_c.jc" 233 12 32# "expl:Allocates clause"
        (alloc_same_except (old !__anonstruct_Value_6_items_51_alloc_table)
        !__anonstruct_Value_6_items_51_alloc_table
        (pset_all
        (pset_deref __anonstruct_Item_7_value_1_items_51
        (pset_singleton (select !__anonstruct_Map_8_items_map_1_23 map_1))))))
       /\
       (#"map_c.jc" 233 12 32# "expl:Allocates clause"
       (alloc_same_except (old !__anonstruct_Map_8_map_1_23_alloc_table)
       !__anonstruct_Map_8_map_1_23_alloc_table pset_empty))))
      /\
      ((#"map_c.jc" 233 12 32# "expl:Allocates clause"
       (tag_extends (old !voidP_items_51_tag_table)
       !voidP_items_51_tag_table))
      /\
      (#"map_c.jc" 233 12 32# "expl:Allocates clause"
      (tag_extends (old !__anonstruct_Value_6_items_51_tag_table)
      !__anonstruct_Value_6_items_51_tag_table)))))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 117 16 50#
     "expl:Ensures clause"
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 117 16 50#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 117 16 50#
      "expl:Ensures clause"
      ((Int32.(=) result (#"map_c.jc" 234 42 54# "expl:Integer cast"
       (Int32.of_int (0)))) ->
       (is_map_valid map_1 !voidP_items_51_alloc_table
       !__anonstruct_Value_6_items_51_alloc_table
       !__anonstruct_Map_8_count_map_1_23
       !__anonstruct_Map_8_capacity_map_1_23
       !__anonstruct_Map_8_items_map_1_23
       __anonstruct_Item_7_value_1_items_51)))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 117 16 50#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 118 16 54#
      "expl:Ensures clause"
      ((Int32.(=) result (#"map_c.jc" 236 44 56# "expl:Integer cast"
       (Int32.of_int (0)))) ->
       (Int32.(=) (select !__anonstruct_Map_8_capacity_map_1_23 map_1) size)))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 117 16 50#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 119 16 48#
      "expl:Ensures clause"
      ((Int32.(=) result (#"map_c.jc" 238 46 58# "expl:Integer cast"
       (Int32.of_int (0)))) ->
       (Int32.(=) (select !__anonstruct_Map_8_count_map_1_23 map_1)
       (#"map_c.jc" 239 60 72# "expl:Integer cast" (Int32.of_int (0))))))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 117 16 50#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 120 16 97#
      "expl:Ensures clause"
      ((Int32.(=) result (#"map_c.jc" 240 48 60# "expl:Integer cast"
       (Int32.of_int (0)))) ->
       (forall i_2 : int.
        ((((<=) (0) i_2) /\ ((<) i_2 (Int32.to_int size))) ->
         (Int32.(=)
         (select !__anonstruct_Item_7_existent_items_51
         (shift (select !__anonstruct_Map_8_items_map_1_23 map_1) i_2))
         (#"map_c.jc" 245 43 55# "expl:Integer cast" (Int32.of_int (0))))))))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 121 16 51#
     "expl:Ensures clause"
     ((not
      (Int32.(=) result (#"map_c.jc" 246 52 64# "expl:Integer cast"
      (Int32.of_int (0))))) ->
      (not
      (is_map_valid map_1 !voidP_items_51_alloc_table
      !__anonstruct_Value_6_items_51_alloc_table
      !__anonstruct_Map_8_count_map_1_23
      !__anonstruct_Map_8_capacity_map_1_23
      !__anonstruct_Map_8_items_map_1_23
      __anonstruct_Item_7_value_1_items_51))))))))))))))) } diverges  ->
   'Init:
   (let return = ref (Unsafe_int32.any_  () ) in
   try
    begin
    (let i_3 = ref (Unsafe_int32.any_  () ) in
    (let __retres = ref (Unsafe_int32.any_  () ) in
    try
     begin
     (if
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 128 8 17#
     (Unsafe_int32.(<=)  size
      (#"map_c.jc" 253 27 39# "expl:Integer cast" (Unsafe_int32.of_int (0)))
      ))
     then
      begin
      (__retres :=
       (#"map_c.jc" 254 29 42# "expl:Integer cast"
       (Unsafe_int32.of_int  (Int.(-_)  (1) ) )));
       (raise (Return_label_exc ())) end else ());
      begin
      (let _jessie_33 =
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 133 17 44#
      "expl:Allocation size"
      (allocate_struct___anonstruct_Item_7 
       (Unsafe_uint64.to_int 
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 133 24 28#
        "expl:Integer cast" (Unsafe_uint64_of_Unsafe_int32.cast  size )) )
       __anonstruct_Value_6_items_51_alloc_table voidP_items_51_alloc_table
       __anonstruct_Value_6_items_51_tag_table voidP_items_51_tag_table
       __anonstruct_Item_7_value_1_items_51 )) in
      (let _jessie_34 = map_1 in
      (let _jessie_35 = (0) in
      (let _jessie_36 = _jessie_34 in
      (upd  __anonstruct_Map_8_items_map_1_23 _jessie_36 _jessie_33 )))));
       (if
       (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 136 8 19#
       (Bool.notb 
        ((<>)  (acc  !__anonstruct_Map_8_items_map_1_23 map_1 ) (null  ) ) ))
       then
        begin
        (__retres :=
         (#"map_c.jc" 261 30 43# "expl:Integer cast"
         (Unsafe_int32.of_int  (Int.(-_)  (1) ) )));
         (raise (Return_label_exc ())) end else ());
       begin
       (let _jessie_28 = size in
       (let _jessie_29 = map_1 in
       (let _jessie_30 = (0) in
       (let _jessie_31 = _jessie_29 in
       (upd  __anonstruct_Map_8_capacity_map_1_23 _jessie_31 _jessie_28 )))));
        begin
        (let _jessie_16 =
        (#"map_c.jc" 266 40 52# "expl:Integer cast"
        (Unsafe_int32.of_int (0))) in
        (let _jessie_17 = map_1 in
        (let _jessie_18 = (0) in
        (let _jessie_19 = _jessie_17 in
        (upd  __anonstruct_Map_8_count_map_1_23 _jessie_19 _jessie_16 )))));
         try
          begin
          (i_3 :=
           (#"map_c.jc" 268 23 35# "expl:Integer cast"
           (Unsafe_int32.of_int (0))));
           'LoopEntry:
           begin
           'LoopEntry:
           'Loop_1:
           loop
           invariant
             { ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 145 23 37#
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 145 23 37#
                ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 145 23 29#
                 (Int32.(<=) (#"map_c.jc" 272 41 53# "expl:Integer cast"
                 (Int32.of_int (0))) !i_3))
                /\
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 145 28 37#
                (Int32.(<=) !i_3 size)))))
               &&
               (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 146 23 96#
               (forall index_8 : int.
                ((((<=) (0) index_8) /\ ((<) index_8 (Int32.to_int !i_3))) ->
                 (Int32.(=)
                 (select !__anonstruct_Item_7_existent_items_51
                 (shift (select !__anonstruct_Map_8_items_map_1_23 map_1)
                 index_8)) (#"map_c.jc" 279 36 48# "expl:Integer cast"
                 (Int32.of_int (0)))))))) } 
            begin
            any unit requires { true } ensures { true } ;
             try
              begin
              'LoopCurrent:
              begin
              'LoopCurrent:
              (if
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 149 20 28#
              (Unsafe_int32.(<)  !i_3 size )) then ()
              else (raise (Goto_while_0_break_exc ())));
               begin
               (let _jessie_21 =
               (#"map_c.jc" 285 84 96# "expl:Integer cast"
               (Unsafe_int32.of_int (0))) in
               (let _jessie_22 =
               (acc  !__anonstruct_Map_8_items_map_1_23 map_1 ) in
               (let _jessie_23 = (Unsafe_int32.to_int  !i_3 ) in
               (let _jessie_24 = (shift_  _jessie_22 _jessie_23 ) in
               (upd  __anonstruct_Item_7_existent_items_51 _jessie_24
                _jessie_21 )))));
                (i_3 :=
                 (Unsafe_int32.(+)  !i_3
                  (#"map_c.jc" 286 53 65# "expl:Integer cast"
                  (Unsafe_int32.of_int (1))) )) end end;
               (raise (Loop_continue_exc ())) end with Loop_continue_exc
              _jessie_4 -> () end end end;
            (raise (Goto_while_0_break_exc ())) end end with
          Goto_while_0_break_exc _jessie_1 ->
          'While_0_break: 'While_0_break: () end;
         begin
         (__retres :=
          (#"map_c.jc" 291 27 39# "expl:Integer cast"
          (Unsafe_int32.of_int (0)))); (raise (Return_label_exc ())) end end
       end end end with Return_label_exc _jessie_2 ->
     'Return_label:
     'Return_label: begin (return := !__retres); (raise Return) end end));
     absurd  end with Return -> !return end)
  
end

theory Root___anonstruct_Key_5

  use why3.Bool.Bool 
  
  type __anonstruct_Key_5 
  
end

module Safe_int64_of_Safe_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int32.to_int n)) }
  
end

module Function_hash_safety
#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 175 5 19# "expl:hash, safety"

  use Safe_int64_of_Safe_int32 
  
  use Safe_int64 
  
  use import Root___anonstruct_Key_5 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int64 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use import core.Acc_safe 
  
  use why3.Bool.Bool 
  
  let hash #"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 175 5 19#
  "expl:Function hash, safety" =
  fun
   (key_0_0 : (pointer __anonstruct_Key_5))
   (__anonstruct_Key_5_key_0_24_alloc_table : (alloc_table
   __anonstruct_Key_5)) (__anonstruct_Key_5_a_key_0_24 : (memory
   __anonstruct_Key_5 Int32.t)) (__anonstruct_Key_5_b_key_0_24 : (memory
   __anonstruct_Key_5 Int32.t)) 
   requires {
   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 170 16 27#
   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 170 16 27#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 170 16 27#
    ((<=) (offset_min __anonstruct_Key_5_key_0_24_alloc_table key_0_0) (0)))
   /\
   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 170 16 27#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 170 16 27#
    ((>=) (offset_max __anonstruct_Key_5_key_0_24_alloc_table key_0_0) (0)))
   /\
   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 170 16 27#
   ((=) true true))))))) } ensures { ("expl:Postcondition" true) }  ->
   'Init:
   (let return = ref (Safe_int64.any_  () ) in
   try
    begin
    (let result_0 = ref (Safe_int64.any_  () ) in
    (let tmp = ref (Safe_int64.any_  () ) in
    begin
    (result_0 :=
     (let _jessie_71 =
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 176 18 24#
     "expl:Integer cast"
     (Safe_int64_of_Safe_int32.cast 
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 176 18 24#
      "expl:Pointer dereference"
      (acc  __anonstruct_Key_5_key_0_24_alloc_table
       __anonstruct_Key_5_a_key_0_24 key_0_0 )) )) in
     begin
     (assert {
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 176 9 15#
     "expl:Pointer index bounds" true) }); _jessie_71 end));
     begin
     (result_0 :=
      (let _jessie_72 =
      (Safe_int64.( *)  !result_0
       (#"map_c.jc" 313 54 67# "expl:Integer cast" (Safe_int64.of_int (33)))
       ) in
      begin
      (assert {
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 177 4 16#
      "expl:Pointer index bounds" true) }); _jessie_72 end));
      begin
      (result_0 :=
       (let _jessie_73 =
       (Safe_int64.(+)  !result_0
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 178 14 20#
        "expl:Integer cast"
        (Safe_int64_of_Safe_int32.cast 
         (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 178 14 20#
         "expl:Pointer dereference"
         (acc  __anonstruct_Key_5_key_0_24_alloc_table
          __anonstruct_Key_5_b_key_0_24 key_0_0 )) )) ) in
       begin
       (assert {
       (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 178 4 20#
       "expl:Pointer index bounds" true) }); _jessie_73 end));
       (if
       (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 179 11 22#
       (Safe_int64.(>=)  !result_0
        (#"map_c.jc" 316 30 42# "expl:Integer cast" (Safe_int64.of_int (0)))
        ))
       then
        (tmp :=
         (let _jessie_75 = !result_0 in
         begin
         (assert {
         (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 179 11 47#
         "expl:Pointer index bounds" true) }); _jessie_75 end))
       else
        (tmp :=
         (let _jessie_74 =
         (Safe_int64.(-_) 
          (Safe_int64.(+)  !result_0
           (#"map_c.jc" 318 65 77# "expl:Integer cast"
           (Safe_int64.of_int (1))) ) ) in
         begin
         (assert {
         (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 179 11 47#
         "expl:Pointer index bounds" true) }); _jessie_74 end)));
       begin
       (return :=
        (let _jessie_76 = !tmp in
        begin
        (assert { (#"map_c.jc" 320 7 17# "expl:Pointer index bounds" true) });
         _jessie_76 end)); (raise Return) end end end end)); absurd  end with
    Return -> !return end)
  
end

module Unsafe_int64_of_Unsafe_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int32.to_int n)) }
  
end

module Function_hash_behaviors
#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 175 5 19#
"expl:hash, behaviors"

  use Unsafe_int64_of_Unsafe_int32 
  
  use Unsafe_int64 
  
  use import Root___anonstruct_Key_5 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int64 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use import core.Acc_unsafe 
  
  use why3.Bool.Bool 
  
  let hash_ensures_default
  #"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 175 5 19#
  "expl:Function hash, default behavior" =
  fun
   (key_0_0 : (pointer __anonstruct_Key_5))
   (__anonstruct_Key_5_key_0_24_alloc_table : (alloc_table
   __anonstruct_Key_5)) (__anonstruct_Key_5_a_key_0_24 : (memory
   __anonstruct_Key_5 Int32.t)) (__anonstruct_Key_5_b_key_0_24 : (memory
   __anonstruct_Key_5 Int32.t)) 
   requires {
   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 170 16 27#
   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 170 16 27#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 170 16 27#
    ((<=) (offset_min __anonstruct_Key_5_key_0_24_alloc_table key_0_0) (0)))
   /\
   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 170 16 27#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 170 16 27#
    ((>=) (offset_max __anonstruct_Key_5_key_0_24_alloc_table key_0_0) (0)))
   /\
   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 170 16 27#
   ((=) true true))))))) }
   ensures {
     ("expl:Postcondition"
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 171 16 53#
     "expl:Ensures clause"
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 171 16 53#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 171 16 28#
      "expl:Ensures clause"
      (Int64.(<=) (#"map_c.jc" 303 31 43# "expl:Integer cast" (Int64.of_int
      (0))) result))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 171 16 53#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 171 21 53#
      "expl:Ensures clause"
      ((<=) (Int64.to_int result) (Int.( *) (34) (Int.(+) (2147483647) (1)))))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 172 16 32#
     "expl:Ensures clause" ((=) key_0_0 key_0_0)))))))) }  ->
   'Init:
   (let return = ref (Unsafe_int64.any_  () ) in
   try
    begin
    (let result_0 = ref (Unsafe_int64.any_  () ) in
    (let tmp = ref (Unsafe_int64.any_  () ) in
    begin
    (result_0 :=
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 176 18 24#
     "expl:Integer cast"
     (Unsafe_int64_of_Unsafe_int32.cast 
      (acc  __anonstruct_Key_5_a_key_0_24 key_0_0 ) )));
     begin
     (result_0 :=
      (Unsafe_int64.( *)  !result_0
       (#"map_c.jc" 313 54 67# "expl:Integer cast"
       (Unsafe_int64.of_int (33))) ));
      begin
      (result_0 :=
       (Unsafe_int64.(+)  !result_0
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 178 14 20#
        "expl:Integer cast"
        (Unsafe_int64_of_Unsafe_int32.cast 
         (acc  __anonstruct_Key_5_b_key_0_24 key_0_0 ) )) ));
       (if
       (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 179 11 22#
       (Unsafe_int64.(>=)  !result_0
        (#"map_c.jc" 316 30 42# "expl:Integer cast"
        (Unsafe_int64.of_int (0))) )) then (tmp := !result_0)
       else
        (tmp :=
         (Unsafe_int64.(-_) 
          (Unsafe_int64.(+)  !result_0
           (#"map_c.jc" 318 65 77# "expl:Integer cast"
           (Unsafe_int64.of_int (1))) ) )));
       begin (return := !tmp); (raise Return) end end end end)); absurd  end
    with Return -> !return end)
  
end

theory Logic_is_keys_unique

  use import core.Voidp 
  
  use import Root___anonstruct_Map_8 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate is_keys_unique (map_17 : (pointer __anonstruct_Map_8))
  (__anonstruct_Map_8_capacity_map_17_18_at_L : (memory __anonstruct_Map_8
  Int32.t)) (__anonstruct_Map_8_items_map_17_18_at_L : (memory
  __anonstruct_Map_8 (pointer voidP)))
  (__anonstruct_Item_7_existent_items_46_at_L : (memory voidP Int32.t))
  (__anonstruct_Item_7___anonstruct_Key_5_b_items_46_at_L : (memory voidP
  Int32.t)) (__anonstruct_Item_7___anonstruct_Key_5_a_items_46_at_L : (memory
  voidP Int32.t))
  =
     (forall index1 : int.
      (forall index2 : int.
       ((((<=) (0) index1) /\
        (((<) index1 index2) /\
        (((<) index2
         (Int32.to_int
         (select __anonstruct_Map_8_capacity_map_17_18_at_L map_17)))
        /\
        ((Int32.(=)
         (select __anonstruct_Item_7_existent_items_46_at_L
         (shift (select __anonstruct_Map_8_items_map_17_18_at_L map_17)
         index1)) (#"map_c.jc" 175 49 61# "expl:Integer cast" (Int32.of_int
         (1))))
        /\
        (Int32.(=)
        (select __anonstruct_Item_7_existent_items_46_at_L
        (shift (select __anonstruct_Map_8_items_map_17_18_at_L map_17)
        index2)) (#"map_c.jc" 176 48 60# "expl:Integer cast" (Int32.of_int
        (1)))))))) ->
        (not
        ((Int32.(=)
         (select __anonstruct_Item_7___anonstruct_Key_5_a_items_46_at_L
         (shift (select __anonstruct_Map_8_items_map_17_18_at_L map_17)
         index1))
         (select __anonstruct_Item_7___anonstruct_Key_5_a_items_46_at_L
         (shift (select __anonstruct_Map_8_items_map_17_18_at_L map_17)
         index2)))
        /\
        (Int32.(=)
        (select __anonstruct_Item_7___anonstruct_Key_5_b_items_46_at_L
        (shift (select __anonstruct_Map_8_items_map_17_18_at_L map_17)
        index1))
        (select __anonstruct_Item_7___anonstruct_Key_5_b_items_46_at_L
        (shift (select __anonstruct_Map_8_items_map_17_18_at_L map_17)
        index2))))))))
  
  
end

theory Logic_is_states_correct

  use import core.Voidp 
  
  use import Root___anonstruct_Map_8 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate is_states_correct (map_18 : (pointer __anonstruct_Map_8))
  (__anonstruct_Map_8_capacity_map_18_19_at_L : (memory __anonstruct_Map_8
  Int32.t)) (__anonstruct_Map_8_items_map_18_19_at_L : (memory
  __anonstruct_Map_8 (pointer voidP)))
  (__anonstruct_Item_7_existent_items_47_at_L : (memory voidP Int32.t))
  =
     (forall index_7 : int.
      ((Int32.(<=) (#"map_c.jc" 184 8 20# "expl:Integer cast" (Int32.of_int
       (0))) (select __anonstruct_Map_8_capacity_map_18_19_at_L map_18)) ->
       ((Int32.(<=) (#"map_c.jc" 185 10 22# "expl:Integer cast" (Int32.of_int
        (0)))
        (select __anonstruct_Item_7_existent_items_47_at_L
        (shift (select __anonstruct_Map_8_items_map_18_19_at_L map_18)
        index_7)))
       /\
       (Int32.(<=)
       (select __anonstruct_Item_7_existent_items_47_at_L
       (shift (select __anonstruct_Map_8_items_map_18_19_at_L map_18)
       index_7)) (#"map_c.jc" 186 48 60# "expl:Integer cast" (Int32.of_int
       (1)))))))
  
  
end

theory Logic_is_map_correct

  use import core.Voidp 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_states_correct 
  
  use import Logic_is_map_valid 
  
  use import Logic_is_keys_unique 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Axiomatic_ItemsCount 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  predicate is_map_correct (map_20 : (pointer __anonstruct_Map_8))
  (voidP_items_49_alloc_table_at_L : (alloc_table voidP))
  (__anonstruct_Value_6_items_49_alloc_table_at_L : (alloc_table
  __anonstruct_Value_6)) (__anonstruct_Map_8_count_map_20_21_at_L : (memory
  __anonstruct_Map_8 Int32.t)) (__anonstruct_Map_8_capacity_map_20_21_at_L :
  (memory __anonstruct_Map_8 Int32.t))
  (__anonstruct_Map_8_items_map_20_21_at_L : (memory __anonstruct_Map_8
  (pointer voidP))) (__anonstruct_Item_7_existent_items_49_at_L : (memory
  voidP Int32.t)) (__anonstruct_Item_7_value_1_items_49_at_L : (memory voidP
  (pointer __anonstruct_Value_6)))
  (__anonstruct_Item_7___anonstruct_Key_5_b_items_49_at_L : (memory voidP
  Int32.t)) (__anonstruct_Item_7___anonstruct_Key_5_a_items_49_at_L : (memory
  voidP Int32.t))
  =
     ((is_keys_unique map_20 __anonstruct_Map_8_capacity_map_20_21_at_L
      __anonstruct_Map_8_items_map_20_21_at_L
      __anonstruct_Item_7_existent_items_49_at_L
      __anonstruct_Item_7___anonstruct_Key_5_b_items_49_at_L
      __anonstruct_Item_7___anonstruct_Key_5_a_items_49_at_L)
     /\
     ((is_states_correct map_20 __anonstruct_Map_8_capacity_map_20_21_at_L
      __anonstruct_Map_8_items_map_20_21_at_L
      __anonstruct_Item_7_existent_items_49_at_L)
     /\
     (((=)
      (all_count map_20 __anonstruct_Map_8_capacity_map_20_21_at_L
      __anonstruct_Map_8_items_map_20_21_at_L
      __anonstruct_Item_7_existent_items_49_at_L)
      (Int32.to_int (select __anonstruct_Map_8_count_map_20_21_at_L map_20)))
     /\
     ((Int32.(>) (select __anonstruct_Map_8_capacity_map_20_21_at_L map_20)
      (#"map_c.jc" 206 27 39# "expl:Integer cast" (Int32.of_int (0))))
     /\
     ((forall i_0 : int.
       ((((<=)
         (Int32.to_int
         (select __anonstruct_Map_8_count_map_20_21_at_L map_20)) i_0)
        /\
        ((<) i_0
        (Int32.to_int
        (select __anonstruct_Map_8_capacity_map_20_21_at_L map_20)))) ->
        ((=)
        (Int32.to_int
        (select __anonstruct_Item_7_existent_items_49_at_L
        (shift (select __anonstruct_Map_8_items_map_20_21_at_L map_20) i_0)))
        (0))))
     /\
     (is_map_valid map_20 voidP_items_49_alloc_table_at_L
     __anonstruct_Value_6_items_49_alloc_table_at_L
     __anonstruct_Map_8_count_map_20_21_at_L
     __anonstruct_Map_8_capacity_map_20_21_at_L
     __anonstruct_Map_8_items_map_20_21_at_L
     __anonstruct_Item_7_value_1_items_49_at_L))))))
  
  
end

module Safe_int32_of_Safe_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int32.t
   requires { (Int32.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Int32.to_int result) (Int64.to_int n)) }
  
end

module Function_getCalculatedIndex_safety
#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 193 4 59#
"expl:getCalculatedIndex, safety"

  use import core.Voidp 
  
  use Safe_int64_of_Safe_int32 
  
  use Safe_int64 
  
  use Safe_int32_of_Safe_int64 
  
  use Safe_int32 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_map_correct 
  
  use enum.Int64 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use import core.Acc_safe 
  
  use why3.Bool.Bool 
  
  let getCalculatedIndex
  #"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 193 4 59#
  "expl:Function getCalculatedIndex, safety" =
  fun
   (map_0 : (pointer __anonstruct_Map_8)) (hashValue : Int64.t) (index :
   Int32.t) (__anonstruct_Map_8_map_25_alloc_table : (alloc_table
   __anonstruct_Map_8)) (__anonstruct_Value_6_items_159_alloc_table :
   (alloc_table __anonstruct_Value_6)) (voidP_items_159_alloc_table :
   (alloc_table voidP)) (__anonstruct_Value_6_c_items_159 : (memory
   __anonstruct_Value_6 Int32.t)) (__anonstruct_Value_6_d_items_159 : (memory
   __anonstruct_Value_6 Int32.t))
   (__anonstruct_Item_7___anonstruct_Key_5_a_items_159 : (memory voidP
   Int32.t)) (__anonstruct_Item_7___anonstruct_Key_5_b_items_159 : (memory
   voidP Int32.t)) (__anonstruct_Item_7_value_1_items_159 : (memory voidP
   (pointer __anonstruct_Value_6))) (__anonstruct_Item_7_existent_items_159 :
   (memory voidP Int32.t)) (__anonstruct_Map_8_items_map_25 : (memory
   __anonstruct_Map_8 (pointer voidP))) (__anonstruct_Map_8_capacity_map_25 :
   (memory __anonstruct_Map_8 Int32.t)) (__anonstruct_Map_8_count_map_25 :
   (memory __anonstruct_Map_8 Int32.t)) 
   requires {
   (#"map_c.jc" 326 12 750#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 183 16 27#
    (#"map_c.jc" 326 12 750#
    ((#"map_c.jc" 326 12 750#
     ((<=) (offset_min __anonstruct_Map_8_map_25_alloc_table map_0) (0)))
    /\
    (#"map_c.jc" 326 12 750#
    ((#"map_c.jc" 326 12 750#
     ((>=) (offset_max __anonstruct_Map_8_map_25_alloc_table map_0) (0)))
    /\ (#"map_c.jc" 326 12 750# ((=) true true)))))))
   /\
   (#"map_c.jc" 326 12 750#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 183 31 50#
    (is_map_correct map_0 voidP_items_159_alloc_table
    __anonstruct_Value_6_items_159_alloc_table
    __anonstruct_Map_8_count_map_25 __anonstruct_Map_8_capacity_map_25
    __anonstruct_Map_8_items_map_25 __anonstruct_Item_7_existent_items_159
    __anonstruct_Item_7_value_1_items_159
    __anonstruct_Item_7___anonstruct_Key_5_b_items_159
    __anonstruct_Item_7___anonstruct_Key_5_a_items_159))
   /\
   (#"map_c.jc" 326 12 750#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 184 16 26#
    (Int32.(<=) (#"map_c.jc" 332 34 46# "expl:Integer cast" (Int32.of_int
    (0))) index))
   /\
   (#"map_c.jc" 326 12 750#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 184 21 43#
    (Int32.(<=) index (select __anonstruct_Map_8_capacity_map_25 map_0)))
   /\
   (#"map_c.jc" 326 12 750#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 185 16 33#
    (Int32.(>) (select __anonstruct_Map_8_capacity_map_25 map_0)
    (#"map_c.jc" 334 41 53# "expl:Integer cast" (Int32.of_int (0)))))
   /\
   (#"map_c.jc" 326 12 750#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 186 16 30#
    (Int64.(<=) (#"map_c.jc" 335 37 49# "expl:Integer cast" (Int64.of_int
    (0))) hashValue))
   /\
   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 186 21 55#
   ((<=) (Int64.to_int hashValue) (Int.( *) (34) (Int.(+) (2147483647) (1)))))))))))))))))
   } ensures { ("expl:Postcondition" true) }  ->
   'Init:
   (let return = ref (Safe_int32.any_  () ) in
   try
    begin
    (let __retres_0 = ref (Safe_int32.any_  () ) in
    begin
    (__retres_0 :=
     (let _jessie_79 =
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 193 69 104#
     "expl:Integer cast"
     (Safe_int32_of_Safe_int64.cast 
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 193 69 104#
      "expl:Division by zero"
      (Safe_int64.(%) 
       (Safe_int64.(+)  hashValue
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 193 82 87#
        "expl:Integer cast" (Safe_int64_of_Safe_int32.cast  index )) )
       (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 193 91 104#
       "expl:Integer cast"
       (Safe_int64_of_Safe_int32.cast 
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 193 91 104#
        "expl:Pointer dereference"
        (acc  __anonstruct_Map_8_map_25_alloc_table
         __anonstruct_Map_8_capacity_map_25 map_0 )) )) )) )) in
     begin
     (assert {
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 193 62 105#
     "expl:Pointer index bounds" true) }); _jessie_79 end));
     begin
     (return :=
      (let _jessie_80 = !__retres_0 in
      begin
      (assert { (#"map_c.jc" 357 7 24# "expl:Pointer index bounds" true) });
       _jessie_80 end)); (raise Return) end end); absurd  end with Return ->
    !return end)
  
end

module Unsafe_int32_of_Unsafe_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int64.to_int n)) }
  
end

module Function_getCalculatedIndex_behaviors
#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 193 4 59#
"expl:getCalculatedIndex, behaviors"

  use import core.Voidp 
  
  use Unsafe_int64_of_Unsafe_int32 
  
  use Unsafe_int64 
  
  use Unsafe_int32_of_Unsafe_int64 
  
  use Unsafe_int32 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_map_correct 
  
  use enum.Int64 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use import core.Acc_unsafe 
  
  use why3.Bool.Bool 
  
  let getCalculatedIndex_ensures_default
  #"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 193 4 59#
  "expl:Function getCalculatedIndex, default behavior" =
  fun
   (map_0 : (pointer __anonstruct_Map_8)) (hashValue : Int64.t) (index :
   Int32.t) (__anonstruct_Map_8_map_25_alloc_table : (alloc_table
   __anonstruct_Map_8)) (__anonstruct_Value_6_items_159_alloc_table :
   (alloc_table __anonstruct_Value_6)) (voidP_items_159_alloc_table :
   (alloc_table voidP)) (__anonstruct_Value_6_c_items_159 : (memory
   __anonstruct_Value_6 Int32.t)) (__anonstruct_Value_6_d_items_159 : (memory
   __anonstruct_Value_6 Int32.t))
   (__anonstruct_Item_7___anonstruct_Key_5_a_items_159 : (memory voidP
   Int32.t)) (__anonstruct_Item_7___anonstruct_Key_5_b_items_159 : (memory
   voidP Int32.t)) (__anonstruct_Item_7_value_1_items_159 : (memory voidP
   (pointer __anonstruct_Value_6))) (__anonstruct_Item_7_existent_items_159 :
   (memory voidP Int32.t)) (__anonstruct_Map_8_items_map_25 : (memory
   __anonstruct_Map_8 (pointer voidP))) (__anonstruct_Map_8_capacity_map_25 :
   (memory __anonstruct_Map_8 Int32.t)) (__anonstruct_Map_8_count_map_25 :
   (memory __anonstruct_Map_8 Int32.t)) 
   requires {
   (#"map_c.jc" 326 12 750#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 183 16 27#
    (#"map_c.jc" 326 12 750#
    ((#"map_c.jc" 326 12 750#
     ((<=) (offset_min __anonstruct_Map_8_map_25_alloc_table map_0) (0)))
    /\
    (#"map_c.jc" 326 12 750#
    ((#"map_c.jc" 326 12 750#
     ((>=) (offset_max __anonstruct_Map_8_map_25_alloc_table map_0) (0)))
    /\ (#"map_c.jc" 326 12 750# ((=) true true)))))))
   /\
   (#"map_c.jc" 326 12 750#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 183 31 50#
    (is_map_correct map_0 voidP_items_159_alloc_table
    __anonstruct_Value_6_items_159_alloc_table
    __anonstruct_Map_8_count_map_25 __anonstruct_Map_8_capacity_map_25
    __anonstruct_Map_8_items_map_25 __anonstruct_Item_7_existent_items_159
    __anonstruct_Item_7_value_1_items_159
    __anonstruct_Item_7___anonstruct_Key_5_b_items_159
    __anonstruct_Item_7___anonstruct_Key_5_a_items_159))
   /\
   (#"map_c.jc" 326 12 750#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 184 16 26#
    (Int32.(<=) (#"map_c.jc" 332 34 46# "expl:Integer cast" (Int32.of_int
    (0))) index))
   /\
   (#"map_c.jc" 326 12 750#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 184 21 43#
    (Int32.(<=) index (select __anonstruct_Map_8_capacity_map_25 map_0)))
   /\
   (#"map_c.jc" 326 12 750#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 185 16 33#
    (Int32.(>) (select __anonstruct_Map_8_capacity_map_25 map_0)
    (#"map_c.jc" 334 41 53# "expl:Integer cast" (Int32.of_int (0)))))
   /\
   (#"map_c.jc" 326 12 750#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 186 16 30#
    (Int64.(<=) (#"map_c.jc" 335 37 49# "expl:Integer cast" (Int64.of_int
    (0))) hashValue))
   /\
   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 186 21 55#
   ((<=) (Int64.to_int hashValue) (Int.( *) (34) (Int.(+) (2147483647) (1)))))))))))))))))
   }
   ensures {
     ("expl:Postcondition"
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
     "expl:Ensures clause"
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
      "expl:Ensures clause" ((=) map_0 map_0))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 188 16 27#
      "expl:Ensures clause"
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
      "expl:Ensures clause"
      ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
       "expl:Ensures clause"
       ((<=) (offset_min __anonstruct_Map_8_map_25_alloc_table map_0) (0)))
      /\
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
      "expl:Ensures clause"
      ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
       "expl:Ensures clause"
       ((>=) (offset_max __anonstruct_Map_8_map_25_alloc_table map_0) (0)))
      /\
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
      "expl:Ensures clause" ((=) true true)))))))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 188 31 50#
      "expl:Ensures clause"
      (is_map_correct map_0 voidP_items_159_alloc_table
      __anonstruct_Value_6_items_159_alloc_table
      __anonstruct_Map_8_count_map_25 __anonstruct_Map_8_capacity_map_25
      __anonstruct_Map_8_items_map_25 __anonstruct_Item_7_existent_items_159
      __anonstruct_Item_7_value_1_items_159
      __anonstruct_Item_7___anonstruct_Key_5_b_items_159
      __anonstruct_Item_7___anonstruct_Key_5_a_items_159))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 189 16 44#
      "expl:Ensures clause" (Int64.(=) hashValue hashValue))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 190 16 36#
      "expl:Ensures clause" (Int32.(=) index index))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 191 16 28#
      "expl:Ensures clause"
      (Int32.(<=) (#"map_c.jc" 348 38 50# "expl:Integer cast" (Int32.of_int
      (0))) result))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 191 21 44#
     "expl:Ensures clause"
     (Int32.(<) result (select __anonstruct_Map_8_capacity_map_25 map_0)))))))))))))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_int32.any_  () ) in
   try
    begin
    (let __retres_0 = ref (Unsafe_int32.any_  () ) in
    begin
    (__retres_0 :=
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 193 69 104#
     "expl:Integer cast"
     (Unsafe_int32_of_Unsafe_int64.cast 
      (Unsafe_int64.(%) 
       (Unsafe_int64.(+)  hashValue
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 193 82 87#
        "expl:Integer cast" (Unsafe_int64_of_Unsafe_int32.cast  index )) )
       (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 193 91 104#
       "expl:Integer cast"
       (Unsafe_int64_of_Unsafe_int32.cast 
        (acc  __anonstruct_Map_8_capacity_map_25 map_0 ) )) ) )));
     begin (return := !__retres_0); (raise Return) end end); absurd  end with
    Return -> !return end)
  
end

theory Logic_into_int_range

  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate into_int_range (value : int)
  = (((<=) (Int.(-_) (2147483648)) value) /\ ((<=) value (2147483647)))
  
  
end

theory Logic_is_key_valid

  use import core.Voidp 
  
  use import Root___anonstruct_Map_8 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_into_int_range 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate is_key_valid (map_7 : (pointer __anonstruct_Map_8)) (index_1 :
  int) (__anonstruct_Map_8_items_map_7_5_at_L : (memory __anonstruct_Map_8
  (pointer voidP))) (__anonstruct_Item_7___anonstruct_Key_5_b_items_39_at_L :
  (memory voidP Int32.t))
  (__anonstruct_Item_7___anonstruct_Key_5_a_items_39_at_L : (memory voidP
  Int32.t))
  =
     (((not
       (Int32.(=)
       (select __anonstruct_Item_7___anonstruct_Key_5_a_items_39_at_L
       (shift (select __anonstruct_Map_8_items_map_7_5_at_L map_7) index_1))
       (#"map_c.jc" 106 58 70# "expl:Integer cast" (Int32.of_int (0)))))
      /\
      (into_int_range
      (Int32.to_int
      (select __anonstruct_Item_7___anonstruct_Key_5_a_items_39_at_L
      (shift (select __anonstruct_Map_8_items_map_7_5_at_L map_7) index_1)))))
     \/
     ((not
      (Int32.(=)
      (select __anonstruct_Item_7___anonstruct_Key_5_b_items_39_at_L
      (shift (select __anonstruct_Map_8_items_map_7_5_at_L map_7) index_1))
      (#"map_c.jc" 108 59 71# "expl:Integer cast" (Int32.of_int (0)))))
     /\
     (into_int_range
     (Int32.to_int
     (select __anonstruct_Item_7___anonstruct_Key_5_b_items_39_at_L
     (shift (select __anonstruct_Map_8_items_map_7_5_at_L map_7) index_1))))))
  
  
end

theory Logic_is_value_valid

  use import core.Voidp 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate is_value_valid (map_8 : (pointer __anonstruct_Map_8)) (index_2 :
  int) (__anonstruct_Map_8_items_map_8_6_at_L : (memory __anonstruct_Map_8
  (pointer voidP))) (__anonstruct_Item_7_value_1_items_40_at_L : (memory
  voidP (pointer __anonstruct_Value_6)))
  (__anonstruct_Value_6_d_items_40_at_L : (memory __anonstruct_Value_6
  Int32.t)) (__anonstruct_Value_6_c_items_40_at_L : (memory
  __anonstruct_Value_6 Int32.t))
  =
     ((not
      (Int32.(=)
      (select __anonstruct_Value_6_c_items_40_at_L
      (select __anonstruct_Item_7_value_1_items_40_at_L
      (shift (select __anonstruct_Map_8_items_map_8_6_at_L map_8) index_2)))
      (#"map_c.jc" 112 46 58# "expl:Integer cast" (Int32.of_int (0)))))
     \/
     (not
     (Int32.(=)
     (select __anonstruct_Value_6_d_items_40_at_L
     (select __anonstruct_Item_7_value_1_items_40_at_L
     (shift (select __anonstruct_Map_8_items_map_8_6_at_L map_8) index_2)))
     (#"map_c.jc" 113 47 59# "expl:Integer cast" (Int32.of_int (0))))))
  
  
end

module Function_hash_safe

  use import Root___anonstruct_Key_5 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int64 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val hash
  (key_0_0 : (pointer __anonstruct_Key_5)) 
   (__anonstruct_Key_5_key_0_24_alloc_table : (alloc_table
    __anonstruct_Key_5)) 
    (__anonstruct_Key_5_b_key_0_24 : (memory __anonstruct_Key_5 Int32.t)) 
     (__anonstruct_Key_5_a_key_0_24 : (memory __anonstruct_Key_5 Int32.t)) :
      Int64.t
      requires {
        ("expl:Internal"
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 170 16 27#
        "expl:Requires clause"
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 170 16 27#
        "expl:Requires clause"
        ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 170 16 27#
         "expl:Requires clause"
         ((<=) (offset_min __anonstruct_Key_5_key_0_24_alloc_table key_0_0)
         (0)))
        /\
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 170 16 27#
        "expl:Requires clause"
        ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 170 16 27#
         "expl:Requires clause"
         ((>=) (offset_max __anonstruct_Key_5_key_0_24_alloc_table key_0_0)
         (0)))
        /\
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 170 16 27#
        "expl:Requires clause" ((=) true true)))))))) }
      ensures {
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 171 16 53#
        "expl:Ensures clause"
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 171 16 53#
        "expl:Ensures clause"
        ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 171 16 28#
         "expl:Ensures clause"
         (Int64.(<=) (#"map_c.jc" 303 31 43# "expl:Integer cast"
         (Int64.of_int (0))) result))
        /\
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 171 16 53#
        "expl:Ensures clause"
        ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 171 21 53#
         "expl:Ensures clause"
         ((<=) (Int64.to_int result)
         (Int.( *) (34) (Int.(+) (2147483647) (1)))))
        /\
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 172 16 32#
        "expl:Ensures clause" ((=) key_0_0 key_0_0))))))) }
  
end

module Function_getCalculatedIndex_safe

  use import core.Voidp 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_map_correct 
  
  use enum.Int64 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val getCalculatedIndex
  (map_0 : (pointer __anonstruct_Map_8)) 
   (hashValue : Int64.t) 
    (index : Int32.t) 
     (voidP_items_159_alloc_table : (alloc_table voidP)) 
      (__anonstruct_Value_6_items_159_alloc_table : (alloc_table
       __anonstruct_Value_6)) 
       (__anonstruct_Map_8_map_25_alloc_table : (alloc_table
        __anonstruct_Map_8)) 
        (__anonstruct_Map_8_count_map_25 : (memory __anonstruct_Map_8
         Int32.t)) 
         (__anonstruct_Map_8_capacity_map_25 : (memory __anonstruct_Map_8
          Int32.t)) 
          (__anonstruct_Map_8_items_map_25 : (memory __anonstruct_Map_8
           (pointer voidP))) 
           (__anonstruct_Item_7_existent_items_159 : (memory voidP Int32.t)) 
            (__anonstruct_Item_7_value_1_items_159 : (memory voidP (pointer
             __anonstruct_Value_6))) 
             (__anonstruct_Item_7___anonstruct_Key_5_b_items_159 : (memory
              voidP Int32.t)) 
              (__anonstruct_Item_7___anonstruct_Key_5_a_items_159 : (memory
               voidP Int32.t)) 
               (__anonstruct_Value_6_d_items_159 : (memory
                __anonstruct_Value_6 Int32.t)) 
                (__anonstruct_Value_6_c_items_159 : (memory
                 __anonstruct_Value_6 Int32.t)) : Int32.t
                 requires {
                   ("expl:Internal"
                   (#"map_c.jc" 326 12 750# "expl:Requires clause"
                   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 183 16 27#
                    "expl:Requires clause"
                    (#"map_c.jc" 326 12 750# "expl:Requires clause"
                    ((#"map_c.jc" 326 12 750# "expl:Requires clause"
                     ((<=)
                     (offset_min __anonstruct_Map_8_map_25_alloc_table map_0)
                     (0)))
                    /\
                    (#"map_c.jc" 326 12 750# "expl:Requires clause"
                    ((#"map_c.jc" 326 12 750# "expl:Requires clause"
                     ((>=)
                     (offset_max __anonstruct_Map_8_map_25_alloc_table map_0)
                     (0)))
                    /\
                    (#"map_c.jc" 326 12 750# "expl:Requires clause"
                    ((=) true true)))))))
                   /\
                   (#"map_c.jc" 326 12 750# "expl:Requires clause"
                   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 183 31 50#
                    "expl:Requires clause"
                    (is_map_correct map_0 voidP_items_159_alloc_table
                    __anonstruct_Value_6_items_159_alloc_table
                    __anonstruct_Map_8_count_map_25
                    __anonstruct_Map_8_capacity_map_25
                    __anonstruct_Map_8_items_map_25
                    __anonstruct_Item_7_existent_items_159
                    __anonstruct_Item_7_value_1_items_159
                    __anonstruct_Item_7___anonstruct_Key_5_b_items_159
                    __anonstruct_Item_7___anonstruct_Key_5_a_items_159))
                   /\
                   (#"map_c.jc" 326 12 750# "expl:Requires clause"
                   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 184 16 26#
                    "expl:Requires clause"
                    (Int32.(<=) (#"map_c.jc" 332 34 46# "expl:Integer cast"
                    (Int32.of_int (0))) index))
                   /\
                   (#"map_c.jc" 326 12 750# "expl:Requires clause"
                   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 184 21 43#
                    "expl:Requires clause"
                    (Int32.(<=) index
                    (select __anonstruct_Map_8_capacity_map_25 map_0)))
                   /\
                   (#"map_c.jc" 326 12 750# "expl:Requires clause"
                   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 185 16 33#
                    "expl:Requires clause"
                    (Int32.(>)
                    (select __anonstruct_Map_8_capacity_map_25 map_0)
                    (#"map_c.jc" 334 41 53# "expl:Integer cast" (Int32.of_int
                    (0)))))
                   /\
                   (#"map_c.jc" 326 12 750# "expl:Requires clause"
                   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 186 16 30#
                    "expl:Requires clause"
                    (Int64.(<=) (#"map_c.jc" 335 37 49# "expl:Integer cast"
                    (Int64.of_int (0))) hashValue))
                   /\
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 186 21 55#
                   "expl:Requires clause"
                   ((<=) (Int64.to_int hashValue)
                   (Int.( *) (34) (Int.(+) (2147483647) (1))))))))))))))))))
                   }
                 ensures {
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                   "expl:Ensures clause"
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                   "expl:Ensures clause"
                   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                    "expl:Ensures clause" ((=) map_0 map_0))
                   /\
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                   "expl:Ensures clause"
                   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 188 16 27#
                    "expl:Ensures clause"
                    (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                    "expl:Ensures clause"
                    ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                     "expl:Ensures clause"
                     ((<=)
                     (offset_min __anonstruct_Map_8_map_25_alloc_table map_0)
                     (0)))
                    /\
                    (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                    "expl:Ensures clause"
                    ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                     "expl:Ensures clause"
                     ((>=)
                     (offset_max __anonstruct_Map_8_map_25_alloc_table map_0)
                     (0)))
                    /\
                    (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                    "expl:Ensures clause" ((=) true true)))))))
                   /\
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                   "expl:Ensures clause"
                   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 188 31 50#
                    "expl:Ensures clause"
                    (is_map_correct map_0 voidP_items_159_alloc_table
                    __anonstruct_Value_6_items_159_alloc_table
                    __anonstruct_Map_8_count_map_25
                    __anonstruct_Map_8_capacity_map_25
                    __anonstruct_Map_8_items_map_25
                    __anonstruct_Item_7_existent_items_159
                    __anonstruct_Item_7_value_1_items_159
                    __anonstruct_Item_7___anonstruct_Key_5_b_items_159
                    __anonstruct_Item_7___anonstruct_Key_5_a_items_159))
                   /\
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                   "expl:Ensures clause"
                   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 189 16 44#
                    "expl:Ensures clause" (Int64.(=) hashValue hashValue))
                   /\
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                   "expl:Ensures clause"
                   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 190 16 36#
                    "expl:Ensures clause" (Int32.(=) index index))
                   /\
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                   "expl:Ensures clause"
                   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 191 16 28#
                    "expl:Ensures clause"
                    (Int32.(<=) (#"map_c.jc" 348 38 50# "expl:Integer cast"
                    (Int32.of_int (0))) result))
                   /\
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 191 21 44#
                   "expl:Ensures clause"
                   (Int32.(<) result
                   (select __anonstruct_Map_8_capacity_map_25 map_0))))))))))))))))
                   }
  
end

theory Logic_is_item_exists

  use import core.Voidp 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_value_valid 
  
  use import Logic_is_key_valid 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate is_item_exists (map_10 : (pointer __anonstruct_Map_8)) (index_4 :
  int) (__anonstruct_Map_8_items_map_10_9_at_L : (memory __anonstruct_Map_8
  (pointer voidP))) (__anonstruct_Item_7_existent_items_42_at_L : (memory
  voidP Int32.t)) (__anonstruct_Item_7_value_1_items_42_at_L : (memory voidP
  (pointer __anonstruct_Value_6)))
  (__anonstruct_Item_7___anonstruct_Key_5_b_items_42_at_L : (memory voidP
  Int32.t)) (__anonstruct_Item_7___anonstruct_Key_5_a_items_42_at_L : (memory
  voidP Int32.t)) (__anonstruct_Value_6_d_items_42_at_L : (memory
  __anonstruct_Value_6 Int32.t)) (__anonstruct_Value_6_c_items_42_at_L :
  (memory __anonstruct_Value_6 Int32.t))
  =
     ((Int32.(=)
      (select __anonstruct_Item_7_existent_items_42_at_L
      (shift (select __anonstruct_Map_8_items_map_10_9_at_L map_10) index_4))
      (#"map_c.jc" 124 44 56# "expl:Integer cast" (Int32.of_int (1))))
     /\
     ((is_key_valid map_10 index_4 __anonstruct_Map_8_items_map_10_9_at_L
      __anonstruct_Item_7___anonstruct_Key_5_b_items_42_at_L
      __anonstruct_Item_7___anonstruct_Key_5_a_items_42_at_L)
     /\
     (is_value_valid map_10 index_4 __anonstruct_Map_8_items_map_10_9_at_L
     __anonstruct_Item_7_value_1_items_42_at_L
     __anonstruct_Value_6_d_items_42_at_L
     __anonstruct_Value_6_c_items_42_at_L)))
  
  
end

theory Logic_is_key_exists

  use import core.Voidp 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import Root___anonstruct_Key_5 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_item_exists 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate is_key_exists (map_9 : (pointer __anonstruct_Map_8)) (key :
  (pointer __anonstruct_Key_5)) (__anonstruct_Map_8_capacity_map_9_7_at_L :
  (memory __anonstruct_Map_8 Int32.t)) (__anonstruct_Map_8_items_map_9_7_at_L
  : (memory __anonstruct_Map_8 (pointer voidP)))
  (__anonstruct_Item_7_existent_items_41_at_L : (memory voidP Int32.t))
  (__anonstruct_Item_7_value_1_items_41_at_L : (memory voidP (pointer
  __anonstruct_Value_6)))
  (__anonstruct_Item_7___anonstruct_Key_5_b_items_41_at_L : (memory voidP
  Int32.t)) (__anonstruct_Item_7___anonstruct_Key_5_a_items_41_at_L : (memory
  voidP Int32.t)) (__anonstruct_Value_6_d_items_41_at_L : (memory
  __anonstruct_Value_6 Int32.t)) (__anonstruct_Value_6_c_items_41_at_L :
  (memory __anonstruct_Value_6 Int32.t)) (__anonstruct_Key_5_b_key_8_at_L :
  (memory __anonstruct_Key_5 Int32.t)) (__anonstruct_Key_5_a_key_8_at_L :
  (memory __anonstruct_Key_5 Int32.t))
  =
     (exists index_3 : int.
      (((<=) (0) index_3) /\
      (((<) index_3
       (Int32.to_int (select __anonstruct_Map_8_capacity_map_9_7_at_L map_9)))
      /\
      ((is_item_exists map_9 index_3 __anonstruct_Map_8_items_map_9_7_at_L
       __anonstruct_Item_7_existent_items_41_at_L
       __anonstruct_Item_7_value_1_items_41_at_L
       __anonstruct_Item_7___anonstruct_Key_5_b_items_41_at_L
       __anonstruct_Item_7___anonstruct_Key_5_a_items_41_at_L
       __anonstruct_Value_6_d_items_41_at_L
       __anonstruct_Value_6_c_items_41_at_L)
      /\
      ((Int32.(=)
       (select __anonstruct_Item_7___anonstruct_Key_5_a_items_41_at_L
       (shift (select __anonstruct_Map_8_items_map_9_7_at_L map_9) index_3))
       (select __anonstruct_Key_5_a_key_8_at_L key))
      /\
      (Int32.(=)
      (select __anonstruct_Item_7___anonstruct_Key_5_b_items_41_at_L
      (shift (select __anonstruct_Map_8_items_map_9_7_at_L map_9) index_3))
      (select __anonstruct_Key_5_b_key_8_at_L key)))))))
  
  
end

theory Logic_is_pair_exists

  use import core.Voidp 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import Root___anonstruct_Key_5 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_item_exists 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate is_pair_exists (map_12 : (pointer __anonstruct_Map_8)) (key_0 :
  (pointer __anonstruct_Key_5)) (value_0 : (pointer __anonstruct_Value_6))
  (__anonstruct_Map_8_capacity_map_12_11_at_L : (memory __anonstruct_Map_8
  Int32.t)) (__anonstruct_Map_8_items_map_12_11_at_L : (memory
  __anonstruct_Map_8 (pointer voidP)))
  (__anonstruct_Item_7_existent_items_43_at_L : (memory voidP Int32.t))
  (__anonstruct_Item_7_value_1_items_43_at_L : (memory voidP (pointer
  __anonstruct_Value_6)))
  (__anonstruct_Item_7___anonstruct_Key_5_b_items_43_at_L : (memory voidP
  Int32.t)) (__anonstruct_Item_7___anonstruct_Key_5_a_items_43_at_L : (memory
  voidP Int32.t)) (__anonstruct_Value_6_d_items_43_at_L : (memory
  __anonstruct_Value_6 Int32.t)) (__anonstruct_Value_6_d_value_0_13_at_L :
  (memory __anonstruct_Value_6 Int32.t))
  (__anonstruct_Value_6_c_items_43_at_L : (memory __anonstruct_Value_6
  Int32.t)) (__anonstruct_Value_6_c_value_0_13_at_L : (memory
  __anonstruct_Value_6 Int32.t)) (__anonstruct_Key_5_b_key_0_12_at_L :
  (memory __anonstruct_Key_5 Int32.t)) (__anonstruct_Key_5_a_key_0_12_at_L :
  (memory __anonstruct_Key_5 Int32.t))
  =
     (exists index_5 : int.
      (((<=) (0) index_5) /\
      (((<) index_5
       (Int32.to_int
       (select __anonstruct_Map_8_capacity_map_12_11_at_L map_12)))
      /\
      ((is_item_exists map_12 index_5 __anonstruct_Map_8_items_map_12_11_at_L
       __anonstruct_Item_7_existent_items_43_at_L
       __anonstruct_Item_7_value_1_items_43_at_L
       __anonstruct_Item_7___anonstruct_Key_5_b_items_43_at_L
       __anonstruct_Item_7___anonstruct_Key_5_a_items_43_at_L
       __anonstruct_Value_6_d_items_43_at_L
       __anonstruct_Value_6_c_items_43_at_L)
      /\
      ((Int32.(=)
       (select __anonstruct_Item_7___anonstruct_Key_5_a_items_43_at_L
       (shift (select __anonstruct_Map_8_items_map_12_11_at_L map_12)
       index_5)) (select __anonstruct_Key_5_a_key_0_12_at_L key_0))
      /\
      ((Int32.(=)
       (select __anonstruct_Item_7___anonstruct_Key_5_b_items_43_at_L
       (shift (select __anonstruct_Map_8_items_map_12_11_at_L map_12)
       index_5)) (select __anonstruct_Key_5_b_key_0_12_at_L key_0))
      /\
      ((Int32.(=)
       (select __anonstruct_Value_6_c_items_43_at_L
       (select __anonstruct_Item_7_value_1_items_43_at_L
       (shift (select __anonstruct_Map_8_items_map_12_11_at_L map_12)
       index_5))) (select __anonstruct_Value_6_c_value_0_13_at_L value_0))
      /\
      (Int32.(=)
      (select __anonstruct_Value_6_d_items_43_at_L
      (select __anonstruct_Item_7_value_1_items_43_at_L
      (shift (select __anonstruct_Map_8_items_map_12_11_at_L map_12) index_5)))
      (select __anonstruct_Value_6_d_value_0_13_at_L value_0)))))))))
  
  
end

module Function_removeElement_safety
#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 287 4 51#
"expl:removeElement, safety"

  use import core.Voidp 
  
  use import core.Upd_safe 
  
  use import core.Upd_offset_safe 
  
  use import core.Tag_table_type 
  
  use import core.Shift_safe 
  
  use Safe_int64 
  
  use Safe_int32 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import Root___anonstruct_Key_5 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_value_valid 
  
  use import Logic_is_pair_exists 
  
  use import Logic_is_map_correct 
  
  use import Logic_is_key_valid 
  
  use import Logic_is_key_exists 
  
  use import Logic_is_item_exists 
  
  use enum.Int64 
  
  use enum.Int32 
  
  use import int.Int 
  
  use Function_hash_safe 
  
  use Function_getCalculatedIndex_safe 
  
  use import Exceptions 
  
  use import core.Eq_pointer_safe 
  
  use import Axiomatic_ItemsCount 
  
  use import core.Alloc_table 
  
  use import core.Acc_safe 
  
  use import core.Acc_offset_safe 
  
  use why3.Bool.Bool 
  
  let removeElement #"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 287 4 51#
  "expl:Function removeElement, safety" =
  fun
   (map_2 : (pointer __anonstruct_Map_8)) (key_1 : (pointer
   __anonstruct_Key_5)) (value_0_0 : (pointer __anonstruct_Value_6))
   (__anonstruct_Value_6_c_value_0_28 : ref (memory __anonstruct_Value_6
   Int32.t)) (__anonstruct_Value_6_c_items_54 : ref (memory
   __anonstruct_Value_6 Int32.t)) (__anonstruct_Value_6_d_value_0_28 : ref
   (memory __anonstruct_Value_6 Int32.t)) (__anonstruct_Value_6_d_items_54 :
   ref (memory __anonstruct_Value_6 Int32.t))
   (__anonstruct_Item_7___anonstruct_Key_5_a_items_54 : ref (memory voidP
   Int32.t)) (__anonstruct_Item_7___anonstruct_Key_5_b_items_54 : ref (memory
   voidP Int32.t)) (__anonstruct_Item_7_existent_items_54 : ref (memory voidP
   Int32.t)) (__anonstruct_Map_8_items_map_2_26 : ref (memory
   __anonstruct_Map_8 (pointer voidP))) (__anonstruct_Map_8_count_map_2_26 :
   ref (memory __anonstruct_Map_8 Int32.t))
   (__anonstruct_Key_5_key_1_27_alloc_table : (alloc_table
   __anonstruct_Key_5)) (__anonstruct_Map_8_map_2_26_alloc_table :
   (alloc_table __anonstruct_Map_8))
   (__anonstruct_Value_6_value_0_28_alloc_table : (alloc_table
   __anonstruct_Value_6)) (__anonstruct_Value_6_items_54_alloc_table :
   (alloc_table __anonstruct_Value_6)) (voidP_items_54_alloc_table :
   (alloc_table voidP)) (voidP_items_54_tag_table : (tag_table voidP))
   (__anonstruct_Key_5_a_key_1_27 : (memory __anonstruct_Key_5 Int32.t))
   (__anonstruct_Key_5_b_key_1_27 : (memory __anonstruct_Key_5 Int32.t))
   (__anonstruct_Item_7_value_1_items_54 : (memory voidP (pointer
   __anonstruct_Value_6))) (__anonstruct_Map_8_capacity_map_2_26 : (memory
   __anonstruct_Map_8 Int32.t)) 
   requires {
   (#"map_c.jc" 364 12 1173#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 254 16 27#
    (#"map_c.jc" 364 12 1173#
    ((#"map_c.jc" 364 12 1173#
     ((<=) (offset_min __anonstruct_Map_8_map_2_26_alloc_table map_2) (0)))
    /\
    (#"map_c.jc" 364 12 1173#
    ((#"map_c.jc" 364 12 1173#
     ((>=) (offset_max __anonstruct_Map_8_map_2_26_alloc_table map_2) (0)))
    /\ (#"map_c.jc" 364 12 1173# ((=) true true)))))))
   /\
   (#"map_c.jc" 364 12 1173#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 254 31 50#
    (is_map_correct map_2 voidP_items_54_alloc_table
    __anonstruct_Value_6_items_54_alloc_table
    !__anonstruct_Map_8_count_map_2_26 __anonstruct_Map_8_capacity_map_2_26
    !__anonstruct_Map_8_items_map_2_26 !__anonstruct_Item_7_existent_items_54
    __anonstruct_Item_7_value_1_items_54
    !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
    !__anonstruct_Item_7___anonstruct_Key_5_a_items_54))
   /\
   (#"map_c.jc" 364 12 1173#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 255 16 27#
    (#"map_c.jc" 364 12 1173#
    ((#"map_c.jc" 364 12 1173#
     ((<=) (offset_min __anonstruct_Key_5_key_1_27_alloc_table key_1) (0)))
    /\
    (#"map_c.jc" 364 12 1173#
    ((#"map_c.jc" 364 12 1173#
     ((>=) (offset_max __anonstruct_Key_5_key_1_27_alloc_table key_1) (0)))
    /\ (#"map_c.jc" 364 12 1173# ((=) true true)))))))
   /\
   (#"map_c.jc" 364 12 1173#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 255 31 96#
    (forall i_3_0 : int.
     ((((<=) (0) i_3_0) /\
      ((<) i_3_0
      (Int32.to_int (select !__anonstruct_Map_8_count_map_2_26 map_2)))) ->
      (is_key_valid map_2 i_3_0 !__anonstruct_Map_8_items_map_2_26
      !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
      !__anonstruct_Item_7___anonstruct_Key_5_a_items_54))))
   /\
   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 256 16 81#
   (forall i_4 : int.
    ((((<=) (0) i_4) /\
     ((<) i_4
     (Int32.to_int (select !__anonstruct_Map_8_count_map_2_26 map_2)))) ->
     (is_value_valid map_2 i_4 !__anonstruct_Map_8_items_map_2_26
     __anonstruct_Item_7_value_1_items_54 !__anonstruct_Value_6_d_items_54
     !__anonstruct_Value_6_c_items_54)))))))))))) }
   ensures { ("expl:Postcondition" true) }  ->
   'Init:
   (let return = ref (Safe_int32.any_  () ) in
   try
    begin
    (let hashValue_0 = ref (Safe_int64.any_  () ) in
    (let index_0_1 = ref (Safe_int32.any_  () ) in
    (let calcIndex = ref (Safe_int32.any_  () ) in
    (let __retres_1 = ref (Safe_int32.any_  () ) in
    try
     begin
     (hashValue_0 :=
      (let _jessie_113 =
      (let _jessie_114 = key_1 in
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 288 21 30#
      "expl:Precondition for hash"
      (Function_hash_safe.hash  _jessie_114
       __anonstruct_Key_5_key_1_27_alloc_table __anonstruct_Key_5_b_key_1_27
       __anonstruct_Key_5_a_key_1_27 ))) in
      begin
      (assert {
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 288 21 30#
      "expl:Pointer index bounds" true) }); _jessie_113 end));
      begin
      any unit
      requires { true }
      ensures {
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 289 15 54#
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 289 15 54#
        ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 289 15 54#
         (Int64.(<=) (#"map_c.jc" 477 54 66# "expl:Integer cast"
         (Int64.of_int (0))) !hashValue_0))
        /\
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 289 15 54#
        ((<=) (Int64.to_int !hashValue_0)
        (Int.( *) (34) (Int.(+) (2147483647) (1)))))))) } ; () end;
      try
       begin
       (index_0_1 :=
        (let _jessie_141 =
        (#"map_c.jc" 485 30 42# "expl:Integer cast" (Safe_int32.of_int (0)))
        in
        begin
        (assert {
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 295 13 18#
        "expl:Pointer index bounds" true) }); _jessie_141 end));
        'LoopEntry:
        begin
        'LoopEntry:
        'Loop_4:
        loop
        invariant { (#"map_c.jc" 487 9 7991# true) }
          variant {
            (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 293 21 42#
            (Int.(-)
            (Int32.to_int
            (select __anonstruct_Map_8_capacity_map_2_26 map_2))
            (Int32.to_int !index_0_1))) }
         begin
         any unit
         requires { true } reads { map_2 }
         ensures {
           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 292 23 50#
           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 292 23 50#
           ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 292 23 33#
            (Int32.(<=) (#"map_c.jc" 489 43 55# "expl:Integer cast"
            (Int32.of_int (0))) !index_0_1))
           /\
           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 292 28 50#
           (Int32.(<=) !index_0_1
           (select __anonstruct_Map_8_capacity_map_2_26 map_2)))))) } ;
          try
           begin
           'LoopCurrent:
           begin
           'LoopCurrent:
           (if
           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 295 24 45#
           (Safe_int32.(<)  !index_0_1
            (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 295 32 45#
            "expl:Pointer dereference"
            (acc  __anonstruct_Map_8_map_2_26_alloc_table
             __anonstruct_Map_8_capacity_map_2_26 map_2 )) )) then ()
           else (raise (Goto_while_0_break_0_exc ())));
            begin
            begin
            any unit
            requires { true } reads {
            __anonstruct_Item_7___anonstruct_Key_5_a_items_54,
            __anonstruct_Item_7___anonstruct_Key_5_b_items_54,
            __anonstruct_Item_7_existent_items_54,
            __anonstruct_Map_8_count_map_2_26,
            __anonstruct_Map_8_items_map_2_26,
            __anonstruct_Value_6_c_items_54, __anonstruct_Value_6_d_items_54,
            map_2 }
            ensures {
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 296 19 38#
              (is_map_correct map_2 voidP_items_54_alloc_table
              __anonstruct_Value_6_items_54_alloc_table
              !__anonstruct_Map_8_count_map_2_26
              __anonstruct_Map_8_capacity_map_2_26
              !__anonstruct_Map_8_items_map_2_26
              !__anonstruct_Item_7_existent_items_54
              __anonstruct_Item_7_value_1_items_54
              !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
              !__anonstruct_Item_7___anonstruct_Key_5_a_items_54)) } ; () end;
             begin
             (calcIndex :=
              (let _jessie_115 =
              (let _jessie_118 = map_2 in
              (let _jessie_117 = !hashValue_0 in
              (let _jessie_116 = !index_0_1 in
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 297 24 65#
              "expl:Precondition for getCalculatedIndex"
              (Function_getCalculatedIndex_safe.getCalculatedIndex 
               _jessie_118 _jessie_117 _jessie_116 voidP_items_54_alloc_table
               __anonstruct_Value_6_items_54_alloc_table
               __anonstruct_Map_8_map_2_26_alloc_table
               !__anonstruct_Map_8_count_map_2_26
               __anonstruct_Map_8_capacity_map_2_26
               !__anonstruct_Map_8_items_map_2_26
               !__anonstruct_Item_7_existent_items_54
               __anonstruct_Item_7_value_1_items_54
               !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
               !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
               !__anonstruct_Value_6_d_items_54
               !__anonstruct_Value_6_c_items_54 ))))) in
              begin
              (assert {
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 297 24 65#
              "expl:Pointer index bounds" true) }); _jessie_115 end));
              begin
              any unit
              requires { true } reads { map_2 }
              ensures {
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 300 19 49#
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 300 19 49#
                ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 300 19 49#
                 (Int32.(<=) (#"map_c.jc" 509 66 78# "expl:Integer cast"
                 (Int32.of_int (0))) !calcIndex))
                /\
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 300 19 49#
                (Int32.(<) !calcIndex
                (select __anonstruct_Map_8_capacity_map_2_26 map_2)))))) } ;
               () end;
              (if
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 302 12 47#
              (Safe_int32.(=) 
               (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 302 12 42#
               "expl:Pointer dereference"
               (acc_offset_typesafe  voidP_items_54_alloc_table
                !__anonstruct_Item_7_existent_items_54
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 302 12 22#
                "expl:Pointer dereference"
                (acc  __anonstruct_Map_8_map_2_26_alloc_table
                 !__anonstruct_Map_8_items_map_2_26 map_2 ))
                (Safe_int32.to_int  !calcIndex ) ))
               (#"map_c.jc" 517 34 46# "expl:Integer cast"
               (Safe_int32.of_int (1))) ))
              then
               (if
               (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 303 12 49#
               (Safe_int32.(=) 
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 303 12 39#
                "expl:Pointer dereference"
                (acc_offset_typesafe  voidP_items_54_alloc_table
                 !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                 (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 303 12 22#
                 "expl:Pointer dereference"
                 (acc  __anonstruct_Map_8_map_2_26_alloc_table
                  !__anonstruct_Map_8_items_map_2_26 map_2 ))
                 (Safe_int32.to_int  !calcIndex ) ))
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 303 43 49#
                "expl:Pointer dereference"
                (acc  __anonstruct_Key_5_key_1_27_alloc_table
                 __anonstruct_Key_5_a_key_1_27 key_1 )) ))
               then
                (if
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 304 12 49#
                (Safe_int32.(=) 
                 (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 304 12 39#
                 "expl:Pointer dereference"
                 (acc_offset_typesafe  voidP_items_54_alloc_table
                  !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                  (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 304 12 22#
                  "expl:Pointer dereference"
                  (acc  __anonstruct_Map_8_map_2_26_alloc_table
                   !__anonstruct_Map_8_items_map_2_26 map_2 ))
                  (Safe_int32.to_int  !calcIndex ) ))
                 (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 304 43 49#
                 "expl:Pointer dereference"
                 (acc  __anonstruct_Key_5_key_1_27_alloc_table
                  __anonstruct_Key_5_b_key_1_27 key_1 )) ))
                then
                 begin
                 begin
                 any unit
                 requires { true } reads {
                 __anonstruct_Item_7___anonstruct_Key_5_a_items_54,
                 __anonstruct_Item_7___anonstruct_Key_5_b_items_54,
                 __anonstruct_Item_7_existent_items_54,
                 __anonstruct_Map_8_items_map_2_26,
                 __anonstruct_Value_6_c_items_54,
                 __anonstruct_Value_6_d_items_54, key_1, map_2 }
                 ensures {
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 307 23 46#
                   (is_key_exists map_2 key_1
                   __anonstruct_Map_8_capacity_map_2_26
                   !__anonstruct_Map_8_items_map_2_26
                   !__anonstruct_Item_7_existent_items_54
                   __anonstruct_Item_7_value_1_items_54
                   !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                   !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                   !__anonstruct_Value_6_d_items_54
                   !__anonstruct_Value_6_c_items_54
                   __anonstruct_Key_5_b_key_1_27
                   __anonstruct_Key_5_a_key_1_27)) } ; () end;
                  begin
                  any unit
                  requires { true } reads {
                  __anonstruct_Item_7___anonstruct_Key_5_a_items_54,
                  __anonstruct_Item_7___anonstruct_Key_5_b_items_54,
                  __anonstruct_Item_7_existent_items_54,
                  __anonstruct_Map_8_items_map_2_26,
                  __anonstruct_Value_6_c_items_54,
                  __anonstruct_Value_6_d_items_54, map_2 }
                  ensures {
                    (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 308 23 53#
                    (is_item_exists map_2 (Int32.to_int !calcIndex)
                    !__anonstruct_Map_8_items_map_2_26
                    !__anonstruct_Item_7_existent_items_54
                    __anonstruct_Item_7_value_1_items_54
                    !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                    !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                    !__anonstruct_Value_6_d_items_54
                    !__anonstruct_Value_6_c_items_54)) } ; () end;
                  begin
                  (let _jessie_136 =
                  (let _jessie_135 =
                  (#"map_c.jc" 547 92 104# "expl:Integer cast"
                  (Safe_int32.of_int (0))) in
                  begin
                  (assert {
                  (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 309 12 46#
                  "expl:Pointer index bounds" true) }); _jessie_135 end) in
                  (let _jessie_137 =
                  (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 309 12 22#
                  "expl:Pointer dereference"
                  (acc  __anonstruct_Map_8_map_2_26_alloc_table
                   !__anonstruct_Map_8_items_map_2_26 map_2 )) in
                  (let _jessie_138 = (Safe_int32.to_int  !calcIndex ) in
                  (let _jessie_139 =
                  (shift_typesafe  _jessie_137 _jessie_138 ) in
                  (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 309 12 46#
                  "expl:Pointer dereference"
                  (upd_offset_typesafe  voidP_items_54_alloc_table
                   __anonstruct_Item_7_existent_items_54 _jessie_137
                   _jessie_138 _jessie_136 ))))));
                   begin
                   (let _jessie_121 =
                   (let _jessie_120 =
                   (Safe_int32.(-) 
                    (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 310 12 22#
                    "expl:Pointer dereference"
                    (acc  __anonstruct_Map_8_map_2_26_alloc_table
                     !__anonstruct_Map_8_count_map_2_26 map_2 ))
                    (#"map_c.jc" 551 68 80# "expl:Integer cast"
                    (Safe_int32.of_int (1))) ) in
                   begin
                   (assert {
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 310 12 24#
                   "expl:Pointer index bounds" true) }); _jessie_120 end) in
                   (let _jessie_122 = map_2 in
                   (let _jessie_123 = (0) in
                   (let _jessie_124 = _jessie_122 in
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 310 12 24#
                   "expl:Pointer dereference"
                   (upd  __anonstruct_Map_8_map_2_26_alloc_table
                    __anonstruct_Map_8_count_map_2_26 _jessie_122 _jessie_121
                    ))))));
                    begin
                    any unit
                    requires { true } reads {
                    __anonstruct_Item_7___anonstruct_Key_5_a_items_54,
                    __anonstruct_Item_7___anonstruct_Key_5_b_items_54,
                    __anonstruct_Item_7_existent_items_54,
                    __anonstruct_Map_8_items_map_2_26,
                    __anonstruct_Value_6_c_items_54,
                    __anonstruct_Value_6_d_items_54, map_2 }
                    ensures {
                      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 312 23 66#
                      ((=)
                      (Int.(-)
                      (all_count map_2 __anonstruct_Map_8_capacity_map_2_26
                      !__anonstruct_Map_8_items_map_2_26
                      !__anonstruct_Item_7_existent_items_54) (1))
                      (all_count map_2 __anonstruct_Map_8_capacity_map_2_26
                      (at !__anonstruct_Map_8_items_map_2_26 'Init) (at
                      !__anonstruct_Item_7_existent_items_54 'Init)))) } ; ()
                    end;
                    begin
                    any unit
                    requires { true } reads {
                    __anonstruct_Map_8_count_map_2_26, map_2 }
                    ensures {
                      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 313 23 55#
                      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 313 23 55#
                      ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 313 23 55#
                       (Int32.(<=) (#"map_c.jc" 569 62 74#
                       "expl:Integer cast" (Int32.of_int (0)))
                       (select !__anonstruct_Map_8_count_map_2_26 map_2)))
                      /\
                      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 313 23 55#
                      (Int32.(<=)
                      (select !__anonstruct_Map_8_count_map_2_26 map_2)
                      (select __anonstruct_Map_8_capacity_map_2_26 map_2))))))
                      } ; () end;
                    (if
                    (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 315 16 21#
                    (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 315 16 21#
                    (neq_pointer  __anonstruct_Value_6_value_0_28_alloc_table
                     __anonstruct_Value_6_value_0_28_alloc_table value_0_0
                     (null  ) )))
                    then
                     begin
                     (let _jessie_126 =
                     (let _jessie_125 =
                     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 316 25 52#
                     "expl:Pointer dereference"
                     (acc_safe  !__anonstruct_Value_6_c_items_54
                      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 316 25 52#
                      "expl:Pointer dereference"
                      (acc_offset_typesafe  voidP_items_54_alloc_table
                       __anonstruct_Item_7_value_1_items_54
                       (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 316 25 35#
                       "expl:Pointer dereference"
                       (acc  __anonstruct_Map_8_map_2_26_alloc_table
                        !__anonstruct_Map_8_items_map_2_26 map_2 ))
                       (Safe_int32.to_int  !calcIndex ) )) )) in
                     begin
                     (assert {
                     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 316 16 52#
                     "expl:Pointer index bounds" true) }); _jessie_125 end)
                     in
                     (let _jessie_127 = value_0_0 in
                     (let _jessie_128 = (0) in
                     (let _jessie_129 = _jessie_127 in
                     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 316 16 52#
                     "expl:Pointer dereference"
                     (upd  __anonstruct_Value_6_value_0_28_alloc_table
                      __anonstruct_Value_6_c_value_0_28 _jessie_127
                      _jessie_126 ))))));
                      (let _jessie_131 =
                      (let _jessie_130 =
                      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 316 25 52#
                      "expl:Pointer dereference"
                      (acc_safe  !__anonstruct_Value_6_d_items_54
                       (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 316 25 52#
                       "expl:Pointer dereference"
                       (acc_offset_typesafe  voidP_items_54_alloc_table
                        __anonstruct_Item_7_value_1_items_54
                        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 316 25 35#
                        "expl:Pointer dereference"
                        (acc  __anonstruct_Map_8_map_2_26_alloc_table
                         !__anonstruct_Map_8_items_map_2_26 map_2 ))
                        (Safe_int32.to_int  !calcIndex ) )) )) in
                      begin
                      (assert {
                      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 316 16 52#
                      "expl:Pointer index bounds" true) }); _jessie_130 end)
                      in
                      (let _jessie_132 = value_0_0 in
                      (let _jessie_133 = (0) in
                      (let _jessie_134 = _jessie_132 in
                      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 316 16 52#
                      "expl:Pointer dereference"
                      (upd  __anonstruct_Value_6_value_0_28_alloc_table
                       __anonstruct_Value_6_d_value_0_28 _jessie_132
                       _jessie_131 )))))) end else ());
                    begin
                    (__retres_1 :=
                     (let _jessie_119 =
                     (#"map_c.jc" 594 84 96# "expl:Integer cast"
                     (Safe_int32.of_int (1))) in
                     begin
                     (assert {
                     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 319 12 21#
                     "expl:Pointer index bounds" true) }); _jessie_119 end));
                     (raise (Goto_return_label_0_exc ())) end end end end
                else ()) else ()) else ()) end end;
            (index_0_1 :=
             (let _jessie_140 =
             (Safe_int32.(+)  !index_0_1
              (#"map_c.jc" 601 59 71# "expl:Integer cast"
              (Safe_int32.of_int (1))) ) in
             begin
             (assert {
             (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 295 47 54#
             "expl:Pointer index bounds" true) }); _jessie_140 end)) end;
            (raise (Loop_continue_exc ())) end with Loop_continue_exc
           _jessie_8 -> () end end end; (raise (Goto_while_0_break_0_exc ()))
        end end with Goto_while_0_break_0_exc _jessie_5 ->
       'While_0_break_0: 'While_0_break_0: () end;
      begin
      any unit
      requires { true } reads {
      __anonstruct_Item_7___anonstruct_Key_5_a_items_54,
      __anonstruct_Item_7___anonstruct_Key_5_b_items_54,
      __anonstruct_Item_7_existent_items_54,
      __anonstruct_Map_8_items_map_2_26, __anonstruct_Value_6_c_items_54,
      __anonstruct_Value_6_d_items_54, key_1, map_2 }
      ensures {
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 323 15 39#
        (not
        (is_key_exists map_2 key_1 __anonstruct_Map_8_capacity_map_2_26
        !__anonstruct_Map_8_items_map_2_26
        !__anonstruct_Item_7_existent_items_54
        __anonstruct_Item_7_value_1_items_54
        !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
        !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
        !__anonstruct_Value_6_d_items_54 !__anonstruct_Value_6_c_items_54
        __anonstruct_Key_5_b_key_1_27 __anonstruct_Key_5_a_key_1_27))) } ; ()
      end;
      begin
      any unit
      requires { true } reads {
      __anonstruct_Item_7___anonstruct_Key_5_a_items_54,
      __anonstruct_Item_7___anonstruct_Key_5_b_items_54,
      __anonstruct_Item_7_existent_items_54,
      __anonstruct_Map_8_items_map_2_26, __anonstruct_Value_6_c_items_54,
      __anonstruct_Value_6_c_value_0_28, __anonstruct_Value_6_d_items_54,
      __anonstruct_Value_6_d_value_0_28, key_1, map_2, value_0_0 }
      ensures {
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 324 12 44#
        (not
        (is_pair_exists map_2 key_1 value_0_0
        __anonstruct_Map_8_capacity_map_2_26
        !__anonstruct_Map_8_items_map_2_26
        !__anonstruct_Item_7_existent_items_54
        __anonstruct_Item_7_value_1_items_54
        !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
        !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
        !__anonstruct_Value_6_d_items_54 !__anonstruct_Value_6_d_value_0_28
        !__anonstruct_Value_6_c_items_54 !__anonstruct_Value_6_c_value_0_28
        __anonstruct_Key_5_b_key_1_27 __anonstruct_Key_5_a_key_1_27))) } ; ()
      end;
      begin
      (__retres_1 :=
       (let _jessie_112 =
       (#"map_c.jc" 618 30 42# "expl:Integer cast" (Safe_int32.of_int (0)))
       in
       begin
       (assert {
       (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 326 4 13#
       "expl:Pointer index bounds" true) }); _jessie_112 end));
       (raise (Goto_return_label_0_exc ())) end end with
     Goto_return_label_0_exc _jessie_6 ->
     'Return_label_0:
     'Return_label_0:
     begin
     (return :=
      (let _jessie_142 = !__retres_1 in
      begin
      (assert { (#"map_c.jc" 620 7 24# "expl:Pointer index bounds" true) });
       _jessie_142 end)); (raise Return) end end)))); absurd  end with Return
    -> !return end)
  
end

module Function_hash

  use import Root___anonstruct_Key_5 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int64 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val hash
  (key_0_0 : (pointer __anonstruct_Key_5)) 
   (__anonstruct_Key_5_key_0_24_alloc_table : (alloc_table
    __anonstruct_Key_5)) 
    (__anonstruct_Key_5_b_key_0_24 : (memory __anonstruct_Key_5 Int32.t)) 
     (__anonstruct_Key_5_a_key_0_24 : (memory __anonstruct_Key_5 Int32.t)) :
      Int64.t
      requires { true }
      ensures {
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 171 16 53#
        "expl:Ensures clause"
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 171 16 53#
        "expl:Ensures clause"
        ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 171 16 28#
         "expl:Ensures clause"
         (Int64.(<=) (#"map_c.jc" 303 31 43# "expl:Integer cast"
         (Int64.of_int (0))) result))
        /\
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 171 16 53#
        "expl:Ensures clause"
        ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 171 21 53#
         "expl:Ensures clause"
         ((<=) (Int64.to_int result)
         (Int.( *) (34) (Int.(+) (2147483647) (1)))))
        /\
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 172 16 32#
        "expl:Ensures clause" ((=) key_0_0 key_0_0))))))) }
  
end

module Function_getCalculatedIndex

  use import core.Voidp 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_map_correct 
  
  use enum.Int64 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val getCalculatedIndex
  (map_0 : (pointer __anonstruct_Map_8)) 
   (hashValue : Int64.t) 
    (index : Int32.t) 
     (voidP_items_159_alloc_table : (alloc_table voidP)) 
      (__anonstruct_Value_6_items_159_alloc_table : (alloc_table
       __anonstruct_Value_6)) 
       (__anonstruct_Map_8_map_25_alloc_table : (alloc_table
        __anonstruct_Map_8)) 
        (__anonstruct_Map_8_count_map_25 : (memory __anonstruct_Map_8
         Int32.t)) 
         (__anonstruct_Map_8_capacity_map_25 : (memory __anonstruct_Map_8
          Int32.t)) 
          (__anonstruct_Map_8_items_map_25 : (memory __anonstruct_Map_8
           (pointer voidP))) 
           (__anonstruct_Item_7_existent_items_159 : (memory voidP Int32.t)) 
            (__anonstruct_Item_7_value_1_items_159 : (memory voidP (pointer
             __anonstruct_Value_6))) 
             (__anonstruct_Item_7___anonstruct_Key_5_b_items_159 : (memory
              voidP Int32.t)) 
              (__anonstruct_Item_7___anonstruct_Key_5_a_items_159 : (memory
               voidP Int32.t)) 
               (__anonstruct_Value_6_d_items_159 : (memory
                __anonstruct_Value_6 Int32.t)) 
                (__anonstruct_Value_6_c_items_159 : (memory
                 __anonstruct_Value_6 Int32.t)) : Int32.t
                 requires { true }
                 ensures {
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                   "expl:Ensures clause"
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                   "expl:Ensures clause"
                   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                    "expl:Ensures clause" ((=) map_0 map_0))
                   /\
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                   "expl:Ensures clause"
                   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 188 16 27#
                    "expl:Ensures clause"
                    (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                    "expl:Ensures clause"
                    ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                     "expl:Ensures clause"
                     ((<=)
                     (offset_min __anonstruct_Map_8_map_25_alloc_table map_0)
                     (0)))
                    /\
                    (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                    "expl:Ensures clause"
                    ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                     "expl:Ensures clause"
                     ((>=)
                     (offset_max __anonstruct_Map_8_map_25_alloc_table map_0)
                     (0)))
                    /\
                    (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                    "expl:Ensures clause" ((=) true true)))))))
                   /\
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                   "expl:Ensures clause"
                   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 188 31 50#
                    "expl:Ensures clause"
                    (is_map_correct map_0 voidP_items_159_alloc_table
                    __anonstruct_Value_6_items_159_alloc_table
                    __anonstruct_Map_8_count_map_25
                    __anonstruct_Map_8_capacity_map_25
                    __anonstruct_Map_8_items_map_25
                    __anonstruct_Item_7_existent_items_159
                    __anonstruct_Item_7_value_1_items_159
                    __anonstruct_Item_7___anonstruct_Key_5_b_items_159
                    __anonstruct_Item_7___anonstruct_Key_5_a_items_159))
                   /\
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                   "expl:Ensures clause"
                   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 189 16 44#
                    "expl:Ensures clause" (Int64.(=) hashValue hashValue))
                   /\
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                   "expl:Ensures clause"
                   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 190 16 36#
                    "expl:Ensures clause" (Int32.(=) index index))
                   /\
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 187 16 32#
                   "expl:Ensures clause"
                   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 191 16 28#
                    "expl:Ensures clause"
                    (Int32.(<=) (#"map_c.jc" 348 38 50# "expl:Integer cast"
                    (Int32.of_int (0))) result))
                   /\
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 191 21 44#
                   "expl:Ensures clause"
                   (Int32.(<) result
                   (select __anonstruct_Map_8_capacity_map_25 map_0))))))))))))))))
                   }
  
end

module Function_removeElement_behaviors
#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 287 4 51#
"expl:removeElement, behaviors"

  use import core.Voidp 
  
  use import core.Upd_unsafe 
  
  use Unsafe_int64 
  
  use Unsafe_int32 
  
  use import core.Tag_table_type 
  
  use import core.Shift_unsafe 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import Root___anonstruct_Key_5 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pset_range 
  
  use import core.Pset_deref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_value_valid 
  
  use import Logic_is_pair_exists 
  
  use import Logic_is_map_correct 
  
  use import Logic_is_key_valid 
  
  use import Logic_is_key_exists 
  
  use import Logic_is_item_exists 
  
  use enum.Int64 
  
  use enum.Int32 
  
  use import int.Int 
  
  use Function_hash 
  
  use Function_getCalculatedIndex 
  
  use import Exceptions 
  
  use import Axiomatic_ItemsCount 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use import core.Acc_unsafe 
  
  use why3.Bool.Bool 
  
  let removeElement_ensures_default
  #"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 287 4 51#
  "expl:Function removeElement, default behavior" =
  fun
   (map_2 : (pointer __anonstruct_Map_8)) (key_1 : (pointer
   __anonstruct_Key_5)) (value_0_0 : (pointer __anonstruct_Value_6))
   (__anonstruct_Value_6_c_value_0_28 : ref (memory __anonstruct_Value_6
   Int32.t)) (__anonstruct_Value_6_c_items_54 : ref (memory
   __anonstruct_Value_6 Int32.t)) (__anonstruct_Value_6_d_value_0_28 : ref
   (memory __anonstruct_Value_6 Int32.t)) (__anonstruct_Value_6_d_items_54 :
   ref (memory __anonstruct_Value_6 Int32.t))
   (__anonstruct_Item_7___anonstruct_Key_5_a_items_54 : ref (memory voidP
   Int32.t)) (__anonstruct_Item_7___anonstruct_Key_5_b_items_54 : ref (memory
   voidP Int32.t)) (__anonstruct_Item_7_existent_items_54 : ref (memory voidP
   Int32.t)) (__anonstruct_Map_8_items_map_2_26 : ref (memory
   __anonstruct_Map_8 (pointer voidP))) (__anonstruct_Map_8_count_map_2_26 :
   ref (memory __anonstruct_Map_8 Int32.t))
   (__anonstruct_Key_5_key_1_27_alloc_table : (alloc_table
   __anonstruct_Key_5)) (__anonstruct_Map_8_map_2_26_alloc_table :
   (alloc_table __anonstruct_Map_8))
   (__anonstruct_Value_6_value_0_28_alloc_table : (alloc_table
   __anonstruct_Value_6)) (__anonstruct_Value_6_items_54_alloc_table :
   (alloc_table __anonstruct_Value_6)) (voidP_items_54_alloc_table :
   (alloc_table voidP)) (voidP_items_54_tag_table : (tag_table voidP))
   (__anonstruct_Key_5_a_key_1_27 : (memory __anonstruct_Key_5 Int32.t))
   (__anonstruct_Key_5_b_key_1_27 : (memory __anonstruct_Key_5 Int32.t))
   (__anonstruct_Item_7_value_1_items_54 : (memory voidP (pointer
   __anonstruct_Value_6))) (__anonstruct_Map_8_capacity_map_2_26 : (memory
   __anonstruct_Map_8 Int32.t)) 
   requires {
   (#"map_c.jc" 364 12 1173#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 254 16 27#
    (#"map_c.jc" 364 12 1173#
    ((#"map_c.jc" 364 12 1173#
     ((<=) (offset_min __anonstruct_Map_8_map_2_26_alloc_table map_2) (0)))
    /\
    (#"map_c.jc" 364 12 1173#
    ((#"map_c.jc" 364 12 1173#
     ((>=) (offset_max __anonstruct_Map_8_map_2_26_alloc_table map_2) (0)))
    /\ (#"map_c.jc" 364 12 1173# ((=) true true)))))))
   /\
   (#"map_c.jc" 364 12 1173#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 254 31 50#
    (is_map_correct map_2 voidP_items_54_alloc_table
    __anonstruct_Value_6_items_54_alloc_table
    !__anonstruct_Map_8_count_map_2_26 __anonstruct_Map_8_capacity_map_2_26
    !__anonstruct_Map_8_items_map_2_26 !__anonstruct_Item_7_existent_items_54
    __anonstruct_Item_7_value_1_items_54
    !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
    !__anonstruct_Item_7___anonstruct_Key_5_a_items_54))
   /\
   (#"map_c.jc" 364 12 1173#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 255 16 27#
    (#"map_c.jc" 364 12 1173#
    ((#"map_c.jc" 364 12 1173#
     ((<=) (offset_min __anonstruct_Key_5_key_1_27_alloc_table key_1) (0)))
    /\
    (#"map_c.jc" 364 12 1173#
    ((#"map_c.jc" 364 12 1173#
     ((>=) (offset_max __anonstruct_Key_5_key_1_27_alloc_table key_1) (0)))
    /\ (#"map_c.jc" 364 12 1173# ((=) true true)))))))
   /\
   (#"map_c.jc" 364 12 1173#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 255 31 96#
    (forall i_3_0 : int.
     ((((<=) (0) i_3_0) /\
      ((<) i_3_0
      (Int32.to_int (select !__anonstruct_Map_8_count_map_2_26 map_2)))) ->
      (is_key_valid map_2 i_3_0 !__anonstruct_Map_8_items_map_2_26
      !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
      !__anonstruct_Item_7___anonstruct_Key_5_a_items_54))))
   /\
   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 256 16 81#
   (forall i_4 : int.
    ((((<=) (0) i_4) /\
     ((<) i_4
     (Int32.to_int (select !__anonstruct_Map_8_count_map_2_26 map_2)))) ->
     (is_value_valid map_2 i_4 !__anonstruct_Map_8_items_map_2_26
     __anonstruct_Item_7_value_1_items_54 !__anonstruct_Value_6_d_items_54
     !__anonstruct_Value_6_c_items_54)))))))))))) }
   ensures {
     ("expl:Postcondition"
     ((((((((((#"map_c.jc" 383 10 408# "expl:Assigns clause"
              (not_assigns __anonstruct_Value_6_value_0_28_alloc_table
              __anonstruct_Value_6_value_0_28_alloc_table (old
              !__anonstruct_Value_6_c_value_0_28)
              !__anonstruct_Value_6_c_value_0_28 (pset_singleton value_0_0)))
             /\
             (#"map_c.jc" 383 10 408# "expl:Assigns clause"
             (not_assigns __anonstruct_Value_6_items_54_alloc_table
             __anonstruct_Value_6_items_54_alloc_table (old
             !__anonstruct_Value_6_c_items_54)
             !__anonstruct_Value_6_c_items_54
             (pset_deref __anonstruct_Item_7_value_1_items_54
             (pset_range
             (pset_deref (old !__anonstruct_Map_8_items_map_2_26)
             (pset_singleton map_2)) (0)
             (Int.(-)
             (Int32.to_int
             (select __anonstruct_Map_8_capacity_map_2_26 map_2)) (1)))))))
            /\
            (#"map_c.jc" 383 10 408# "expl:Assigns clause"
            (not_assigns __anonstruct_Value_6_value_0_28_alloc_table
            __anonstruct_Value_6_value_0_28_alloc_table (old
            !__anonstruct_Value_6_d_value_0_28)
            !__anonstruct_Value_6_d_value_0_28 (pset_singleton value_0_0))))
           /\
           (#"map_c.jc" 383 10 408# "expl:Assigns clause"
           (not_assigns __anonstruct_Value_6_items_54_alloc_table
           __anonstruct_Value_6_items_54_alloc_table (old
           !__anonstruct_Value_6_d_items_54) !__anonstruct_Value_6_d_items_54
           (pset_deref __anonstruct_Item_7_value_1_items_54
           (pset_range
           (pset_deref (old !__anonstruct_Map_8_items_map_2_26)
           (pset_singleton map_2)) (0)
           (Int.(-)
           (Int32.to_int (select __anonstruct_Map_8_capacity_map_2_26 map_2))
           (1)))))))
          /\
          (#"map_c.jc" 383 10 408# "expl:Assigns clause"
          (not_assigns voidP_items_54_alloc_table voidP_items_54_alloc_table
          (old !__anonstruct_Item_7___anonstruct_Key_5_a_items_54)
          !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
          (pset_range
          (pset_deref (old !__anonstruct_Map_8_items_map_2_26)
          (pset_singleton map_2)) (0)
          (Int.(-)
          (Int32.to_int (select __anonstruct_Map_8_capacity_map_2_26 map_2))
          (1))))))
         /\
         (#"map_c.jc" 383 10 408# "expl:Assigns clause"
         (not_assigns voidP_items_54_alloc_table voidP_items_54_alloc_table
         (old !__anonstruct_Item_7___anonstruct_Key_5_b_items_54)
         !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
         (pset_range
         (pset_deref (old !__anonstruct_Map_8_items_map_2_26)
         (pset_singleton map_2)) (0)
         (Int.(-)
         (Int32.to_int (select __anonstruct_Map_8_capacity_map_2_26 map_2))
         (1))))))
        /\
        (#"map_c.jc" 383 10 408# "expl:Assigns clause"
        (not_assigns voidP_items_54_alloc_table voidP_items_54_alloc_table
        (old !__anonstruct_Item_7_existent_items_54)
        !__anonstruct_Item_7_existent_items_54
        (pset_range
        (pset_deref (old !__anonstruct_Map_8_items_map_2_26)
        (pset_singleton map_2)) (0)
        (Int.(-)
        (Int32.to_int (select __anonstruct_Map_8_capacity_map_2_26 map_2))
        (1))))))
       /\
       (#"map_c.jc" 383 10 408# "expl:Assigns clause"
       (not_assigns __anonstruct_Map_8_map_2_26_alloc_table
       __anonstruct_Map_8_map_2_26_alloc_table (old
       !__anonstruct_Map_8_items_map_2_26) !__anonstruct_Map_8_items_map_2_26
       pset_empty)))
      /\
      (#"map_c.jc" 383 10 408# "expl:Assigns clause"
      (not_assigns __anonstruct_Map_8_map_2_26_alloc_table
      __anonstruct_Map_8_map_2_26_alloc_table (old
      !__anonstruct_Map_8_count_map_2_26) !__anonstruct_Map_8_count_map_2_26
      (pset_singleton map_2))))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
     "expl:Ensures clause"
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 20#
      "expl:Ensures clause"
      (Int32.(=) (select __anonstruct_Key_5_a_key_1_27 key_1)
      (select __anonstruct_Key_5_a_key_1_27 key_1)))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 20#
      "expl:Ensures clause"
      (Int32.(=) (select __anonstruct_Key_5_b_key_1_27 key_1)
      (select __anonstruct_Key_5_b_key_1_27 key_1)))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 259 16 391#
      "expl:Ensures clause"
      (((((<=)
         (offset_min __anonstruct_Value_6_value_0_28_alloc_table value_0_0)
         (0))
        /\
        (((>=)
         (offset_max __anonstruct_Value_6_value_0_28_alloc_table value_0_0)
         (0))
        /\ ((=) true true)))
       /\
       (Int32.(=) result (#"map_c.jc" 399 48 60# "expl:Integer cast"
       (Int32.of_int (1))))) ->
       (forall i_5 : int.
        (((Int32.(=)
          (select !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
          (shift (select !__anonstruct_Map_8_items_map_2_26 map_2) i_5))
          (select __anonstruct_Key_5_a_key_1_27 key_1))
         /\
         ((Int32.(=)
          (select !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
          (shift (select !__anonstruct_Map_8_items_map_2_26 map_2) i_5))
          (select __anonstruct_Key_5_b_key_1_27 key_1))
         /\
         (Int32.(=) result (#"map_c.jc" 405 52 64# "expl:Integer cast"
         (Int32.of_int (1)))))) ->
         ((Int32.(=) (select !__anonstruct_Value_6_c_value_0_28 value_0_0)
          (select (old !__anonstruct_Value_6_c_items_54)
          (select __anonstruct_Item_7_value_1_items_54
          (shift (select (old !__anonstruct_Map_8_items_map_2_26) map_2) i_5))))
         /\
         (Int32.(=) (select !__anonstruct_Value_6_d_value_0_28 value_0_0)
         (select (old !__anonstruct_Value_6_d_items_54)
         (select __anonstruct_Item_7_value_1_items_54
         (shift (select (old !__anonstruct_Map_8_items_map_2_26) map_2) i_5)))))))))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 265 16 27#
      "expl:Ensures clause"
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
      "expl:Ensures clause"
      ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
       "expl:Ensures clause"
       ((<=) (offset_min __anonstruct_Map_8_map_2_26_alloc_table map_2) (0)))
      /\
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
      "expl:Ensures clause"
      ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
       "expl:Ensures clause"
       ((>=) (offset_max __anonstruct_Map_8_map_2_26_alloc_table map_2) (0)))
      /\
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
      "expl:Ensures clause" ((=) true true)))))))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 265 31 50#
      "expl:Ensures clause"
      (is_map_correct map_2 voidP_items_54_alloc_table
      __anonstruct_Value_6_items_54_alloc_table
      !__anonstruct_Map_8_count_map_2_26 __anonstruct_Map_8_capacity_map_2_26
      !__anonstruct_Map_8_items_map_2_26
      !__anonstruct_Item_7_existent_items_54
      __anonstruct_Item_7_value_1_items_54
      !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
      !__anonstruct_Item_7___anonstruct_Key_5_a_items_54))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 266 16 67#
      "expl:Ensures clause"
      ((Int32.(=) result (#"map_c.jc" 416 50 62# "expl:Integer cast"
       (Int32.of_int (1)))) ->
       ((=)
       (Int32.to_int (select (old !__anonstruct_Map_8_count_map_2_26) map_2))
       (Int.(+)
       (Int32.to_int (select !__anonstruct_Map_8_count_map_2_26 map_2)) (1)))))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 267 16 63#
      "expl:Ensures clause"
      ((Int32.(=) result (#"map_c.jc" 420 52 64# "expl:Integer cast"
       (Int32.of_int (0)))) ->
       (Int32.(=) (select (old !__anonstruct_Map_8_count_map_2_26) map_2)
       (select !__anonstruct_Map_8_count_map_2_26 map_2))))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 268 16 52#
      "expl:Ensures clause"
      (Int32.(=) (select __anonstruct_Map_8_capacity_map_2_26 map_2)
      (select __anonstruct_Map_8_capacity_map_2_26 map_2)))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 270 16 90#
      "expl:Ensures clause"
      ((Int32.(=) result (#"map_c.jc" 425 56 68# "expl:Integer cast"
       (Int32.of_int (1)))) ->
       ((is_key_exists map_2 key_1 __anonstruct_Map_8_capacity_map_2_26
        !__anonstruct_Map_8_items_map_2_26
        !__anonstruct_Item_7_existent_items_54
        __anonstruct_Item_7_value_1_items_54
        !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
        !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
        !__anonstruct_Value_6_d_items_54 !__anonstruct_Value_6_c_items_54
        __anonstruct_Key_5_b_key_1_27 __anonstruct_Key_5_a_key_1_27)
       /\
       (not
       (is_key_exists map_2 key_1 __anonstruct_Map_8_capacity_map_2_26
       !__anonstruct_Map_8_items_map_2_26
       !__anonstruct_Item_7_existent_items_54
       __anonstruct_Item_7_value_1_items_54
       !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
       !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
       !__anonstruct_Value_6_d_items_54 !__anonstruct_Value_6_c_items_54
       __anonstruct_Key_5_b_key_1_27 __anonstruct_Key_5_a_key_1_27)))))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 271 16 196#
      "expl:Ensures clause"
      ((Int32.(=) result (#"map_c.jc" 430 58 70# "expl:Integer cast"
       (Int32.of_int (1)))) ->
       ((is_pair_exists map_2 key_1 value_0_0
        __anonstruct_Map_8_capacity_map_2_26
        !__anonstruct_Map_8_items_map_2_26
        !__anonstruct_Item_7_existent_items_54
        __anonstruct_Item_7_value_1_items_54
        !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
        !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
        !__anonstruct_Value_6_d_items_54 !__anonstruct_Value_6_d_value_0_28
        !__anonstruct_Value_6_c_items_54 !__anonstruct_Value_6_c_value_0_28
        __anonstruct_Key_5_b_key_1_27 __anonstruct_Key_5_a_key_1_27)
       /\
       (not
       (is_pair_exists map_2 key_1 value_0_0
       __anonstruct_Map_8_capacity_map_2_26
       !__anonstruct_Map_8_items_map_2_26
       !__anonstruct_Item_7_existent_items_54
       __anonstruct_Item_7_value_1_items_54
       !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
       !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
       !__anonstruct_Value_6_d_items_54 !__anonstruct_Value_6_d_value_0_28
       !__anonstruct_Value_6_c_items_54 !__anonstruct_Value_6_c_value_0_28
       __anonstruct_Key_5_b_key_1_27 __anonstruct_Key_5_a_key_1_27)))))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 273 16 63#
      "expl:Ensures clause"
      ((not
       (is_key_exists map_2 key_1 __anonstruct_Map_8_capacity_map_2_26
       !__anonstruct_Map_8_items_map_2_26
       !__anonstruct_Item_7_existent_items_54
       __anonstruct_Item_7_value_1_items_54
       !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
       !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
       !__anonstruct_Value_6_d_items_54 !__anonstruct_Value_6_c_items_54
       __anonstruct_Key_5_b_key_1_27 __anonstruct_Key_5_a_key_1_27)) ->
       (Int32.(=) result (#"map_c.jc" 442 61 73# "expl:Integer cast"
       (Int32.of_int (0))))))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 274 16 31#
      "expl:Ensures clause"
      (Int32.(=) (select !__anonstruct_Map_8_count_map_2_26 map_2)
      (#"map_c.jc" 444 52 64# "expl:Integer cast" (Int32.of_int (0)))))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 275 27 98#
      "expl:Ensures clause"
      (forall index_9 : int.
       ((Int32.(=)
        (select !__anonstruct_Item_7_existent_items_54
        (shift (select !__anonstruct_Map_8_items_map_2_26 map_2) index_9))
        (#"map_c.jc" 448 56 68# "expl:Integer cast" (Int32.of_int (0)))) ->
        (Int32.(=) result (#"map_c.jc" 450 57 69# "expl:Integer cast"
        (Int32.of_int (0)))))))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 277 16 215#
     "expl:Ensures clause"
     ((is_key_exists map_2 key_1 __anonstruct_Map_8_capacity_map_2_26 (old
      !__anonstruct_Map_8_items_map_2_26) (old
      !__anonstruct_Item_7_existent_items_54)
      __anonstruct_Item_7_value_1_items_54 (old
      !__anonstruct_Item_7___anonstruct_Key_5_b_items_54) (old
      !__anonstruct_Item_7___anonstruct_Key_5_a_items_54) (old
      !__anonstruct_Value_6_d_items_54) (old
      !__anonstruct_Value_6_c_items_54) __anonstruct_Key_5_b_key_1_27
      __anonstruct_Key_5_a_key_1_27) ->
      ((Int32.(=) result (#"map_c.jc" 455 56 68# "expl:Integer cast"
       (Int32.of_int (1))))
      /\
      (((=)
       (Int.(+)
       (all_count map_2 __anonstruct_Map_8_capacity_map_2_26
       !__anonstruct_Map_8_items_map_2_26
       !__anonstruct_Item_7_existent_items_54) (1))
       (all_count map_2 __anonstruct_Map_8_capacity_map_2_26 (old
       !__anonstruct_Map_8_items_map_2_26) (old
       !__anonstruct_Item_7_existent_items_54)))
      /\
      (not
      (is_pair_exists map_2 key_1 value_0_0
      __anonstruct_Map_8_capacity_map_2_26 !__anonstruct_Map_8_items_map_2_26
      !__anonstruct_Item_7_existent_items_54
      __anonstruct_Item_7_value_1_items_54
      !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
      !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
      !__anonstruct_Value_6_d_items_54 !__anonstruct_Value_6_d_value_0_28
      !__anonstruct_Value_6_c_items_54 !__anonstruct_Value_6_c_value_0_28
      __anonstruct_Key_5_b_key_1_27 __anonstruct_Key_5_a_key_1_27)))))))))))))))))))))))))))))))))))
     } diverges  ->
   'Init:
   (let return = ref (Unsafe_int32.any_  () ) in
   try
    begin
    (let hashValue_0 = ref (Unsafe_int64.any_  () ) in
    (let index_0_1 = ref (Unsafe_int32.any_  () ) in
    (let calcIndex = ref (Unsafe_int32.any_  () ) in
    (let __retres_1 = ref (Unsafe_int32.any_  () ) in
    try
     begin
     (hashValue_0 :=
      (let _jessie_83 = key_1 in
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 288 21 30#
      "expl:Precondition for hash"
      (Function_hash.hash  _jessie_83 __anonstruct_Key_5_key_1_27_alloc_table
       __anonstruct_Key_5_b_key_1_27 __anonstruct_Key_5_a_key_1_27 ))));
      begin
      (assert {
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 289 15 54#
      "expl:Assertion in line 289"
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 289 15 54#
      "expl:Assertion in line 289"
      ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 289 15 54#
       "expl:Assertion in line 289"
       (Int64.(<=) (#"map_c.jc" 477 54 66# "expl:Integer cast" (Int64.of_int
       (0))) !hashValue_0))
      /\
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 289 15 54#
      "expl:Assertion in line 289"
      ((<=) (Int64.to_int !hashValue_0)
      (Int.( *) (34) (Int.(+) (2147483647) (1)))))))) }); () end;
      try
       begin
       (index_0_1 :=
        (#"map_c.jc" 485 30 42# "expl:Integer cast"
        (Unsafe_int32.of_int (0))));
        'LoopEntry:
        begin
        'LoopEntry:
        'Loop_3:
        loop
        invariant
          { ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 292 23 50#
             (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 292 23 50#
             ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 292 23 33#
              (Int32.(<=) (#"map_c.jc" 489 43 55# "expl:Integer cast"
              (Int32.of_int (0))) !index_0_1))
             /\
             (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 292 28 50#
             (Int32.(<=) !index_0_1
             (select __anonstruct_Map_8_capacity_map_2_26 map_2))))))
            /\
            (#"map_c.jc" 487 9 7991#
            ((#"map_c.jc" 487 9 7991#
             ((#"map_c.jc" 487 9 7991#
              ((#"map_c.jc" 487 9 7991#
               ((#"map_c.jc" 487 9 7991#
                ((#"map_c.jc" 487 9 7991#
                 ((#"map_c.jc" 487 9 7991#
                  ((#"map_c.jc" 487 9 7991#
                   ((#"map_c.jc" 383 10 408# "expl:Assigns clause"
                    (not_assigns __anonstruct_Value_6_value_0_28_alloc_table
                    __anonstruct_Value_6_value_0_28_alloc_table (at
                    !__anonstruct_Value_6_c_value_0_28 'Init)
                    !__anonstruct_Value_6_c_value_0_28
                    (pset_singleton value_0_0)))
                   /\
                   (#"map_c.jc" 383 10 408# "expl:Assigns clause"
                   (not_assigns __anonstruct_Value_6_items_54_alloc_table
                   __anonstruct_Value_6_items_54_alloc_table (at
                   !__anonstruct_Value_6_c_items_54 'Init)
                   !__anonstruct_Value_6_c_items_54
                   (pset_deref __anonstruct_Item_7_value_1_items_54
                   (pset_range
                   (pset_deref (at !__anonstruct_Map_8_items_map_2_26 'Init)
                   (pset_singleton map_2)) (0)
                   (Int.(-)
                   (Int32.to_int
                   (select __anonstruct_Map_8_capacity_map_2_26 map_2)) (1))))))))
                  /\
                  (#"map_c.jc" 383 10 408# "expl:Assigns clause"
                  (not_assigns __anonstruct_Value_6_value_0_28_alloc_table
                  __anonstruct_Value_6_value_0_28_alloc_table (at
                  !__anonstruct_Value_6_d_value_0_28 'Init)
                  !__anonstruct_Value_6_d_value_0_28
                  (pset_singleton value_0_0)))))
                 /\
                 (#"map_c.jc" 383 10 408# "expl:Assigns clause"
                 (not_assigns __anonstruct_Value_6_items_54_alloc_table
                 __anonstruct_Value_6_items_54_alloc_table (at
                 !__anonstruct_Value_6_d_items_54 'Init)
                 !__anonstruct_Value_6_d_items_54
                 (pset_deref __anonstruct_Item_7_value_1_items_54
                 (pset_range
                 (pset_deref (at !__anonstruct_Map_8_items_map_2_26 'Init)
                 (pset_singleton map_2)) (0)
                 (Int.(-)
                 (Int32.to_int
                 (select __anonstruct_Map_8_capacity_map_2_26 map_2)) (1))))))))
                /\
                (#"map_c.jc" 383 10 408# "expl:Assigns clause"
                (not_assigns voidP_items_54_alloc_table
                voidP_items_54_alloc_table (at
                !__anonstruct_Item_7___anonstruct_Key_5_a_items_54 'Init)
                !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                (pset_range
                (pset_deref (at !__anonstruct_Map_8_items_map_2_26 'Init)
                (pset_singleton map_2)) (0)
                (Int.(-)
                (Int32.to_int
                (select __anonstruct_Map_8_capacity_map_2_26 map_2)) (1)))))))
               /\
               (#"map_c.jc" 383 10 408# "expl:Assigns clause"
               (not_assigns voidP_items_54_alloc_table
               voidP_items_54_alloc_table (at
               !__anonstruct_Item_7___anonstruct_Key_5_b_items_54 'Init)
               !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
               (pset_range
               (pset_deref (at !__anonstruct_Map_8_items_map_2_26 'Init)
               (pset_singleton map_2)) (0)
               (Int.(-)
               (Int32.to_int
               (select __anonstruct_Map_8_capacity_map_2_26 map_2)) (1)))))))
              /\
              (#"map_c.jc" 383 10 408# "expl:Assigns clause"
              (not_assigns voidP_items_54_alloc_table
              voidP_items_54_alloc_table (at
              !__anonstruct_Item_7_existent_items_54 'Init)
              !__anonstruct_Item_7_existent_items_54
              (pset_range
              (pset_deref (at !__anonstruct_Map_8_items_map_2_26 'Init)
              (pset_singleton map_2)) (0)
              (Int.(-)
              (Int32.to_int
              (select __anonstruct_Map_8_capacity_map_2_26 map_2)) (1)))))))
             /\
             (#"map_c.jc" 383 10 408# "expl:Assigns clause"
             (not_assigns __anonstruct_Map_8_map_2_26_alloc_table
             __anonstruct_Map_8_map_2_26_alloc_table (at
             !__anonstruct_Map_8_items_map_2_26 'Init)
             !__anonstruct_Map_8_items_map_2_26 pset_empty))))
            /\
            (#"map_c.jc" 383 10 408# "expl:Assigns clause"
            (not_assigns __anonstruct_Map_8_map_2_26_alloc_table
            __anonstruct_Map_8_map_2_26_alloc_table (at
            !__anonstruct_Map_8_count_map_2_26 'Init)
            !__anonstruct_Map_8_count_map_2_26 (pset_singleton map_2)))))) } 
          
         begin
         any unit requires { true } ensures { true } ;
          try
           begin
           'LoopCurrent:
           begin
           'LoopCurrent:
           (if
           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 295 24 45#
           (Unsafe_int32.(<)  !index_0_1
            (acc  __anonstruct_Map_8_capacity_map_2_26 map_2 ) )) then ()
           else (raise (Goto_while_0_break_0_exc ())));
            begin
            begin
            (assert {
            (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 296 19 38#
            "expl:Assertion in line 296"
            (is_map_correct map_2 voidP_items_54_alloc_table
            __anonstruct_Value_6_items_54_alloc_table
            !__anonstruct_Map_8_count_map_2_26
            __anonstruct_Map_8_capacity_map_2_26
            !__anonstruct_Map_8_items_map_2_26
            !__anonstruct_Item_7_existent_items_54
            __anonstruct_Item_7_value_1_items_54
            !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
            !__anonstruct_Item_7___anonstruct_Key_5_a_items_54)) }); () end;
             begin
             (calcIndex :=
              (let _jessie_87 = map_2 in
              (let _jessie_86 = !hashValue_0 in
              (let _jessie_85 = !index_0_1 in
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 297 24 65#
              "expl:Precondition for getCalculatedIndex"
              (Function_getCalculatedIndex.getCalculatedIndex  _jessie_87
               _jessie_86 _jessie_85 voidP_items_54_alloc_table
               __anonstruct_Value_6_items_54_alloc_table
               __anonstruct_Map_8_map_2_26_alloc_table
               !__anonstruct_Map_8_count_map_2_26
               __anonstruct_Map_8_capacity_map_2_26
               !__anonstruct_Map_8_items_map_2_26
               !__anonstruct_Item_7_existent_items_54
               __anonstruct_Item_7_value_1_items_54
               !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
               !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
               !__anonstruct_Value_6_d_items_54
               !__anonstruct_Value_6_c_items_54 ))))));
              begin
              (assert {
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 300 19 49#
              "expl:Assertion in line 300"
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 300 19 49#
              "expl:Assertion in line 300"
              ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 300 19 49#
               "expl:Assertion in line 300"
               (Int32.(<=) (#"map_c.jc" 509 66 78# "expl:Integer cast"
               (Int32.of_int (0))) !calcIndex))
              /\
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 300 19 49#
              "expl:Assertion in line 300"
              (Int32.(<) !calcIndex
              (select __anonstruct_Map_8_capacity_map_2_26 map_2)))))) }); ()
              end;
              (if
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 302 12 47#
              (Unsafe_int32.(=) 
               (acc  !__anonstruct_Item_7_existent_items_54
                (shift_  (acc  !__anonstruct_Map_8_items_map_2_26 map_2 )
                 (Unsafe_int32.to_int  !calcIndex ) ) )
               (#"map_c.jc" 517 34 46# "expl:Integer cast"
               (Unsafe_int32.of_int (1))) ))
              then
               (if
               (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 303 12 49#
               (Unsafe_int32.(=) 
                (acc  !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                 (shift_  (acc  !__anonstruct_Map_8_items_map_2_26 map_2 )
                  (Unsafe_int32.to_int  !calcIndex ) ) )
                (acc  __anonstruct_Key_5_a_key_1_27 key_1 ) ))
               then
                (if
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 304 12 49#
                (Unsafe_int32.(=) 
                 (acc  !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                  (shift_  (acc  !__anonstruct_Map_8_items_map_2_26 map_2 )
                   (Unsafe_int32.to_int  !calcIndex ) ) )
                 (acc  __anonstruct_Key_5_b_key_1_27 key_1 ) ))
                then
                 begin
                 begin
                 (assert {
                 (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 307 23 46#
                 "expl:Assertion in line 307"
                 (is_key_exists map_2 key_1
                 __anonstruct_Map_8_capacity_map_2_26
                 !__anonstruct_Map_8_items_map_2_26
                 !__anonstruct_Item_7_existent_items_54
                 __anonstruct_Item_7_value_1_items_54
                 !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                 !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                 !__anonstruct_Value_6_d_items_54
                 !__anonstruct_Value_6_c_items_54
                 __anonstruct_Key_5_b_key_1_27 __anonstruct_Key_5_a_key_1_27))
                 }); () end;
                  begin
                  (assert {
                  (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 308 23 53#
                  "expl:Assertion in line 308"
                  (is_item_exists map_2 (Int32.to_int !calcIndex)
                  !__anonstruct_Map_8_items_map_2_26
                  !__anonstruct_Item_7_existent_items_54
                  __anonstruct_Item_7_value_1_items_54
                  !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                  !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                  !__anonstruct_Value_6_d_items_54
                  !__anonstruct_Value_6_c_items_54)) }); () end;
                  begin
                  (let _jessie_105 =
                  (#"map_c.jc" 547 92 104# "expl:Integer cast"
                  (Unsafe_int32.of_int (0))) in
                  (let _jessie_106 =
                  (acc  !__anonstruct_Map_8_items_map_2_26 map_2 ) in
                  (let _jessie_107 = (Unsafe_int32.to_int  !calcIndex ) in
                  (let _jessie_108 = (shift_  _jessie_106 _jessie_107 ) in
                  (upd  __anonstruct_Item_7_existent_items_54 _jessie_108
                   _jessie_105 )))));
                   begin
                   (let _jessie_90 =
                   (Unsafe_int32.(-) 
                    (acc  !__anonstruct_Map_8_count_map_2_26 map_2 )
                    (#"map_c.jc" 551 68 80# "expl:Integer cast"
                    (Unsafe_int32.of_int (1))) ) in
                   (let _jessie_91 = map_2 in
                   (let _jessie_92 = (0) in
                   (let _jessie_93 = _jessie_91 in
                   (upd  __anonstruct_Map_8_count_map_2_26 _jessie_93
                    _jessie_90 )))));
                    begin
                    (assert {
                    (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 312 23 66#
                    "expl:Assertion in line 312"
                    ((=)
                    (Int.(-)
                    (all_count map_2 __anonstruct_Map_8_capacity_map_2_26
                    !__anonstruct_Map_8_items_map_2_26
                    !__anonstruct_Item_7_existent_items_54) (1))
                    (all_count map_2 __anonstruct_Map_8_capacity_map_2_26 (at
                    !__anonstruct_Map_8_items_map_2_26 'Init) (at
                    !__anonstruct_Item_7_existent_items_54 'Init)))) }); ()
                    end;
                    begin
                    (assert {
                    (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 313 23 55#
                    "expl:Assertion in line 313"
                    (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 313 23 55#
                    "expl:Assertion in line 313"
                    ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 313 23 55#
                     "expl:Assertion in line 313"
                     (Int32.(<=) (#"map_c.jc" 569 62 74# "expl:Integer cast"
                     (Int32.of_int (0)))
                     (select !__anonstruct_Map_8_count_map_2_26 map_2)))
                    /\
                    (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 313 23 55#
                    "expl:Assertion in line 313"
                    (Int32.(<=)
                    (select !__anonstruct_Map_8_count_map_2_26 map_2)
                    (select __anonstruct_Map_8_capacity_map_2_26 map_2))))))
                    }); () end;
                    (if
                    (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 315 16 21#
                    ((<>)  value_0_0 (null  ) ))
                    then
                     begin
                     (let _jessie_95 =
                     (acc  !__anonstruct_Value_6_c_items_54
                      (acc  __anonstruct_Item_7_value_1_items_54
                       (shift_ 
                        (acc  !__anonstruct_Map_8_items_map_2_26 map_2 )
                        (Unsafe_int32.to_int  !calcIndex ) ) ) ) in
                     (let _jessie_96 = value_0_0 in
                     (let _jessie_97 = (0) in
                     (let _jessie_98 = _jessie_96 in
                     (upd  __anonstruct_Value_6_c_value_0_28 _jessie_98
                      _jessie_95 )))));
                      (let _jessie_100 =
                      (acc  !__anonstruct_Value_6_d_items_54
                       (acc  __anonstruct_Item_7_value_1_items_54
                        (shift_ 
                         (acc  !__anonstruct_Map_8_items_map_2_26 map_2 )
                         (Unsafe_int32.to_int  !calcIndex ) ) ) ) in
                      (let _jessie_101 = value_0_0 in
                      (let _jessie_102 = (0) in
                      (let _jessie_103 = _jessie_101 in
                      (upd  __anonstruct_Value_6_d_value_0_28 _jessie_103
                       _jessie_100 ))))) end else ());
                    begin
                    (__retres_1 :=
                     (#"map_c.jc" 594 84 96# "expl:Integer cast"
                     (Unsafe_int32.of_int (1))));
                     (raise (Goto_return_label_0_exc ())) end end end end
                else ()) else ()) else ()) end end;
            (index_0_1 :=
             (Unsafe_int32.(+)  !index_0_1
              (#"map_c.jc" 601 59 71# "expl:Integer cast"
              (Unsafe_int32.of_int (1))) )) end;
            (raise (Loop_continue_exc ())) end with Loop_continue_exc
           _jessie_8 -> () end end end; (raise (Goto_while_0_break_0_exc ()))
        end end with Goto_while_0_break_0_exc _jessie_5 ->
       'While_0_break_0: 'While_0_break_0: () end;
      begin
      (assert {
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 323 15 39#
      "expl:Assertion in line 323"
      (not
      (is_key_exists map_2 key_1 __anonstruct_Map_8_capacity_map_2_26
      !__anonstruct_Map_8_items_map_2_26
      !__anonstruct_Item_7_existent_items_54
      __anonstruct_Item_7_value_1_items_54
      !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
      !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
      !__anonstruct_Value_6_d_items_54 !__anonstruct_Value_6_c_items_54
      __anonstruct_Key_5_b_key_1_27 __anonstruct_Key_5_a_key_1_27))) }); ()
      end;
      begin
      (assert {
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 324 12 44#
      "expl:Assertion in line 324"
      (not
      (is_pair_exists map_2 key_1 value_0_0
      __anonstruct_Map_8_capacity_map_2_26 !__anonstruct_Map_8_items_map_2_26
      !__anonstruct_Item_7_existent_items_54
      __anonstruct_Item_7_value_1_items_54
      !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
      !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
      !__anonstruct_Value_6_d_items_54 !__anonstruct_Value_6_d_value_0_28
      !__anonstruct_Value_6_c_items_54 !__anonstruct_Value_6_c_value_0_28
      __anonstruct_Key_5_b_key_1_27 __anonstruct_Key_5_a_key_1_27))) }); ()
      end;
      begin
      (__retres_1 :=
       (#"map_c.jc" 618 30 42# "expl:Integer cast" (Unsafe_int32.of_int (0))));
       (raise (Goto_return_label_0_exc ())) end end with
     Goto_return_label_0_exc _jessie_6 ->
     'Return_label_0:
     'Return_label_0: begin (return := !__retres_1); (raise Return) end end))));
     absurd  end with Return -> !return end)
  
end

module Function_getElement_safety
#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 372 4 48#
"expl:getElement, safety"

  use import core.Voidp 
  
  use import core.Upd_safe 
  
  use import core.Tag_table_type 
  
  use Safe_int64 
  
  use Safe_int32 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import Root___anonstruct_Key_5 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_value_valid 
  
  use import Logic_is_map_correct 
  
  use import Logic_is_key_valid 
  
  use import Logic_is_key_exists 
  
  use import Logic_is_item_exists 
  
  use enum.Int64 
  
  use enum.Int32 
  
  use import int.Int 
  
  use Function_hash_safe 
  
  use Function_getCalculatedIndex_safe 
  
  use import Exceptions 
  
  use import core.Alloc_table 
  
  use import core.Acc_safe 
  
  use import core.Acc_offset_safe 
  
  use why3.Bool.Bool 
  
  let getElement #"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 372 4 48#
  "expl:Function getElement, safety" =
  fun
   (map_0_0 : (pointer __anonstruct_Map_8)) (key_2 : (pointer
   __anonstruct_Key_5)) (value_1 : (pointer __anonstruct_Value_6))
   (__anonstruct_Value_6_c_value_31 : ref (memory __anonstruct_Value_6
   Int32.t)) (__anonstruct_Value_6_d_value_31 : ref (memory
   __anonstruct_Value_6 Int32.t)) (__anonstruct_Key_5_key_30_alloc_table :
   (alloc_table __anonstruct_Key_5)) (__anonstruct_Map_8_map_0_29_alloc_table
   : (alloc_table __anonstruct_Map_8))
   (__anonstruct_Value_6_value_31_alloc_table : (alloc_table
   __anonstruct_Value_6)) (__anonstruct_Value_6_items_56_alloc_table :
   (alloc_table __anonstruct_Value_6)) (voidP_items_56_alloc_table :
   (alloc_table voidP)) (voidP_items_56_tag_table : (tag_table voidP))
   (__anonstruct_Key_5_a_key_30 : (memory __anonstruct_Key_5 Int32.t))
   (__anonstruct_Key_5_b_key_30 : (memory __anonstruct_Key_5 Int32.t))
   (__anonstruct_Value_6_c_items_56 : (memory __anonstruct_Value_6 Int32.t))
   (__anonstruct_Value_6_d_items_56 : (memory __anonstruct_Value_6 Int32.t))
   (__anonstruct_Item_7___anonstruct_Key_5_a_items_56 : (memory voidP
   Int32.t)) (__anonstruct_Item_7___anonstruct_Key_5_b_items_56 : (memory
   voidP Int32.t)) (__anonstruct_Item_7_value_1_items_56 : (memory voidP
   (pointer __anonstruct_Value_6))) (__anonstruct_Item_7_existent_items_56 :
   (memory voidP Int32.t)) (__anonstruct_Map_8_items_map_0_29 : (memory
   __anonstruct_Map_8 (pointer voidP))) (__anonstruct_Map_8_capacity_map_0_29
   : (memory __anonstruct_Map_8 Int32.t)) (__anonstruct_Map_8_count_map_0_29
   : (memory __anonstruct_Map_8 Int32.t)) 
   requires {
   (#"map_c.jc" 626 12 1580#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 344 16 27#
    (#"map_c.jc" 626 12 1580#
    ((#"map_c.jc" 626 12 1580#
     ((<=) (offset_min __anonstruct_Map_8_map_0_29_alloc_table map_0_0) (0)))
    /\
    (#"map_c.jc" 626 12 1580#
    ((#"map_c.jc" 626 12 1580#
     ((>=) (offset_max __anonstruct_Map_8_map_0_29_alloc_table map_0_0) (0)))
    /\ (#"map_c.jc" 626 12 1580# ((=) true true)))))))
   /\
   (#"map_c.jc" 626 12 1580#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 344 31 50#
    (is_map_correct map_0_0 voidP_items_56_alloc_table
    __anonstruct_Value_6_items_56_alloc_table
    __anonstruct_Map_8_count_map_0_29 __anonstruct_Map_8_capacity_map_0_29
    __anonstruct_Map_8_items_map_0_29 __anonstruct_Item_7_existent_items_56
    __anonstruct_Item_7_value_1_items_56
    __anonstruct_Item_7___anonstruct_Key_5_b_items_56
    __anonstruct_Item_7___anonstruct_Key_5_a_items_56))
   /\
   (#"map_c.jc" 626 12 1580#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 345 16 27#
    (#"map_c.jc" 626 12 1580#
    ((#"map_c.jc" 626 12 1580#
     ((<=) (offset_min __anonstruct_Key_5_key_30_alloc_table key_2) (0)))
    /\
    (#"map_c.jc" 626 12 1580#
    ((#"map_c.jc" 626 12 1580#
     ((>=) (offset_max __anonstruct_Key_5_key_30_alloc_table key_2) (0)))
    /\ (#"map_c.jc" 626 12 1580# ((=) true true)))))))
   /\
   (#"map_c.jc" 626 12 1580#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 345 31 96#
    (forall i_6 : int.
     ((((<=) (0) i_6) /\
      ((<) i_6
      (Int32.to_int (select __anonstruct_Map_8_count_map_0_29 map_0_0)))) ->
      (is_key_valid map_0_0 i_6 __anonstruct_Map_8_items_map_0_29
      __anonstruct_Item_7___anonstruct_Key_5_b_items_56
      __anonstruct_Item_7___anonstruct_Key_5_a_items_56))))
   /\
   (#"map_c.jc" 626 12 1580#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 346 16 29#
    (#"map_c.jc" 626 12 1580#
    ((#"map_c.jc" 626 12 1580#
     ((<=) (offset_min __anonstruct_Value_6_value_31_alloc_table value_1)
     (0)))
    /\
    (#"map_c.jc" 626 12 1580#
    ((#"map_c.jc" 626 12 1580#
     ((>=) (offset_max __anonstruct_Value_6_value_31_alloc_table value_1)
     (0)))
    /\ (#"map_c.jc" 626 12 1580# ((=) true true)))))))
   /\
   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 346 33 100#
   (forall i_7 : int.
    ((((<=) (0) i_7) /\
     ((<) i_7
     (Int32.to_int (select __anonstruct_Map_8_count_map_0_29 map_0_0)))) ->
     (is_value_valid map_0_0 i_7 __anonstruct_Map_8_items_map_0_29
     __anonstruct_Item_7_value_1_items_56 __anonstruct_Value_6_d_items_56
     __anonstruct_Value_6_c_items_56)))))))))))))) }
   ensures { ("expl:Postcondition" true) }  ->
   'Init:
   (let return = ref (Safe_int32.any_  () ) in
   try
    begin
    (let hashValue_1 = ref (Safe_int64.any_  () ) in
    (let index_1_0 = ref (Safe_int32.any_  () ) in
    (let calcIndex_0 = ref (Safe_int32.any_  () ) in
    (let __retres_2 = ref (Safe_int32.any_  () ) in
    try
     begin
     (hashValue_1 :=
      (let _jessie_165 =
      (let _jessie_166 = key_2 in
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 373 21 30#
      "expl:Precondition for hash"
      (Function_hash_safe.hash  _jessie_166
       __anonstruct_Key_5_key_30_alloc_table __anonstruct_Key_5_b_key_30
       __anonstruct_Key_5_a_key_30 ))) in
      begin
      (assert {
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 373 21 30#
      "expl:Pointer index bounds" true) }); _jessie_165 end));
      begin
      any unit
      requires { true }
      ensures {
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 375 15 54#
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 375 15 54#
        ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 375 15 54#
         (Int64.(<=) (#"map_c.jc" 699 54 66# "expl:Integer cast"
         (Int64.of_int (0))) !hashValue_1))
        /\
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 375 15 54#
        ((<=) (Int64.to_int !hashValue_1)
        (Int.( *) (34) (Int.(+) (2147483647) (1)))))))) } ; () end;
      try
       begin
       (index_1_0 :=
        (let _jessie_183 =
        (#"map_c.jc" 707 30 42# "expl:Integer cast" (Safe_int32.of_int (0)))
        in
        begin
        (assert {
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 381 13 18#
        "expl:Pointer index bounds" true) }); _jessie_183 end));
        'LoopEntry:
        begin
        'LoopEntry:
        'Loop_6:
        loop
        invariant { (#"map_c.jc" 709 9 4580# true) }
          variant {
            (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 379 21 42#
            (Int.(-)
            (Int32.to_int
            (select __anonstruct_Map_8_capacity_map_0_29 map_0_0))
            (Int32.to_int !index_1_0))) }
         begin
         any unit
         requires { true } reads { map_0_0 }
         ensures {
           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 378 23 50#
           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 378 23 50#
           ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 378 23 33#
            (Int32.(<=) (#"map_c.jc" 711 43 55# "expl:Integer cast"
            (Int32.of_int (0))) !index_1_0))
           /\
           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 378 28 50#
           (Int32.(<=) !index_1_0
           (select __anonstruct_Map_8_capacity_map_0_29 map_0_0)))))) } ;
          try
           begin
           'LoopCurrent:
           begin
           'LoopCurrent:
           (if
           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 381 24 45#
           (Safe_int32.(<)  !index_1_0
            (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 381 32 45#
            "expl:Pointer dereference"
            (acc  __anonstruct_Map_8_map_0_29_alloc_table
             __anonstruct_Map_8_capacity_map_0_29 map_0_0 )) )) then ()
           else (raise (Goto_while_0_break_1_exc ())));
            begin
            begin
            any unit
            requires { true } reads { map_0_0 }
            ensures {
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 382 19 38#
              (is_map_correct map_0_0 voidP_items_56_alloc_table
              __anonstruct_Value_6_items_56_alloc_table
              __anonstruct_Map_8_count_map_0_29
              __anonstruct_Map_8_capacity_map_0_29
              __anonstruct_Map_8_items_map_0_29
              __anonstruct_Item_7_existent_items_56
              __anonstruct_Item_7_value_1_items_56
              __anonstruct_Item_7___anonstruct_Key_5_b_items_56
              __anonstruct_Item_7___anonstruct_Key_5_a_items_56)) } ; () end;
             begin
             (calcIndex_0 :=
              (let _jessie_167 =
              (let _jessie_170 = map_0_0 in
              (let _jessie_169 = !hashValue_1 in
              (let _jessie_168 = !index_1_0 in
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 383 24 65#
              "expl:Precondition for getCalculatedIndex"
              (Function_getCalculatedIndex_safe.getCalculatedIndex 
               _jessie_170 _jessie_169 _jessie_168 voidP_items_56_alloc_table
               __anonstruct_Value_6_items_56_alloc_table
               __anonstruct_Map_8_map_0_29_alloc_table
               __anonstruct_Map_8_count_map_0_29
               __anonstruct_Map_8_capacity_map_0_29
               __anonstruct_Map_8_items_map_0_29
               __anonstruct_Item_7_existent_items_56
               __anonstruct_Item_7_value_1_items_56
               __anonstruct_Item_7___anonstruct_Key_5_b_items_56
               __anonstruct_Item_7___anonstruct_Key_5_a_items_56
               __anonstruct_Value_6_d_items_56
               __anonstruct_Value_6_c_items_56 ))))) in
              begin
              (assert {
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 383 24 65#
              "expl:Pointer index bounds" true) }); _jessie_167 end));
              begin
              any unit
              requires { true } reads { map_0_0 }
              ensures {
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 386 19 49#
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 386 19 49#
                ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 386 19 49#
                 (Int32.(<=) (#"map_c.jc" 731 66 78# "expl:Integer cast"
                 (Int32.of_int (0))) !calcIndex_0))
                /\
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 386 19 49#
                (Int32.(<) !calcIndex_0
                (select __anonstruct_Map_8_capacity_map_0_29 map_0_0)))))) } ;
               () end;
              (if
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 388 12 47#
              (Safe_int32.(=) 
               (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 388 12 42#
               "expl:Pointer dereference"
               (acc_offset_typesafe  voidP_items_56_alloc_table
                __anonstruct_Item_7_existent_items_56
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 388 12 22#
                "expl:Pointer dereference"
                (acc  __anonstruct_Map_8_map_0_29_alloc_table
                 __anonstruct_Map_8_items_map_0_29 map_0_0 ))
                (Safe_int32.to_int  !calcIndex_0 ) ))
               (#"map_c.jc" 739 34 46# "expl:Integer cast"
               (Safe_int32.of_int (1))) ))
              then
               (if
               (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 389 12 49#
               (Safe_int32.(=) 
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 389 12 39#
                "expl:Pointer dereference"
                (acc_offset_typesafe  voidP_items_56_alloc_table
                 __anonstruct_Item_7___anonstruct_Key_5_a_items_56
                 (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 389 12 22#
                 "expl:Pointer dereference"
                 (acc  __anonstruct_Map_8_map_0_29_alloc_table
                  __anonstruct_Map_8_items_map_0_29 map_0_0 ))
                 (Safe_int32.to_int  !calcIndex_0 ) ))
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 389 43 49#
                "expl:Pointer dereference"
                (acc  __anonstruct_Key_5_key_30_alloc_table
                 __anonstruct_Key_5_a_key_30 key_2 )) ))
               then
                (if
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 390 12 49#
                (Safe_int32.(=) 
                 (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 390 12 39#
                 "expl:Pointer dereference"
                 (acc_offset_typesafe  voidP_items_56_alloc_table
                  __anonstruct_Item_7___anonstruct_Key_5_b_items_56
                  (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 390 12 22#
                  "expl:Pointer dereference"
                  (acc  __anonstruct_Map_8_map_0_29_alloc_table
                   __anonstruct_Map_8_items_map_0_29 map_0_0 ))
                  (Safe_int32.to_int  !calcIndex_0 ) ))
                 (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 390 43 49#
                 "expl:Pointer dereference"
                 (acc  __anonstruct_Key_5_key_30_alloc_table
                  __anonstruct_Key_5_b_key_30 key_2 )) ))
                then
                 begin
                 begin
                 any unit
                 requires { true } reads { map_0_0 }
                 ensures {
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 391 23 53#
                   (is_item_exists map_0_0 (Int32.to_int !calcIndex_0)
                   __anonstruct_Map_8_items_map_0_29
                   __anonstruct_Item_7_existent_items_56
                   __anonstruct_Item_7_value_1_items_56
                   __anonstruct_Item_7___anonstruct_Key_5_b_items_56
                   __anonstruct_Item_7___anonstruct_Key_5_a_items_56
                   __anonstruct_Value_6_d_items_56
                   __anonstruct_Value_6_c_items_56)) } ; () end;
                  begin
                  (let _jessie_178 =
                  (let _jessie_177 =
                  (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 393 21 48#
                  "expl:Pointer dereference"
                  (acc_safe  __anonstruct_Value_6_c_items_56
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 393 21 48#
                   "expl:Pointer dereference"
                   (acc_offset_typesafe  voidP_items_56_alloc_table
                    __anonstruct_Item_7_value_1_items_56
                    (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 393 21 31#
                    "expl:Pointer dereference"
                    (acc  __anonstruct_Map_8_map_0_29_alloc_table
                     __anonstruct_Map_8_items_map_0_29 map_0_0 ))
                    (Safe_int32.to_int  !calcIndex_0 ) )) )) in
                  begin
                  (assert {
                  (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 393 12 48#
                  "expl:Pointer index bounds" true) }); _jessie_177 end) in
                  (let _jessie_179 = value_1 in
                  (let _jessie_180 = (0) in
                  (let _jessie_181 = _jessie_179 in
                  (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 393 12 48#
                  "expl:Pointer dereference"
                  (upd  __anonstruct_Value_6_value_31_alloc_table
                   __anonstruct_Value_6_c_value_31 _jessie_179 _jessie_178 ))))));
                   begin
                   (let _jessie_173 =
                   (let _jessie_172 =
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 393 21 48#
                   "expl:Pointer dereference"
                   (acc_safe  __anonstruct_Value_6_d_items_56
                    (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 393 21 48#
                    "expl:Pointer dereference"
                    (acc_offset_typesafe  voidP_items_56_alloc_table
                     __anonstruct_Item_7_value_1_items_56
                     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 393 21 31#
                     "expl:Pointer dereference"
                     (acc  __anonstruct_Map_8_map_0_29_alloc_table
                      __anonstruct_Map_8_items_map_0_29 map_0_0 ))
                     (Safe_int32.to_int  !calcIndex_0 ) )) )) in
                   begin
                   (assert {
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 393 12 48#
                   "expl:Pointer index bounds" true) }); _jessie_172 end) in
                   (let _jessie_174 = value_1 in
                   (let _jessie_175 = (0) in
                   (let _jessie_176 = _jessie_174 in
                   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 393 12 48#
                   "expl:Pointer dereference"
                   (upd  __anonstruct_Value_6_value_31_alloc_table
                    __anonstruct_Value_6_d_value_31 _jessie_174 _jessie_173 ))))));
                    begin
                    (__retres_2 :=
                     (let _jessie_171 =
                     (#"map_c.jc" 769 84 96# "expl:Integer cast"
                     (Safe_int32.of_int (1))) in
                     begin
                     (assert {
                     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 394 12 21#
                     "expl:Pointer index bounds" true) }); _jessie_171 end));
                     (raise (Goto_return_label_1_exc ())) end end end end
                else ()) else ()) else ()) end end;
            (index_1_0 :=
             (let _jessie_182 =
             (Safe_int32.(+)  !index_1_0
              (#"map_c.jc" 776 59 71# "expl:Integer cast"
              (Safe_int32.of_int (1))) ) in
             begin
             (assert {
             (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 381 47 54#
             "expl:Pointer index bounds" true) }); _jessie_182 end)) end;
            (raise (Loop_continue_exc ())) end with Loop_continue_exc
           _jessie_12 -> () end end end;
         (raise (Goto_while_0_break_1_exc ())) end end with
       Goto_while_0_break_1_exc _jessie_9 ->
       'While_0_break_1: 'While_0_break_1: () end;
      begin
      any unit
      requires { true } reads { key_2, map_0_0 }
      ensures {
        (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 398 15 39#
        (not
        (is_key_exists map_0_0 key_2 __anonstruct_Map_8_capacity_map_0_29
        __anonstruct_Map_8_items_map_0_29
        __anonstruct_Item_7_existent_items_56
        __anonstruct_Item_7_value_1_items_56
        __anonstruct_Item_7___anonstruct_Key_5_b_items_56
        __anonstruct_Item_7___anonstruct_Key_5_a_items_56
        __anonstruct_Value_6_d_items_56 __anonstruct_Value_6_c_items_56
        __anonstruct_Key_5_b_key_30 __anonstruct_Key_5_a_key_30))) } ; () end;
      begin
      (__retres_2 :=
       (let _jessie_164 =
       (#"map_c.jc" 787 30 42# "expl:Integer cast" (Safe_int32.of_int (0)))
       in
       begin
       (assert {
       (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 400 4 13#
       "expl:Pointer index bounds" true) }); _jessie_164 end));
       (raise (Goto_return_label_1_exc ())) end end with
     Goto_return_label_1_exc _jessie_10 ->
     'Return_label_1:
     'Return_label_1:
     begin
     (return :=
      (let _jessie_184 = !__retres_2 in
      begin
      (assert { (#"map_c.jc" 789 7 24# "expl:Pointer index bounds" true) });
       _jessie_184 end)); (raise Return) end end)))); absurd  end with Return
    -> !return end)
  
end

module Function_getElement_behaviors
#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 372 4 48#
"expl:getElement, behaviors"

  use import core.Voidp 
  
  use import core.Upd_unsafe 
  
  use Unsafe_int64 
  
  use Unsafe_int32 
  
  use import core.Tag_table_type 
  
  use import core.Shift_unsafe 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import Root___anonstruct_Key_5 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_value_valid 
  
  use import Logic_is_pair_exists 
  
  use import Logic_is_map_correct 
  
  use import Logic_is_key_valid 
  
  use import Logic_is_key_exists 
  
  use import Logic_is_item_exists 
  
  use enum.Int64 
  
  use enum.Int32 
  
  use import int.Int 
  
  use Function_hash 
  
  use Function_getCalculatedIndex 
  
  use import Exceptions 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use import core.Acc_unsafe 
  
  use why3.Bool.Bool 
  
  let getElement_ensures_default
  #"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 372 4 48#
  "expl:Function getElement, default behavior" =
  fun
   (map_0_0 : (pointer __anonstruct_Map_8)) (key_2 : (pointer
   __anonstruct_Key_5)) (value_1 : (pointer __anonstruct_Value_6))
   (__anonstruct_Value_6_c_value_31 : ref (memory __anonstruct_Value_6
   Int32.t)) (__anonstruct_Value_6_d_value_31 : ref (memory
   __anonstruct_Value_6 Int32.t)) (__anonstruct_Key_5_key_30_alloc_table :
   (alloc_table __anonstruct_Key_5)) (__anonstruct_Map_8_map_0_29_alloc_table
   : (alloc_table __anonstruct_Map_8))
   (__anonstruct_Value_6_value_31_alloc_table : (alloc_table
   __anonstruct_Value_6)) (__anonstruct_Value_6_items_56_alloc_table :
   (alloc_table __anonstruct_Value_6)) (voidP_items_56_alloc_table :
   (alloc_table voidP)) (voidP_items_56_tag_table : (tag_table voidP))
   (__anonstruct_Key_5_a_key_30 : (memory __anonstruct_Key_5 Int32.t))
   (__anonstruct_Key_5_b_key_30 : (memory __anonstruct_Key_5 Int32.t))
   (__anonstruct_Value_6_c_items_56 : (memory __anonstruct_Value_6 Int32.t))
   (__anonstruct_Value_6_d_items_56 : (memory __anonstruct_Value_6 Int32.t))
   (__anonstruct_Item_7___anonstruct_Key_5_a_items_56 : (memory voidP
   Int32.t)) (__anonstruct_Item_7___anonstruct_Key_5_b_items_56 : (memory
   voidP Int32.t)) (__anonstruct_Item_7_value_1_items_56 : (memory voidP
   (pointer __anonstruct_Value_6))) (__anonstruct_Item_7_existent_items_56 :
   (memory voidP Int32.t)) (__anonstruct_Map_8_items_map_0_29 : (memory
   __anonstruct_Map_8 (pointer voidP))) (__anonstruct_Map_8_capacity_map_0_29
   : (memory __anonstruct_Map_8 Int32.t)) (__anonstruct_Map_8_count_map_0_29
   : (memory __anonstruct_Map_8 Int32.t)) 
   requires {
   (#"map_c.jc" 626 12 1580#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 344 16 27#
    (#"map_c.jc" 626 12 1580#
    ((#"map_c.jc" 626 12 1580#
     ((<=) (offset_min __anonstruct_Map_8_map_0_29_alloc_table map_0_0) (0)))
    /\
    (#"map_c.jc" 626 12 1580#
    ((#"map_c.jc" 626 12 1580#
     ((>=) (offset_max __anonstruct_Map_8_map_0_29_alloc_table map_0_0) (0)))
    /\ (#"map_c.jc" 626 12 1580# ((=) true true)))))))
   /\
   (#"map_c.jc" 626 12 1580#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 344 31 50#
    (is_map_correct map_0_0 voidP_items_56_alloc_table
    __anonstruct_Value_6_items_56_alloc_table
    __anonstruct_Map_8_count_map_0_29 __anonstruct_Map_8_capacity_map_0_29
    __anonstruct_Map_8_items_map_0_29 __anonstruct_Item_7_existent_items_56
    __anonstruct_Item_7_value_1_items_56
    __anonstruct_Item_7___anonstruct_Key_5_b_items_56
    __anonstruct_Item_7___anonstruct_Key_5_a_items_56))
   /\
   (#"map_c.jc" 626 12 1580#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 345 16 27#
    (#"map_c.jc" 626 12 1580#
    ((#"map_c.jc" 626 12 1580#
     ((<=) (offset_min __anonstruct_Key_5_key_30_alloc_table key_2) (0)))
    /\
    (#"map_c.jc" 626 12 1580#
    ((#"map_c.jc" 626 12 1580#
     ((>=) (offset_max __anonstruct_Key_5_key_30_alloc_table key_2) (0)))
    /\ (#"map_c.jc" 626 12 1580# ((=) true true)))))))
   /\
   (#"map_c.jc" 626 12 1580#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 345 31 96#
    (forall i_6 : int.
     ((((<=) (0) i_6) /\
      ((<) i_6
      (Int32.to_int (select __anonstruct_Map_8_count_map_0_29 map_0_0)))) ->
      (is_key_valid map_0_0 i_6 __anonstruct_Map_8_items_map_0_29
      __anonstruct_Item_7___anonstruct_Key_5_b_items_56
      __anonstruct_Item_7___anonstruct_Key_5_a_items_56))))
   /\
   (#"map_c.jc" 626 12 1580#
   ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 346 16 29#
    (#"map_c.jc" 626 12 1580#
    ((#"map_c.jc" 626 12 1580#
     ((<=) (offset_min __anonstruct_Value_6_value_31_alloc_table value_1)
     (0)))
    /\
    (#"map_c.jc" 626 12 1580#
    ((#"map_c.jc" 626 12 1580#
     ((>=) (offset_max __anonstruct_Value_6_value_31_alloc_table value_1)
     (0)))
    /\ (#"map_c.jc" 626 12 1580# ((=) true true)))))))
   /\
   (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 346 33 100#
   (forall i_7 : int.
    ((((<=) (0) i_7) /\
     ((<) i_7
     (Int32.to_int (select __anonstruct_Map_8_count_map_0_29 map_0_0)))) ->
     (is_value_valid map_0_0 i_7 __anonstruct_Map_8_items_map_0_29
     __anonstruct_Item_7_value_1_items_56 __anonstruct_Value_6_d_items_56
     __anonstruct_Value_6_c_items_56)))))))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"map_c.jc" 651 10 28# "expl:Assigns clause"
       (not_assigns __anonstruct_Value_6_value_31_alloc_table
       __anonstruct_Value_6_value_31_alloc_table (old
       !__anonstruct_Value_6_c_value_31) !__anonstruct_Value_6_c_value_31
       (pset_singleton value_1)))
      /\
      (#"map_c.jc" 651 10 28# "expl:Assigns clause"
      (not_assigns __anonstruct_Value_6_value_31_alloc_table
      __anonstruct_Value_6_value_31_alloc_table (old
      !__anonstruct_Value_6_d_value_31) !__anonstruct_Value_6_d_value_31
      (pset_singleton value_1))))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
     "expl:Ensures clause"
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 27#
      "expl:Ensures clause"
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
      "expl:Ensures clause"
      ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
       "expl:Ensures clause"
       ((<=) (offset_min __anonstruct_Map_8_map_0_29_alloc_table map_0_0)
       (0)))
      /\
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
      "expl:Ensures clause"
      ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
       "expl:Ensures clause"
       ((>=) (offset_max __anonstruct_Map_8_map_0_29_alloc_table map_0_0)
       (0)))
      /\
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
      "expl:Ensures clause" ((=) true true)))))))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 31 50#
      "expl:Ensures clause"
      (is_map_correct map_0_0 voidP_items_56_alloc_table
      __anonstruct_Value_6_items_56_alloc_table
      __anonstruct_Map_8_count_map_0_29 __anonstruct_Map_8_capacity_map_0_29
      __anonstruct_Map_8_items_map_0_29 __anonstruct_Item_7_existent_items_56
      __anonstruct_Item_7_value_1_items_56
      __anonstruct_Item_7___anonstruct_Key_5_b_items_56
      __anonstruct_Item_7___anonstruct_Key_5_a_items_56))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 349 16 46#
      "expl:Ensures clause"
      (Int32.(=) (select __anonstruct_Map_8_count_map_0_29 map_0_0)
      (select __anonstruct_Map_8_count_map_0_29 map_0_0)))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 350 16 52#
      "expl:Ensures clause"
      (Int32.(=) (select __anonstruct_Map_8_capacity_map_0_29 map_0_0)
      (select __anonstruct_Map_8_capacity_map_0_29 map_0_0)))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 351 16 418#
      "expl:Ensures clause"
      (forall i_8 : int.
       ((Int32.(=)
        (select __anonstruct_Item_7___anonstruct_Key_5_a_items_56
        (shift (select __anonstruct_Map_8_items_map_0_29 map_0_0) i_8))
        (select __anonstruct_Item_7___anonstruct_Key_5_a_items_56
        (shift (select __anonstruct_Map_8_items_map_0_29 map_0_0) i_8)))
       /\
       ((Int32.(=)
        (select __anonstruct_Item_7___anonstruct_Key_5_b_items_56
        (shift (select __anonstruct_Map_8_items_map_0_29 map_0_0) i_8))
        (select __anonstruct_Item_7___anonstruct_Key_5_b_items_56
        (shift (select __anonstruct_Map_8_items_map_0_29 map_0_0) i_8)))
       /\
       ((Int32.(=)
        (select __anonstruct_Item_7_existent_items_56
        (shift (select __anonstruct_Map_8_items_map_0_29 map_0_0) i_8))
        (select __anonstruct_Item_7_existent_items_56
        (shift (select __anonstruct_Map_8_items_map_0_29 map_0_0) i_8)))
       /\
       ((Int32.(=)
        (select __anonstruct_Value_6_c_items_56
        (select __anonstruct_Item_7_value_1_items_56
        (shift (select __anonstruct_Map_8_items_map_0_29 map_0_0) i_8)))
        (select __anonstruct_Value_6_c_items_56
        (select __anonstruct_Item_7_value_1_items_56
        (shift (select __anonstruct_Map_8_items_map_0_29 map_0_0) i_8))))
       /\
       (Int32.(=)
       (select __anonstruct_Value_6_d_items_56
       (select __anonstruct_Item_7_value_1_items_56
       (shift (select __anonstruct_Map_8_items_map_0_29 map_0_0) i_8)))
       (select __anonstruct_Value_6_d_items_56
       (select __anonstruct_Item_7_value_1_items_56
       (shift (select __anonstruct_Map_8_items_map_0_29 map_0_0) i_8))))))))))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 356 16 32#
      "expl:Ensures clause" ((=) key_2 key_2))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
     "expl:Ensures clause"
     ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 357 16 91#
      "expl:Ensures clause"
      (((is_key_exists map_0_0 key_2 __anonstruct_Map_8_capacity_map_0_29
        __anonstruct_Map_8_items_map_0_29
        __anonstruct_Item_7_existent_items_56
        __anonstruct_Item_7_value_1_items_56
        __anonstruct_Item_7___anonstruct_Key_5_b_items_56
        __anonstruct_Item_7___anonstruct_Key_5_a_items_56
        __anonstruct_Value_6_d_items_56 __anonstruct_Value_6_c_items_56
        __anonstruct_Key_5_b_key_30 __anonstruct_Key_5_a_key_30)
       /\
       (is_pair_exists map_0_0 key_2 value_1
       __anonstruct_Map_8_capacity_map_0_29 __anonstruct_Map_8_items_map_0_29
       __anonstruct_Item_7_existent_items_56
       __anonstruct_Item_7_value_1_items_56
       __anonstruct_Item_7___anonstruct_Key_5_b_items_56
       __anonstruct_Item_7___anonstruct_Key_5_a_items_56
       __anonstruct_Value_6_d_items_56 !__anonstruct_Value_6_d_value_31
       __anonstruct_Value_6_c_items_56 !__anonstruct_Value_6_c_value_31
       __anonstruct_Key_5_b_key_30 __anonstruct_Key_5_a_key_30)) ->
       (Int32.(=) result (#"map_c.jc" 681 55 67# "expl:Integer cast"
       (Int32.of_int (1))))))
     /\
     (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 358 16 81#
     "expl:Ensures clause"
     ((not
      (is_key_exists map_0_0 key_2 __anonstruct_Map_8_capacity_map_0_29
      __anonstruct_Map_8_items_map_0_29 __anonstruct_Item_7_existent_items_56
      __anonstruct_Item_7_value_1_items_56
      __anonstruct_Item_7___anonstruct_Key_5_b_items_56
      __anonstruct_Item_7___anonstruct_Key_5_a_items_56
      __anonstruct_Value_6_d_items_56 __anonstruct_Value_6_c_items_56
      __anonstruct_Key_5_b_key_30 __anonstruct_Key_5_a_key_30)) ->
      ((Int32.(=) result (#"map_c.jc" 684 57 69# "expl:Integer cast"
       (Int32.of_int (0))))
      /\ ((=) value_1 value_1))))))))))))))))))))) } diverges  ->
   'Init:
   (let return = ref (Unsafe_int32.any_  () ) in
   try
    begin
    (let hashValue_1 = ref (Unsafe_int64.any_  () ) in
    (let index_1_0 = ref (Unsafe_int32.any_  () ) in
    (let calcIndex_0 = ref (Unsafe_int32.any_  () ) in
    (let __retres_2 = ref (Unsafe_int32.any_  () ) in
    try
     begin
     (hashValue_1 :=
      (let _jessie_145 = key_2 in
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 373 21 30#
      "expl:Precondition for hash"
      (Function_hash.hash  _jessie_145 __anonstruct_Key_5_key_30_alloc_table
       __anonstruct_Key_5_b_key_30 __anonstruct_Key_5_a_key_30 ))));
      begin
      (assert {
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 375 15 54#
      "expl:Assertion in line 375"
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 375 15 54#
      "expl:Assertion in line 375"
      ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 375 15 54#
       "expl:Assertion in line 375"
       (Int64.(<=) (#"map_c.jc" 699 54 66# "expl:Integer cast" (Int64.of_int
       (0))) !hashValue_1))
      /\
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 375 15 54#
      "expl:Assertion in line 375"
      ((<=) (Int64.to_int !hashValue_1)
      (Int.( *) (34) (Int.(+) (2147483647) (1)))))))) }); () end;
      try
       begin
       (index_1_0 :=
        (#"map_c.jc" 707 30 42# "expl:Integer cast"
        (Unsafe_int32.of_int (0))));
        'LoopEntry:
        begin
        'LoopEntry:
        'Loop_5:
        loop
        invariant
          { ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 378 23 50#
             (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 378 23 50#
             ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 378 23 33#
              (Int32.(<=) (#"map_c.jc" 711 43 55# "expl:Integer cast"
              (Int32.of_int (0))) !index_1_0))
             /\
             (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 378 28 50#
             (Int32.(<=) !index_1_0
             (select __anonstruct_Map_8_capacity_map_0_29 map_0_0))))))
            /\
            (#"map_c.jc" 709 9 4580#
            ((#"map_c.jc" 651 10 28# "expl:Assigns clause"
             (not_assigns __anonstruct_Value_6_value_31_alloc_table
             __anonstruct_Value_6_value_31_alloc_table (at
             !__anonstruct_Value_6_c_value_31 'Init)
             !__anonstruct_Value_6_c_value_31 (pset_singleton value_1)))
            /\
            (#"map_c.jc" 651 10 28# "expl:Assigns clause"
            (not_assigns __anonstruct_Value_6_value_31_alloc_table
            __anonstruct_Value_6_value_31_alloc_table (at
            !__anonstruct_Value_6_d_value_31 'Init)
            !__anonstruct_Value_6_d_value_31 (pset_singleton value_1)))))) } 
          
         begin
         any unit requires { true } ensures { true } ;
          try
           begin
           'LoopCurrent:
           begin
           'LoopCurrent:
           (if
           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 381 24 45#
           (Unsafe_int32.(<)  !index_1_0
            (acc  __anonstruct_Map_8_capacity_map_0_29 map_0_0 ) )) then ()
           else (raise (Goto_while_0_break_1_exc ())));
            begin
            begin
            (assert {
            (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 382 19 38#
            "expl:Assertion in line 382"
            (is_map_correct map_0_0 voidP_items_56_alloc_table
            __anonstruct_Value_6_items_56_alloc_table
            __anonstruct_Map_8_count_map_0_29
            __anonstruct_Map_8_capacity_map_0_29
            __anonstruct_Map_8_items_map_0_29
            __anonstruct_Item_7_existent_items_56
            __anonstruct_Item_7_value_1_items_56
            __anonstruct_Item_7___anonstruct_Key_5_b_items_56
            __anonstruct_Item_7___anonstruct_Key_5_a_items_56)) }); () end;
             begin
             (calcIndex_0 :=
              (let _jessie_149 = map_0_0 in
              (let _jessie_148 = !hashValue_1 in
              (let _jessie_147 = !index_1_0 in
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 383 24 65#
              "expl:Precondition for getCalculatedIndex"
              (Function_getCalculatedIndex.getCalculatedIndex  _jessie_149
               _jessie_148 _jessie_147 voidP_items_56_alloc_table
               __anonstruct_Value_6_items_56_alloc_table
               __anonstruct_Map_8_map_0_29_alloc_table
               __anonstruct_Map_8_count_map_0_29
               __anonstruct_Map_8_capacity_map_0_29
               __anonstruct_Map_8_items_map_0_29
               __anonstruct_Item_7_existent_items_56
               __anonstruct_Item_7_value_1_items_56
               __anonstruct_Item_7___anonstruct_Key_5_b_items_56
               __anonstruct_Item_7___anonstruct_Key_5_a_items_56
               __anonstruct_Value_6_d_items_56
               __anonstruct_Value_6_c_items_56 ))))));
              begin
              (assert {
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 386 19 49#
              "expl:Assertion in line 386"
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 386 19 49#
              "expl:Assertion in line 386"
              ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 386 19 49#
               "expl:Assertion in line 386"
               (Int32.(<=) (#"map_c.jc" 731 66 78# "expl:Integer cast"
               (Int32.of_int (0))) !calcIndex_0))
              /\
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 386 19 49#
              "expl:Assertion in line 386"
              (Int32.(<) !calcIndex_0
              (select __anonstruct_Map_8_capacity_map_0_29 map_0_0)))))) });
               () end;
              (if
              (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 388 12 47#
              (Unsafe_int32.(=) 
               (acc  __anonstruct_Item_7_existent_items_56
                (shift_  (acc  __anonstruct_Map_8_items_map_0_29 map_0_0 )
                 (Unsafe_int32.to_int  !calcIndex_0 ) ) )
               (#"map_c.jc" 739 34 46# "expl:Integer cast"
               (Unsafe_int32.of_int (1))) ))
              then
               (if
               (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 389 12 49#
               (Unsafe_int32.(=) 
                (acc  __anonstruct_Item_7___anonstruct_Key_5_a_items_56
                 (shift_  (acc  __anonstruct_Map_8_items_map_0_29 map_0_0 )
                  (Unsafe_int32.to_int  !calcIndex_0 ) ) )
                (acc  __anonstruct_Key_5_a_key_30 key_2 ) ))
               then
                (if
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 390 12 49#
                (Unsafe_int32.(=) 
                 (acc  __anonstruct_Item_7___anonstruct_Key_5_b_items_56
                  (shift_  (acc  __anonstruct_Map_8_items_map_0_29 map_0_0 )
                   (Unsafe_int32.to_int  !calcIndex_0 ) ) )
                 (acc  __anonstruct_Key_5_b_key_30 key_2 ) ))
                then
                 begin
                 begin
                 (assert {
                 (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 391 23 53#
                 "expl:Assertion in line 391"
                 (is_item_exists map_0_0 (Int32.to_int !calcIndex_0)
                 __anonstruct_Map_8_items_map_0_29
                 __anonstruct_Item_7_existent_items_56
                 __anonstruct_Item_7_value_1_items_56
                 __anonstruct_Item_7___anonstruct_Key_5_b_items_56
                 __anonstruct_Item_7___anonstruct_Key_5_a_items_56
                 __anonstruct_Value_6_d_items_56
                 __anonstruct_Value_6_c_items_56)) }); () end;
                  begin
                  (let _jessie_157 =
                  (acc  __anonstruct_Value_6_c_items_56
                   (acc  __anonstruct_Item_7_value_1_items_56
                    (shift_ 
                     (acc  __anonstruct_Map_8_items_map_0_29 map_0_0 )
                     (Unsafe_int32.to_int  !calcIndex_0 ) ) ) ) in
                  (let _jessie_158 = value_1 in
                  (let _jessie_159 = (0) in
                  (let _jessie_160 = _jessie_158 in
                  (upd  __anonstruct_Value_6_c_value_31 _jessie_160
                   _jessie_157 )))));
                   begin
                   (let _jessie_152 =
                   (acc  __anonstruct_Value_6_d_items_56
                    (acc  __anonstruct_Item_7_value_1_items_56
                     (shift_ 
                      (acc  __anonstruct_Map_8_items_map_0_29 map_0_0 )
                      (Unsafe_int32.to_int  !calcIndex_0 ) ) ) ) in
                   (let _jessie_153 = value_1 in
                   (let _jessie_154 = (0) in
                   (let _jessie_155 = _jessie_153 in
                   (upd  __anonstruct_Value_6_d_value_31 _jessie_155
                    _jessie_152 )))));
                    begin
                    (__retres_2 :=
                     (#"map_c.jc" 769 84 96# "expl:Integer cast"
                     (Unsafe_int32.of_int (1))));
                     (raise (Goto_return_label_1_exc ())) end end end end
                else ()) else ()) else ()) end end;
            (index_1_0 :=
             (Unsafe_int32.(+)  !index_1_0
              (#"map_c.jc" 776 59 71# "expl:Integer cast"
              (Unsafe_int32.of_int (1))) )) end;
            (raise (Loop_continue_exc ())) end with Loop_continue_exc
           _jessie_12 -> () end end end;
         (raise (Goto_while_0_break_1_exc ())) end end with
       Goto_while_0_break_1_exc _jessie_9 ->
       'While_0_break_1: 'While_0_break_1: () end;
      begin
      (assert {
      (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 398 15 39#
      "expl:Assertion in line 398"
      (not
      (is_key_exists map_0_0 key_2 __anonstruct_Map_8_capacity_map_0_29
      __anonstruct_Map_8_items_map_0_29 __anonstruct_Item_7_existent_items_56
      __anonstruct_Item_7_value_1_items_56
      __anonstruct_Item_7___anonstruct_Key_5_b_items_56
      __anonstruct_Item_7___anonstruct_Key_5_a_items_56
      __anonstruct_Value_6_d_items_56 __anonstruct_Value_6_c_items_56
      __anonstruct_Key_5_b_key_30 __anonstruct_Key_5_a_key_30))) }); () end;
      begin
      (__retres_2 :=
       (#"map_c.jc" 787 30 42# "expl:Integer cast" (Unsafe_int32.of_int (0))));
       (raise (Goto_return_label_1_exc ())) end end with
     Goto_return_label_1_exc _jessie_10 ->
     'Return_label_1:
     'Return_label_1: begin (return := !__retres_2); (raise Return) end end))));
     absurd  end with Return -> !return end)
  
end

theory Logic_type_padding

  use why3.Bool.Bool 
  
  type padding 
  
end

theory Struct___anonstruct_Key_5

  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import core.Tag_id 
  
  use import core.Tag 
  
  use import Root___anonstruct_Key_5 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  function __anonstruct_Key_5_tag  : (tag_id
  __anonstruct_Key_5)
  
  axiom U___anonstruct_Key_5_parenttag_bottom  :
  (parenttag __anonstruct_Key_5_tag bottom_tag)
  
  axiom U___anonstruct_Key_5_is_final  :
  (forall __anonstruct_Key_5_tag_table : (tag_table __anonstruct_Key_5).
   (forall p : (pointer __anonstruct_Key_5).
    ((instanceof __anonstruct_Key_5_tag_table p __anonstruct_Key_5_tag) ->
     ((=) (typeof __anonstruct_Key_5_tag_table p) __anonstruct_Key_5_tag))))
  
  predicate frame_tag_struct___anonstruct_Key_5 (p : (pointer
  __anonstruct_Key_5)) (old___anonstruct_Key_5_tag_table : (tag_table
  __anonstruct_Key_5)) (__anonstruct_Key_5_tag_table : (tag_table
  __anonstruct_Key_5))
  =
     ((tag_extends old___anonstruct_Key_5_tag_table
      __anonstruct_Key_5_tag_table)
     /\
     (alloc_tag_block old___anonstruct_Key_5_tag_table
     __anonstruct_Key_5_tag_table p))
  
  predicate frame_free_struct___anonstruct_Key_5 (p : (pointer
  __anonstruct_Key_5)) (old___anonstruct_Key_5_alloc_table : (alloc_table
  __anonstruct_Key_5)) (__anonstruct_Key_5_alloc_table : (alloc_table
  __anonstruct_Key_5))
  =
     ((free_extends old___anonstruct_Key_5_alloc_table
      __anonstruct_Key_5_alloc_table)
     /\
     (free_block old___anonstruct_Key_5_alloc_table
     __anonstruct_Key_5_alloc_table p))
  
  predicate frame_alloc_struct___anonstruct_Key_5 (p : (pointer
  __anonstruct_Key_5)) (n : int) (old___anonstruct_Key_5_alloc_table :
  (alloc_table __anonstruct_Key_5)) (__anonstruct_Key_5_alloc_table :
  (alloc_table __anonstruct_Key_5))
  =
     ((alloc_extends old___anonstruct_Key_5_alloc_table
      __anonstruct_Key_5_alloc_table)
     /\
     (alloc_block old___anonstruct_Key_5_alloc_table
     __anonstruct_Key_5_alloc_table p n))
  
  predicate fresh_tag_struct___anonstruct_Key_5 (p : (pointer
  __anonstruct_Key_5)) (n : int) (__anonstruct_Key_5_tag_table : (tag_table
  __anonstruct_Key_5)) = (tag_fresh __anonstruct_Key_5_tag_table p)
  
  predicate fresh_alloc_struct___anonstruct_Key_5 (p : (pointer
  __anonstruct_Key_5)) (n : int) (__anonstruct_Key_5_alloc_table :
  (alloc_table __anonstruct_Key_5))
  = (alloc_fresh __anonstruct_Key_5_alloc_table p)
  
  predicate container_of_singleton_struct___anonstruct_Key_5 (p : (pointer
  __anonstruct_Key_5)) (__anonstruct_Key_5_tag_table : (tag_table
  __anonstruct_Key_5)) = true
  
  predicate container_of_struct___anonstruct_Key_5 (p : (pointer
  __anonstruct_Key_5)) (l : int) (r : int) (__anonstruct_Key_5_tag_table :
  (tag_table __anonstruct_Key_5)) = true
  
  predicate typeof_singleton_struct___anonstruct_Key_5 (p : (pointer
  __anonstruct_Key_5)) (__anonstruct_Key_5_tag_table : (tag_table
  __anonstruct_Key_5))
  = ((=) (typeof __anonstruct_Key_5_tag_table p) __anonstruct_Key_5_tag)
  
  predicate typeof_struct___anonstruct_Key_5 (p : (pointer
  __anonstruct_Key_5)) (l : int) (r : int) (__anonstruct_Key_5_tag_table :
  (tag_table __anonstruct_Key_5))
  =
     (((=) (typeof __anonstruct_Key_5_tag_table p) __anonstruct_Key_5_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof __anonstruct_Key_5_tag_table (shift p i))
       __anonstruct_Key_5_tag))))
  
  predicate instanceof_singleton_struct___anonstruct_Key_5 (p : (pointer
  __anonstruct_Key_5)) (__anonstruct_Key_5_tag_table : (tag_table
  __anonstruct_Key_5))
  = (instanceof __anonstruct_Key_5_tag_table p __anonstruct_Key_5_tag)
  
  predicate instanceof_struct___anonstruct_Key_5 (p : (pointer
  __anonstruct_Key_5)) (l : int) (r : int) (__anonstruct_Key_5_tag_table :
  (tag_table __anonstruct_Key_5))
  =
     ((instanceof __anonstruct_Key_5_tag_table p __anonstruct_Key_5_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof __anonstruct_Key_5_tag_table (shift p i)
       __anonstruct_Key_5_tag))))
  
  predicate right_valid_struct___anonstruct_Key_5 (p : (pointer
  __anonstruct_Key_5)) (b : int) (__anonstruct_Key_5_alloc_table :
  (alloc_table __anonstruct_Key_5))
  = ((>=) (offset_max __anonstruct_Key_5_alloc_table p) b)
  
  predicate left_valid_struct___anonstruct_Key_5 (p : (pointer
  __anonstruct_Key_5)) (a : int) (__anonstruct_Key_5_alloc_table :
  (alloc_table __anonstruct_Key_5))
  = ((<=) (offset_min __anonstruct_Key_5_alloc_table p) a)
  
  predicate strict_left_valid_struct___anonstruct_Key_5 (p : (pointer
  __anonstruct_Key_5)) (a : int) (__anonstruct_Key_5_alloc_table :
  (alloc_table __anonstruct_Key_5))
  = ((=) (offset_min __anonstruct_Key_5_alloc_table p) a)
  
  predicate valid_struct___anonstruct_Key_5 (p : (pointer
  __anonstruct_Key_5)) (a : int) (b : int) (__anonstruct_Key_5_alloc_table :
  (alloc_table __anonstruct_Key_5))
  =
     (((<=) (offset_min __anonstruct_Key_5_alloc_table p) a) /\
     ((>=) (offset_max __anonstruct_Key_5_alloc_table p) b))
  
  predicate strict_valid_struct___anonstruct_Key_5 (p : (pointer
  __anonstruct_Key_5)) (a : int) (b : int) (__anonstruct_Key_5_alloc_table :
  (alloc_table __anonstruct_Key_5))
  =
     (((=) (offset_min __anonstruct_Key_5_alloc_table p) a) /\
     ((=) (offset_max __anonstruct_Key_5_alloc_table p) b))
  
  axiom U___anonstruct_Key_5_int  :
  ((=) (int_of_tag __anonstruct_Key_5_tag) (5))
  
end

module Struct___anonstruct_Key_5_unsafe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Key_5 
  
  use import Root___anonstruct_Key_5 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct___anonstruct_Key_5
  (p : (pointer __anonstruct_Key_5)) 
   (__anonstruct_Key_5_alloc_table : ref (alloc_table __anonstruct_Key_5)) :
    unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/
      (freeable !__anonstruct_Key_5_alloc_table p)) }
    writes { __anonstruct_Key_5_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Key_5_alloc_table (old
       !__anonstruct_Key_5_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Key_5 p (old
       !__anonstruct_Key_5_alloc_table) !__anonstruct_Key_5_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Key_5 p
      (offset_max (old !__anonstruct_Key_5_alloc_table) p)
      !__anonstruct_Key_5_alloc_table))) }
  
  val allocate_struct___anonstruct_Key_5_requires
  (n : int) 
   (__anonstruct_Key_5_alloc_table : ref (alloc_table __anonstruct_Key_5)) 
    (__anonstruct_Key_5_tag_table : ref (tag_table __anonstruct_Key_5)) :
     (pointer __anonstruct_Key_5)
     requires { ((>=) n (0)) } writes { __anonstruct_Key_5_alloc_table,
     __anonstruct_Key_5_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Key_5 result (0) (Int.(-) n (1))
        !__anonstruct_Key_5_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Key_5 result n (old
        !__anonstruct_Key_5_alloc_table) !__anonstruct_Key_5_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Key_5 result (old
        !__anonstruct_Key_5_tag_table) !__anonstruct_Key_5_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Key_5 result (Int.(-) n (1)) (old
        !__anonstruct_Key_5_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Key_5 result (Int.(-) n (1)) (old
        !__anonstruct_Key_5_tag_table))
       /\
       ((typeof_struct___anonstruct_Key_5 result (0) n
        !__anonstruct_Key_5_tag_table)
       /\
       (container_of_struct___anonstruct_Key_5 result (0) n
       !__anonstruct_Key_5_tag_table))))))) }
  
end

module Struct___anonstruct_Key_5_safe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Key_5 
  
  use import Root___anonstruct_Key_5 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct___anonstruct_Key_5
  (p : (pointer __anonstruct_Key_5)) 
   (__anonstruct_Key_5_alloc_table : ref (alloc_table __anonstruct_Key_5)) :
    unit
    requires { true } writes { __anonstruct_Key_5_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Key_5_alloc_table (old
       !__anonstruct_Key_5_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Key_5 p (old
       !__anonstruct_Key_5_alloc_table) !__anonstruct_Key_5_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Key_5 p
      (offset_max (old !__anonstruct_Key_5_alloc_table) p)
      !__anonstruct_Key_5_alloc_table))) }
  
  val allocate_struct___anonstruct_Key_5
  (n : int) 
   (__anonstruct_Key_5_alloc_table : ref (alloc_table __anonstruct_Key_5)) 
    (__anonstruct_Key_5_tag_table : ref (tag_table __anonstruct_Key_5)) :
     (pointer __anonstruct_Key_5)
     requires { true } writes { __anonstruct_Key_5_alloc_table,
     __anonstruct_Key_5_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Key_5 result (0) (Int.(-) n (1))
        !__anonstruct_Key_5_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Key_5 result n (old
        !__anonstruct_Key_5_alloc_table) !__anonstruct_Key_5_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Key_5 result (old
        !__anonstruct_Key_5_tag_table) !__anonstruct_Key_5_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Key_5 result (Int.(-) n (1)) (old
        !__anonstruct_Key_5_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Key_5 result (Int.(-) n (1)) (old
        !__anonstruct_Key_5_tag_table))
       /\
       ((typeof_struct___anonstruct_Key_5 result (0) n
        !__anonstruct_Key_5_tag_table)
       /\
       (container_of_struct___anonstruct_Key_5 result (0) n
       !__anonstruct_Key_5_tag_table))))))) }
  
  val allocate_singleton_struct___anonstruct_Key_5
  (__anonstruct_Key_5_alloc_table : ref (alloc_table __anonstruct_Key_5)) 
   (__anonstruct_Key_5_tag_table : ref (tag_table __anonstruct_Key_5)) :
    (pointer __anonstruct_Key_5)
    requires { true } writes { __anonstruct_Key_5_alloc_table,
    __anonstruct_Key_5_tag_table }
    ensures {
      ((strict_valid_struct___anonstruct_Key_5 result (0) (0)
       !__anonstruct_Key_5_alloc_table)
      /\
      ((frame_alloc_struct___anonstruct_Key_5 result (1) (old
       !__anonstruct_Key_5_alloc_table) !__anonstruct_Key_5_alloc_table)
      /\
      ((frame_tag_struct___anonstruct_Key_5 result (old
       !__anonstruct_Key_5_tag_table) !__anonstruct_Key_5_tag_table)
      /\
      ((fresh_alloc_struct___anonstruct_Key_5 result (0) (old
       !__anonstruct_Key_5_alloc_table))
      /\
      ((fresh_tag_struct___anonstruct_Key_5 result (0) (old
       !__anonstruct_Key_5_tag_table))
      /\
      ((typeof_singleton_struct___anonstruct_Key_5 result
       !__anonstruct_Key_5_tag_table)
      /\
      (container_of_singleton_struct___anonstruct_Key_5 result
      !__anonstruct_Key_5_tag_table))))))) }
  
end

theory Struct___anonstruct_Map_8

  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import core.Tag_id 
  
  use import core.Tag 
  
  use import Root___anonstruct_Map_8 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  function __anonstruct_Map_8_tag  : (tag_id
  __anonstruct_Map_8)
  
  axiom U___anonstruct_Map_8_parenttag_bottom  :
  (parenttag __anonstruct_Map_8_tag bottom_tag)
  
  axiom U___anonstruct_Map_8_is_final  :
  (forall __anonstruct_Map_8_tag_table : (tag_table __anonstruct_Map_8).
   (forall p : (pointer __anonstruct_Map_8).
    ((instanceof __anonstruct_Map_8_tag_table p __anonstruct_Map_8_tag) ->
     ((=) (typeof __anonstruct_Map_8_tag_table p) __anonstruct_Map_8_tag))))
  
  predicate frame_tag_struct___anonstruct_Map_8 (p : (pointer
  __anonstruct_Map_8)) (old___anonstruct_Map_8_tag_table : (tag_table
  __anonstruct_Map_8)) (__anonstruct_Map_8_tag_table : (tag_table
  __anonstruct_Map_8))
  =
     ((tag_extends old___anonstruct_Map_8_tag_table
      __anonstruct_Map_8_tag_table)
     /\
     (alloc_tag_block old___anonstruct_Map_8_tag_table
     __anonstruct_Map_8_tag_table p))
  
  predicate frame_free_struct___anonstruct_Map_8 (p : (pointer
  __anonstruct_Map_8)) (old___anonstruct_Map_8_alloc_table : (alloc_table
  __anonstruct_Map_8)) (__anonstruct_Map_8_alloc_table : (alloc_table
  __anonstruct_Map_8))
  =
     ((free_extends old___anonstruct_Map_8_alloc_table
      __anonstruct_Map_8_alloc_table)
     /\
     (free_block old___anonstruct_Map_8_alloc_table
     __anonstruct_Map_8_alloc_table p))
  
  predicate frame_alloc_struct___anonstruct_Map_8 (p : (pointer
  __anonstruct_Map_8)) (n : int) (old___anonstruct_Map_8_alloc_table :
  (alloc_table __anonstruct_Map_8)) (__anonstruct_Map_8_alloc_table :
  (alloc_table __anonstruct_Map_8))
  =
     ((alloc_extends old___anonstruct_Map_8_alloc_table
      __anonstruct_Map_8_alloc_table)
     /\
     (alloc_block old___anonstruct_Map_8_alloc_table
     __anonstruct_Map_8_alloc_table p n))
  
  predicate fresh_tag_struct___anonstruct_Map_8 (p : (pointer
  __anonstruct_Map_8)) (n : int) (__anonstruct_Map_8_tag_table : (tag_table
  __anonstruct_Map_8)) = (tag_fresh __anonstruct_Map_8_tag_table p)
  
  predicate fresh_alloc_struct___anonstruct_Map_8 (p : (pointer
  __anonstruct_Map_8)) (n : int) (__anonstruct_Map_8_alloc_table :
  (alloc_table __anonstruct_Map_8))
  = (alloc_fresh __anonstruct_Map_8_alloc_table p)
  
  predicate container_of_singleton_struct___anonstruct_Map_8 (p : (pointer
  __anonstruct_Map_8)) (__anonstruct_Map_8_tag_table : (tag_table
  __anonstruct_Map_8)) = true
  
  predicate container_of_struct___anonstruct_Map_8 (p : (pointer
  __anonstruct_Map_8)) (l : int) (r : int) (__anonstruct_Map_8_tag_table :
  (tag_table __anonstruct_Map_8)) = true
  
  predicate typeof_singleton_struct___anonstruct_Map_8 (p : (pointer
  __anonstruct_Map_8)) (__anonstruct_Map_8_tag_table : (tag_table
  __anonstruct_Map_8))
  = ((=) (typeof __anonstruct_Map_8_tag_table p) __anonstruct_Map_8_tag)
  
  predicate typeof_struct___anonstruct_Map_8 (p : (pointer
  __anonstruct_Map_8)) (l : int) (r : int) (__anonstruct_Map_8_tag_table :
  (tag_table __anonstruct_Map_8))
  =
     (((=) (typeof __anonstruct_Map_8_tag_table p) __anonstruct_Map_8_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof __anonstruct_Map_8_tag_table (shift p i))
       __anonstruct_Map_8_tag))))
  
  predicate instanceof_singleton_struct___anonstruct_Map_8 (p : (pointer
  __anonstruct_Map_8)) (__anonstruct_Map_8_tag_table : (tag_table
  __anonstruct_Map_8))
  = (instanceof __anonstruct_Map_8_tag_table p __anonstruct_Map_8_tag)
  
  predicate instanceof_struct___anonstruct_Map_8 (p : (pointer
  __anonstruct_Map_8)) (l : int) (r : int) (__anonstruct_Map_8_tag_table :
  (tag_table __anonstruct_Map_8))
  =
     ((instanceof __anonstruct_Map_8_tag_table p __anonstruct_Map_8_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof __anonstruct_Map_8_tag_table (shift p i)
       __anonstruct_Map_8_tag))))
  
  predicate right_valid_struct___anonstruct_Map_8 (p : (pointer
  __anonstruct_Map_8)) (b : int) (__anonstruct_Map_8_alloc_table :
  (alloc_table __anonstruct_Map_8))
  = ((>=) (offset_max __anonstruct_Map_8_alloc_table p) b)
  
  predicate left_valid_struct___anonstruct_Map_8 (p : (pointer
  __anonstruct_Map_8)) (a : int) (__anonstruct_Map_8_alloc_table :
  (alloc_table __anonstruct_Map_8))
  = ((<=) (offset_min __anonstruct_Map_8_alloc_table p) a)
  
  predicate strict_left_valid_struct___anonstruct_Map_8 (p : (pointer
  __anonstruct_Map_8)) (a : int) (__anonstruct_Map_8_alloc_table :
  (alloc_table __anonstruct_Map_8))
  = ((=) (offset_min __anonstruct_Map_8_alloc_table p) a)
  
  predicate valid_struct___anonstruct_Map_8 (p : (pointer
  __anonstruct_Map_8)) (a : int) (b : int) (__anonstruct_Map_8_alloc_table :
  (alloc_table __anonstruct_Map_8))
  =
     (((<=) (offset_min __anonstruct_Map_8_alloc_table p) a) /\
     ((>=) (offset_max __anonstruct_Map_8_alloc_table p) b))
  
  predicate strict_valid_struct___anonstruct_Map_8 (p : (pointer
  __anonstruct_Map_8)) (a : int) (b : int) (__anonstruct_Map_8_alloc_table :
  (alloc_table __anonstruct_Map_8))
  =
     (((=) (offset_min __anonstruct_Map_8_alloc_table p) a) /\
     ((=) (offset_max __anonstruct_Map_8_alloc_table p) b))
  
  axiom U___anonstruct_Map_8_int  :
  ((=) (int_of_tag __anonstruct_Map_8_tag) (6))
  
end

module Struct___anonstruct_Map_8_unsafe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Map_8 
  
  use import Root___anonstruct_Map_8 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct___anonstruct_Map_8
  (p : (pointer __anonstruct_Map_8)) 
   (__anonstruct_Map_8_alloc_table : ref (alloc_table __anonstruct_Map_8)) :
    unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/
      (freeable !__anonstruct_Map_8_alloc_table p)) }
    writes { __anonstruct_Map_8_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Map_8_alloc_table (old
       !__anonstruct_Map_8_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Map_8 p (old
       !__anonstruct_Map_8_alloc_table) !__anonstruct_Map_8_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Map_8 p
      (offset_max (old !__anonstruct_Map_8_alloc_table) p)
      !__anonstruct_Map_8_alloc_table))) }
  
  val allocate_struct___anonstruct_Map_8_requires
  (n : int) 
   (__anonstruct_Map_8_alloc_table : ref (alloc_table __anonstruct_Map_8)) 
    (__anonstruct_Map_8_tag_table : ref (tag_table __anonstruct_Map_8)) :
     (pointer __anonstruct_Map_8)
     requires { ((>=) n (0)) } writes { __anonstruct_Map_8_alloc_table,
     __anonstruct_Map_8_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Map_8 result (0) (Int.(-) n (1))
        !__anonstruct_Map_8_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Map_8 result n (old
        !__anonstruct_Map_8_alloc_table) !__anonstruct_Map_8_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Map_8 result (old
        !__anonstruct_Map_8_tag_table) !__anonstruct_Map_8_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Map_8 result (Int.(-) n (1)) (old
        !__anonstruct_Map_8_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Map_8 result (Int.(-) n (1)) (old
        !__anonstruct_Map_8_tag_table))
       /\
       ((typeof_struct___anonstruct_Map_8 result (0) n
        !__anonstruct_Map_8_tag_table)
       /\
       (container_of_struct___anonstruct_Map_8 result (0) n
       !__anonstruct_Map_8_tag_table))))))) }
  
end

module Struct___anonstruct_Map_8_safe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Map_8 
  
  use import Root___anonstruct_Map_8 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct___anonstruct_Map_8
  (p : (pointer __anonstruct_Map_8)) 
   (__anonstruct_Map_8_alloc_table : ref (alloc_table __anonstruct_Map_8)) :
    unit
    requires { true } writes { __anonstruct_Map_8_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Map_8_alloc_table (old
       !__anonstruct_Map_8_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Map_8 p (old
       !__anonstruct_Map_8_alloc_table) !__anonstruct_Map_8_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Map_8 p
      (offset_max (old !__anonstruct_Map_8_alloc_table) p)
      !__anonstruct_Map_8_alloc_table))) }
  
  val allocate_struct___anonstruct_Map_8
  (n : int) 
   (__anonstruct_Map_8_alloc_table : ref (alloc_table __anonstruct_Map_8)) 
    (__anonstruct_Map_8_tag_table : ref (tag_table __anonstruct_Map_8)) :
     (pointer __anonstruct_Map_8)
     requires { true } writes { __anonstruct_Map_8_alloc_table,
     __anonstruct_Map_8_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Map_8 result (0) (Int.(-) n (1))
        !__anonstruct_Map_8_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Map_8 result n (old
        !__anonstruct_Map_8_alloc_table) !__anonstruct_Map_8_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Map_8 result (old
        !__anonstruct_Map_8_tag_table) !__anonstruct_Map_8_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Map_8 result (Int.(-) n (1)) (old
        !__anonstruct_Map_8_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Map_8 result (Int.(-) n (1)) (old
        !__anonstruct_Map_8_tag_table))
       /\
       ((typeof_struct___anonstruct_Map_8 result (0) n
        !__anonstruct_Map_8_tag_table)
       /\
       (container_of_struct___anonstruct_Map_8 result (0) n
       !__anonstruct_Map_8_tag_table))))))) }
  
  val allocate_singleton_struct___anonstruct_Map_8
  (__anonstruct_Map_8_alloc_table : ref (alloc_table __anonstruct_Map_8)) 
   (__anonstruct_Map_8_tag_table : ref (tag_table __anonstruct_Map_8)) :
    (pointer __anonstruct_Map_8)
    requires { true } writes { __anonstruct_Map_8_alloc_table,
    __anonstruct_Map_8_tag_table }
    ensures {
      ((strict_valid_struct___anonstruct_Map_8 result (0) (0)
       !__anonstruct_Map_8_alloc_table)
      /\
      ((frame_alloc_struct___anonstruct_Map_8 result (1) (old
       !__anonstruct_Map_8_alloc_table) !__anonstruct_Map_8_alloc_table)
      /\
      ((frame_tag_struct___anonstruct_Map_8 result (old
       !__anonstruct_Map_8_tag_table) !__anonstruct_Map_8_tag_table)
      /\
      ((fresh_alloc_struct___anonstruct_Map_8 result (0) (old
       !__anonstruct_Map_8_alloc_table))
      /\
      ((fresh_tag_struct___anonstruct_Map_8 result (0) (old
       !__anonstruct_Map_8_tag_table))
      /\
      ((typeof_singleton_struct___anonstruct_Map_8 result
       !__anonstruct_Map_8_tag_table)
      /\
      (container_of_singleton_struct___anonstruct_Map_8 result
      !__anonstruct_Map_8_tag_table))))))) }
  
end

module Struct___anonstruct_Value_6_unsafe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Value_6 
  
  use import Root___anonstruct_Value_6 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct___anonstruct_Value_6
  (p : (pointer __anonstruct_Value_6)) 
   (__anonstruct_Value_6_alloc_table : ref (alloc_table
    __anonstruct_Value_6)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/
      (freeable !__anonstruct_Value_6_alloc_table p)) }
    writes { __anonstruct_Value_6_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Value_6_alloc_table (old
       !__anonstruct_Value_6_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Value_6 p (old
       !__anonstruct_Value_6_alloc_table) !__anonstruct_Value_6_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Value_6 p
      (offset_max (old !__anonstruct_Value_6_alloc_table) p)
      !__anonstruct_Value_6_alloc_table))) }
  
  val allocate_struct___anonstruct_Value_6_requires
  (n : int) 
   (__anonstruct_Value_6_alloc_table : ref (alloc_table
    __anonstruct_Value_6)) 
    (__anonstruct_Value_6_tag_table : ref (tag_table __anonstruct_Value_6)) :
     (pointer __anonstruct_Value_6)
     requires { ((>=) n (0)) } writes { __anonstruct_Value_6_alloc_table,
     __anonstruct_Value_6_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Value_6 result (0) (Int.(-) n (1))
        !__anonstruct_Value_6_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Value_6 result n (old
        !__anonstruct_Value_6_alloc_table) !__anonstruct_Value_6_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Value_6 result (old
        !__anonstruct_Value_6_tag_table) !__anonstruct_Value_6_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Value_6 result (Int.(-) n (1)) (old
        !__anonstruct_Value_6_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Value_6 result (Int.(-) n (1)) (old
        !__anonstruct_Value_6_tag_table))
       /\
       ((typeof_struct___anonstruct_Value_6 result (0) n
        !__anonstruct_Value_6_tag_table)
       /\
       (container_of_struct___anonstruct_Value_6 result (0) n
       !__anonstruct_Value_6_tag_table))))))) }
  
end

module Struct___anonstruct_Value_6_safe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Value_6 
  
  use import Root___anonstruct_Value_6 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct___anonstruct_Value_6
  (p : (pointer __anonstruct_Value_6)) 
   (__anonstruct_Value_6_alloc_table : ref (alloc_table
    __anonstruct_Value_6)) : unit
    requires { true } writes { __anonstruct_Value_6_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Value_6_alloc_table (old
       !__anonstruct_Value_6_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Value_6 p (old
       !__anonstruct_Value_6_alloc_table) !__anonstruct_Value_6_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Value_6 p
      (offset_max (old !__anonstruct_Value_6_alloc_table) p)
      !__anonstruct_Value_6_alloc_table))) }
  
  val allocate_struct___anonstruct_Value_6
  (n : int) 
   (__anonstruct_Value_6_alloc_table : ref (alloc_table
    __anonstruct_Value_6)) 
    (__anonstruct_Value_6_tag_table : ref (tag_table __anonstruct_Value_6)) :
     (pointer __anonstruct_Value_6)
     requires { true } writes { __anonstruct_Value_6_alloc_table,
     __anonstruct_Value_6_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Value_6 result (0) (Int.(-) n (1))
        !__anonstruct_Value_6_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Value_6 result n (old
        !__anonstruct_Value_6_alloc_table) !__anonstruct_Value_6_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Value_6 result (old
        !__anonstruct_Value_6_tag_table) !__anonstruct_Value_6_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Value_6 result (Int.(-) n (1)) (old
        !__anonstruct_Value_6_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Value_6 result (Int.(-) n (1)) (old
        !__anonstruct_Value_6_tag_table))
       /\
       ((typeof_struct___anonstruct_Value_6 result (0) n
        !__anonstruct_Value_6_tag_table)
       /\
       (container_of_struct___anonstruct_Value_6 result (0) n
       !__anonstruct_Value_6_tag_table))))))) }
  
  val allocate_singleton_struct___anonstruct_Value_6
  (__anonstruct_Value_6_alloc_table : ref (alloc_table
   __anonstruct_Value_6)) 
   (__anonstruct_Value_6_tag_table : ref (tag_table __anonstruct_Value_6)) :
    (pointer __anonstruct_Value_6)
    requires { true } writes { __anonstruct_Value_6_alloc_table,
    __anonstruct_Value_6_tag_table }
    ensures {
      ((strict_valid_struct___anonstruct_Value_6 result (0) (0)
       !__anonstruct_Value_6_alloc_table)
      /\
      ((frame_alloc_struct___anonstruct_Value_6 result (1) (old
       !__anonstruct_Value_6_alloc_table) !__anonstruct_Value_6_alloc_table)
      /\
      ((frame_tag_struct___anonstruct_Value_6 result (old
       !__anonstruct_Value_6_tag_table) !__anonstruct_Value_6_tag_table)
      /\
      ((fresh_alloc_struct___anonstruct_Value_6 result (0) (old
       !__anonstruct_Value_6_alloc_table))
      /\
      ((fresh_tag_struct___anonstruct_Value_6 result (0) (old
       !__anonstruct_Value_6_tag_table))
      /\
      ((typeof_singleton_struct___anonstruct_Value_6 result
       !__anonstruct_Value_6_tag_table)
      /\
      (container_of_singleton_struct___anonstruct_Value_6 result
      !__anonstruct_Value_6_tag_table))))))) }
  
end

theory Struct_charP

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import Struct_voidP 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  use import core.Charp_tag_id 
  
  predicate frame_tag_struct_charP (p : (pointer voidP)) (old_voidP_tag_table
  : (tag_table voidP)) (voidP_tag_table : (tag_table voidP))
  =
     ((tag_extends old_voidP_tag_table voidP_tag_table) /\
     (alloc_tag_block old_voidP_tag_table voidP_tag_table p))
  
  predicate frame_free_struct_charP (p : (pointer voidP))
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((free_extends old_voidP_alloc_table voidP_alloc_table) /\
     (free_block old_voidP_alloc_table voidP_alloc_table p))
  
  predicate frame_alloc_struct_charP (p : (pointer voidP)) (n : int)
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((alloc_extends old_voidP_alloc_table voidP_alloc_table) /\
     (alloc_block old_voidP_alloc_table voidP_alloc_table p n))
  
  predicate fresh_tag_struct_charP (p : (pointer voidP)) (n : int)
  (voidP_tag_table : (tag_table voidP))
  = (fresh_tag_struct_voidP p n voidP_tag_table)
  
  predicate fresh_alloc_struct_charP (p : (pointer voidP)) (n : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (fresh_alloc_struct_voidP p n voidP_alloc_table)
  
  predicate container_of_singleton_struct_charP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP)) = true
  
  predicate container_of_struct_charP (p : (pointer voidP)) (l : int) (r :
  int) (voidP_tag_table : (tag_table voidP)) = true
  
  predicate typeof_singleton_struct_charP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = ((=) (typeof voidP_tag_table p) charP_tag)
  
  predicate typeof_struct_charP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     (((=) (typeof voidP_tag_table p) charP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof voidP_tag_table (shift p i)) charP_tag))))
  
  predicate instanceof_singleton_struct_charP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = (instanceof voidP_tag_table p charP_tag)
  
  predicate instanceof_struct_charP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     ((instanceof voidP_tag_table p charP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof voidP_tag_table (shift p i) charP_tag))))
  
  predicate right_valid_struct_charP (p : (pointer voidP)) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (right_valid_struct_voidP p b voidP_alloc_table)
  
  predicate left_valid_struct_charP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (left_valid_struct_voidP p a voidP_alloc_table)
  
  predicate strict_left_valid_struct_charP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (strict_left_valid_struct_voidP p a voidP_alloc_table)
  
  predicate valid_struct_charP (p : (pointer voidP)) (a : int) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (valid_struct_voidP p a b voidP_alloc_table)
  
  predicate strict_valid_struct_charP (p : (pointer voidP)) (a : int) (b :
  int) (voidP_alloc_table : (alloc_table voidP))
  = (strict_valid_struct_voidP p a b voidP_alloc_table)
  
end

module Struct_charP_unsafe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct_charP 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct_charP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/ (freeable !voidP_alloc_table p))
      }
    writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_charP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      (fresh_alloc_struct_charP p (offset_max (old !voidP_alloc_table) p)
      !voidP_alloc_table))) }
  
  val allocate_struct_charP_requires
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { ((>=) n (0)) } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_charP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_charP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_charP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_charP result (Int.(-) n (1)) (old
        !voidP_alloc_table))
       /\
       ((fresh_tag_struct_charP result (Int.(-) n (1)) (old
        !voidP_tag_table))
       /\
       ((typeof_struct_charP result (0) n !voidP_tag_table) /\
       (container_of_struct_charP result (0) n !voidP_tag_table))))))) }
  
end

module Struct_charP_safe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct_charP 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct_charP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires { true } writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_charP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      (fresh_alloc_struct_charP p (offset_max (old !voidP_alloc_table) p)
      !voidP_alloc_table))) }
  
  val allocate_struct_charP
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { true } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_charP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_charP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_charP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_charP result (Int.(-) n (1)) (old
        !voidP_alloc_table))
       /\
       ((fresh_tag_struct_charP result (Int.(-) n (1)) (old
        !voidP_tag_table))
       /\
       ((typeof_struct_charP result (0) n !voidP_tag_table) /\
       (container_of_struct_charP result (0) n !voidP_tag_table))))))) }
  
  val allocate_singleton_struct_charP
  (voidP_alloc_table : ref (alloc_table voidP)) 
   (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
    requires { true } writes { voidP_alloc_table, voidP_tag_table }
    ensures {
      ((strict_valid_struct_charP result (0) (0) !voidP_alloc_table) /\
      ((frame_alloc_struct_charP result (1) (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      ((frame_tag_struct_charP result (old !voidP_tag_table)
       !voidP_tag_table)
      /\
      ((fresh_alloc_struct_charP result (0) (old !voidP_alloc_table)) /\
      ((fresh_tag_struct_charP result (0) (old !voidP_tag_table)) /\
      ((typeof_singleton_struct_charP result !voidP_tag_table) /\
      (container_of_singleton_struct_charP result !voidP_tag_table))))))) }
  
end

module Struct_voidP_unsafe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct_voidP 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct_voidP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/ (freeable !voidP_alloc_table p))
      }
    writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_voidP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      (fresh_alloc_struct_voidP p (offset_max (old !voidP_alloc_table) p)
      !voidP_alloc_table))) }
  
  val allocate_struct_voidP_requires
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { ((>=) n (0)) } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_voidP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_voidP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_voidP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_voidP result (Int.(-) n (1)) (old
        !voidP_alloc_table))
       /\
       ((fresh_tag_struct_voidP result (Int.(-) n (1)) (old
        !voidP_tag_table))
       /\
       ((typeof_struct_voidP result (0) n !voidP_tag_table) /\
       (container_of_struct_voidP result (0) n !voidP_tag_table))))))) }
  
end

module Struct_voidP_safe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct_voidP 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct_voidP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires { true } writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_voidP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      (fresh_alloc_struct_voidP p (offset_max (old !voidP_alloc_table) p)
      !voidP_alloc_table))) }
  
  val allocate_struct_voidP
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { true } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_voidP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_voidP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_voidP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_voidP result (Int.(-) n (1)) (old
        !voidP_alloc_table))
       /\
       ((fresh_tag_struct_voidP result (Int.(-) n (1)) (old
        !voidP_tag_table))
       /\
       ((typeof_struct_voidP result (0) n !voidP_tag_table) /\
       (container_of_struct_voidP result (0) n !voidP_tag_table))))))) }
  
  val allocate_singleton_struct_voidP
  (voidP_alloc_table : ref (alloc_table voidP)) 
   (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
    requires { true } writes { voidP_alloc_table, voidP_tag_table }
    ensures {
      ((strict_valid_struct_voidP result (0) (0) !voidP_alloc_table) /\
      ((frame_alloc_struct_voidP result (1) (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      ((frame_tag_struct_voidP result (old !voidP_tag_table)
       !voidP_tag_table)
      /\
      ((fresh_alloc_struct_voidP result (0) (old !voidP_alloc_table)) /\
      ((fresh_tag_struct_voidP result (0) (old !voidP_tag_table)) /\
      ((typeof_singleton_struct_voidP result !voidP_tag_table) /\
      (container_of_singleton_struct_voidP result !voidP_tag_table))))))) }
  
end

module Safe_bit_uint64_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint64_of_Bit_uint8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint64_of_Bit_uint8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint8 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint8.to_int n)) \/
     (Bit_int8_of_Bit_uint8.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint8 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int8.t
   requires { (Int8.in_bounds (Uint8.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Uint64.to_int n)) \/
     (Bit_uint32_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires { (Uint32.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Uint64.to_int n)) \/
     (Bit_uint16_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires { (Uint16.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint64.to_int n)) \/
     (Bit_int8_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int8.t
   requires { (Int8.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint64 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int64.t
   requires {
     ((Bit_int64.in_bounds (Uint64.to_int n)) \/
     (Bit_int64_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int64.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint64 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int64.t
   requires { (Int64.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int64.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int32.t
   requires {
     ((Bit_int32.in_bounds (Uint64.to_int n)) \/
     (Bit_int32_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int32.t
   requires { (Int32.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int32.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Uint64.to_int n)) \/
     (Bit_int16_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int16.t
   requires { (Int16.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures { ((=) (Int16.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Uint32.to_int n)) \/
     (Bit_uint16_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires { (Uint16.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint32.to_int n)) \/
     (Bit_int8_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int8.t
   requires { (Int8.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint32 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int32.t
   requires {
     ((Bit_int32.in_bounds (Uint32.to_int n)) \/
     (Bit_int32_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Int32.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint32 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int32.t
   requires { (Int32.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Int32.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Uint32.to_int n)) \/
     (Bit_int16_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int16.t
   requires { (Int16.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures { ((=) (Int16.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint16.to_int n)) \/
     (Bit_int8_of_Bit_uint16.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int8.t
   requires { (Int8.in_bounds (Uint16.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint16 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Uint16.to_int n)) \/
     (Bit_int16_of_Bit_uint16.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint16 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int16.t
   requires { (Int16.in_bounds (Uint16.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures { ((=) (Int16.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_int8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_int8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int32.t
   requires {
     ((Bit_int32.in_bounds (Int64.to_int n)) \/
     (Bit_int32_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Int32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_bit_int16_of_Safe_bit_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Int64.to_int n)) \/
     (Bit_int16_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int16.t
   requires { (Int16.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Int32.to_int n)) \/
     (Bit_int16_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int16.t
   requires { (Int16.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint8_of_Bit_uint64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Uint64.to_int n)) \/
     (Bit_uint8_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint8_of_Bit_uint64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires { (Uint8.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures { ((=) (Uint8.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint8_of_Bit_uint32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Uint32.to_int n)) \/
     (Bit_uint8_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint8_of_Bit_uint32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires { (Uint8.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures { ((=) (Uint8.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint8_of_Bit_uint16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Uint16.to_int n)) \/
     (Bit_uint8_of_Bit_uint16.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint8_of_Bit_uint16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires { (Uint8.in_bounds (Uint16.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures { ((=) (Uint8.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_uint8_of_Bit_int8 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int8.to_int n)) \/
     (Bit_uint8_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_uint8_of_Bit_int8 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint8.t
   requires { (Uint8.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_uint8_of_Bit_int64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int64.to_int n)) \/
     (Bit_uint8_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_uint8_of_Bit_int64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint8.t
   requires { (Uint8.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_uint8_of_Bit_int32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int32.to_int n)) \/
     (Bit_uint8_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_uint8_of_Bit_int32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint8.t
   requires { (Uint8.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_uint8_of_Bit_int16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int16.to_int n)) \/
     (Bit_uint8_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_uint8_of_Bit_int16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint8.t
   requires { (Uint8.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint64_of_Bit_uint32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint64_of_Bit_uint32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint64_of_Bit_uint16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint64_of_Bit_uint16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_uint64_of_Bit_int8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int8.to_int n)) \/
     (Bit_uint64_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_uint64_of_Bit_int8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint64.t
   requires { (Uint64.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint64.t
   requires { true } ensures { ((=) (Uint64.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_uint64_of_Bit_int64 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int64.to_int n)) \/
     (Bit_uint64_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_uint64_of_Bit_int64 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint64.t
   requires { (Uint64.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_uint64_of_Bit_int32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int32.to_int n)) \/
     (Bit_uint64_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_uint64_of_Bit_int32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_bit_uint64_of_Safe_bit_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_uint64_of_Bit_int16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int16.to_int n)) \/
     (Bit_uint64_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_uint64_of_Bit_int16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint64.t
   requires { (Uint64.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint32_of_Bit_uint16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint32_of_Bit_uint16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_uint32_of_Bit_int8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int8.to_int n)) \/
     (Bit_uint32_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_uint32_of_Bit_int8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint32.t
   requires { (Uint32.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint32.t
   requires { true } ensures { ((=) (Uint32.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_uint32_of_Bit_int64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int64.to_int n)) \/
     (Bit_uint32_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_uint32_of_Bit_int64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint32.t
   requires { (Uint32.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_uint32_of_Bit_int32 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int32.to_int n)) \/
     (Bit_uint32_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_uint32_of_Bit_int32 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint32.t
   requires { (Uint32.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_uint32_of_Bit_int16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int16.to_int n)) \/
     (Bit_uint32_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_uint32_of_Bit_int16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint32.t
   requires { (Uint32.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_uint16_of_Bit_int8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int8.to_int n)) \/
     (Bit_uint16_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_uint16_of_Bit_int8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint16.t
   requires { (Uint16.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint16.t
   requires { true } ensures { ((=) (Uint16.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_uint16_of_Bit_int64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int64.to_int n)) \/
     (Bit_uint16_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_uint16_of_Bit_int64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint16.t
   requires { (Uint16.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_uint16_of_Bit_int32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int32.to_int n)) \/
     (Bit_uint16_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_uint16_of_Bit_int32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint16.t
   requires { (Uint16.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_uint16_of_Bit_int16 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int16.to_int n)) \/
     (Bit_uint16_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_uint16_of_Bit_int16 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint16.t
   requires { (Uint16.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int8_of_Bit_int64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Int64.to_int n)) \/
     (Bit_int8_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int8_of_Bit_int64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int8.t
   requires { (Int8.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int8_of_Bit_int32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Int32.to_int n)) \/
     (Bit_int8_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int8_of_Bit_int32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int8.t
   requires { (Int8.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int8_of_Bit_int16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Int16.to_int n)) \/
     (Bit_int8_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int8_of_Bit_int16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int8.t
   requires { (Int8.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int64_of_Bit_int32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int64_of_Bit_int32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_bit_int64_of_Safe_bit_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int64_of_Bit_int16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int64_of_Bit_int16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int32_of_Bit_int16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int32_of_Bit_int16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int16.to_int n)) }
  
end

theory Logic_is_items_valid

  use import core.Voidp 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_item_exists 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate is_items_valid (map_11 : (pointer __anonstruct_Map_8))
  (__anonstruct_Map_8_count_map_11_10_at_L : (memory __anonstruct_Map_8
  Int32.t)) (__anonstruct_Map_8_items_map_11_10_at_L : (memory
  __anonstruct_Map_8 (pointer voidP)))
  (__anonstruct_Item_7_existent_items_99_at_L : (memory voidP Int32.t))
  (__anonstruct_Item_7_value_1_items_99_at_L : (memory voidP (pointer
  __anonstruct_Value_6)))
  (__anonstruct_Item_7___anonstruct_Key_5_b_items_99_at_L : (memory voidP
  Int32.t)) (__anonstruct_Item_7___anonstruct_Key_5_a_items_99_at_L : (memory
  voidP Int32.t)) (__anonstruct_Value_6_d_items_99_at_L : (memory
  __anonstruct_Value_6 Int32.t)) (__anonstruct_Value_6_c_items_99_at_L :
  (memory __anonstruct_Value_6 Int32.t))
  =
     (forall i : int.
      ((((<=) (0) i) /\
       ((<=) i
       (Int32.to_int (select __anonstruct_Map_8_count_map_11_10_at_L map_11))))
       ->
       (is_item_exists map_11 i __anonstruct_Map_8_items_map_11_10_at_L
       __anonstruct_Item_7_existent_items_99_at_L
       __anonstruct_Item_7_value_1_items_99_at_L
       __anonstruct_Item_7___anonstruct_Key_5_b_items_99_at_L
       __anonstruct_Item_7___anonstruct_Key_5_a_items_99_at_L
       __anonstruct_Value_6_d_items_99_at_L
       __anonstruct_Value_6_c_items_99_at_L)))
  
  
end

theory Logic_range_existent

  use import core.Voidp 
  
  use import Root___anonstruct_Map_8 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate range_existent (map_14 : (pointer __anonstruct_Map_8)) (m : int)
  (n_1 : int) (__anonstruct_Map_8_items_map_14_15_at_L : (memory
  __anonstruct_Map_8 (pointer voidP)))
  (__anonstruct_Item_7_existent_items_44_at_L : (memory voidP Int32.t))
  =
     (forall k_2 : int.
      ((((<=) m k_2) /\ ((<) k_2 n_1)) ->
       (Int32.(=)
       (select __anonstruct_Item_7_existent_items_44_at_L
       (shift (select __anonstruct_Map_8_items_map_14_15_at_L map_14) k_2))
       (#"map_c.jc" 151 42 54# "expl:Integer cast" (Int32.of_int (1))))))
  
  
end

theory Logic_full

  use import core.Voidp 
  
  use import Root___anonstruct_Map_8 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_range_existent 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate full (map_13 : (pointer __anonstruct_Map_8))
  (__anonstruct_Map_8_count_map_13_14_at_L : (memory __anonstruct_Map_8
  Int32.t)) (__anonstruct_Map_8_items_map_13_14_at_L : (memory
  __anonstruct_Map_8 (pointer voidP)))
  (__anonstruct_Item_7_existent_items_107_at_L : (memory voidP Int32.t))
  =
     (range_existent map_13 (0)
     (Int32.to_int (select __anonstruct_Map_8_count_map_13_14_at_L map_13))
     __anonstruct_Map_8_items_map_13_14_at_L
     __anonstruct_Item_7_existent_items_107_at_L)
  
  
end

theory Logic_map_stability

  use import core.Voidp 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_item_exists 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate map_stability (map_21 : (pointer __anonstruct_Map_8))
  (__anonstruct_Map_8_capacity_map_21_22_at_L : (memory __anonstruct_Map_8
  Int32.t)) (__anonstruct_Map_8_items_map_21_22_at_L : (memory
  __anonstruct_Map_8 (pointer voidP)))
  (__anonstruct_Item_7_existent_items_50_at_L : (memory voidP Int32.t))
  (__anonstruct_Item_7_value_1_items_50_at_L : (memory voidP (pointer
  __anonstruct_Value_6)))
  (__anonstruct_Item_7___anonstruct_Key_5_b_items_50_at_L : (memory voidP
  Int32.t)) (__anonstruct_Item_7___anonstruct_Key_5_a_items_50_at_L : (memory
  voidP Int32.t)) (__anonstruct_Value_6_d_items_50_at_L : (memory
  __anonstruct_Value_6 Int32.t)) (__anonstruct_Value_6_c_items_50_at_L :
  (memory __anonstruct_Value_6 Int32.t))
  =
     (forall i_1 : int.
      (forall j : int.
       ((((<=) (0) i_1) /\
        (((<=) i_1
         (Int32.to_int
         (select __anonstruct_Map_8_capacity_map_21_22_at_L map_21)))
        /\
        (((<=) (0) j) /\
        (((<=) j
         (Int32.to_int
         (select __anonstruct_Map_8_capacity_map_21_22_at_L map_21)))
        /\
        ((not ((=) i_1 j)) /\
        ((is_item_exists map_21 i_1 __anonstruct_Map_8_items_map_21_22_at_L
         __anonstruct_Item_7_existent_items_50_at_L
         __anonstruct_Item_7_value_1_items_50_at_L
         __anonstruct_Item_7___anonstruct_Key_5_b_items_50_at_L
         __anonstruct_Item_7___anonstruct_Key_5_a_items_50_at_L
         __anonstruct_Value_6_d_items_50_at_L
         __anonstruct_Value_6_c_items_50_at_L)
        /\
        (is_item_exists map_21 j __anonstruct_Map_8_items_map_21_22_at_L
        __anonstruct_Item_7_existent_items_50_at_L
        __anonstruct_Item_7_value_1_items_50_at_L
        __anonstruct_Item_7___anonstruct_Key_5_b_items_50_at_L
        __anonstruct_Item_7___anonstruct_Key_5_a_items_50_at_L
        __anonstruct_Value_6_d_items_50_at_L
        __anonstruct_Value_6_c_items_50_at_L))))))) ->
        (not
        ((Int32.(=)
         (select __anonstruct_Item_7___anonstruct_Key_5_a_items_50_at_L
         (shift (select __anonstruct_Map_8_items_map_21_22_at_L map_21) i_1))
         (select __anonstruct_Item_7___anonstruct_Key_5_a_items_50_at_L
         (shift (select __anonstruct_Map_8_items_map_21_22_at_L map_21) j)))
        /\
        (Int32.(=)
        (select __anonstruct_Item_7___anonstruct_Key_5_b_items_50_at_L
        (shift (select __anonstruct_Map_8_items_map_21_22_at_L map_21) i_1))
        (select __anonstruct_Item_7___anonstruct_Key_5_b_items_50_at_L
        (shift (select __anonstruct_Map_8_items_map_21_22_at_L map_21) j))))))))
  
  
end

module Function_initializeMap

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import core.Same_except 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import ref.Ref 
  
  use import core.Pset_deref 
  
  use import core.Pset_all 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_map_valid 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  val initializeMap
  (map_1 : (pointer __anonstruct_Map_8)) 
   (size : Int32.t) 
    (voidP_items_51_alloc_table : ref (alloc_table voidP)) 
     (__anonstruct_Value_6_items_51_alloc_table : ref (alloc_table
      __anonstruct_Value_6)) 
      (__anonstruct_Map_8_map_1_23_alloc_table : ref (alloc_table
       __anonstruct_Map_8)) 
       (voidP_items_51_tag_table : ref (tag_table voidP)) 
        (__anonstruct_Value_6_items_51_tag_table : ref (tag_table
         __anonstruct_Value_6)) 
         (__anonstruct_Map_8_count_map_1_23 : ref (memory __anonstruct_Map_8
          Int32.t)) 
          (__anonstruct_Map_8_capacity_map_1_23 : ref (memory
           __anonstruct_Map_8 Int32.t)) 
           (__anonstruct_Map_8_items_map_1_23 : ref (memory
            __anonstruct_Map_8 (pointer voidP))) 
            (__anonstruct_Item_7_existent_items_51 : ref (memory voidP
             Int32.t)) 
             (__anonstruct_Item_7_value_1_items_51 : (memory voidP (pointer
              __anonstruct_Value_6))) : Int32.t
              requires { true } reads {
              __anonstruct_Item_7_existent_items_51,
              __anonstruct_Map_8_capacity_map_1_23,
              __anonstruct_Map_8_count_map_1_23,
              __anonstruct_Map_8_items_map_1_23,
              __anonstruct_Map_8_map_1_23_alloc_table,
              __anonstruct_Value_6_items_51_alloc_table,
              voidP_items_51_alloc_table, voidP_items_51_tag_table } writes {
              __anonstruct_Item_7_existent_items_51,
              __anonstruct_Map_8_capacity_map_1_23,
              __anonstruct_Map_8_count_map_1_23,
              __anonstruct_Map_8_items_map_1_23,
              __anonstruct_Map_8_map_1_23_alloc_table,
              __anonstruct_Value_6_items_51_alloc_table,
              __anonstruct_Value_6_items_51_tag_table,
              voidP_items_51_alloc_table, voidP_items_51_tag_table }
              ensures {
                ((#"map_c.jc" 233 12 32# "expl:Allocates clause"
                 (((#"map_c.jc" 233 12 32# "expl:Allocates clause"
                   (alloc_same_except (old !voidP_items_51_alloc_table)
                   !voidP_items_51_alloc_table
                   (pset_all
                   (pset_deref !__anonstruct_Map_8_items_map_1_23
                   (pset_singleton map_1)))))
                  /\
                  ((#"map_c.jc" 233 12 32# "expl:Allocates clause"
                   (alloc_same_except (old
                   !__anonstruct_Value_6_items_51_alloc_table)
                   !__anonstruct_Value_6_items_51_alloc_table
                   (pset_all
                   (pset_deref __anonstruct_Item_7_value_1_items_51
                   (pset_singleton
                   (select !__anonstruct_Map_8_items_map_1_23 map_1))))))
                  /\
                  (#"map_c.jc" 233 12 32# "expl:Allocates clause"
                  (alloc_same_except (old
                  !__anonstruct_Map_8_map_1_23_alloc_table)
                  !__anonstruct_Map_8_map_1_23_alloc_table pset_empty))))
                 /\
                 ((#"map_c.jc" 233 12 32# "expl:Allocates clause"
                  (tag_extends (old !voidP_items_51_tag_table)
                  !voidP_items_51_tag_table))
                 /\
                 (#"map_c.jc" 233 12 32# "expl:Allocates clause"
                 (tag_extends (old !__anonstruct_Value_6_items_51_tag_table)
                 !__anonstruct_Value_6_items_51_tag_table)))))
                /\
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 117 16 50#
                "expl:Ensures clause"
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 117 16 50#
                "expl:Ensures clause"
                ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 117 16 50#
                 "expl:Ensures clause"
                 ((Int32.(=) result (#"map_c.jc" 234 42 54#
                  "expl:Integer cast" (Int32.of_int (0)))) ->
                  (is_map_valid map_1 !voidP_items_51_alloc_table
                  !__anonstruct_Value_6_items_51_alloc_table
                  !__anonstruct_Map_8_count_map_1_23
                  !__anonstruct_Map_8_capacity_map_1_23
                  !__anonstruct_Map_8_items_map_1_23
                  __anonstruct_Item_7_value_1_items_51)))
                /\
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 117 16 50#
                "expl:Ensures clause"
                ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 118 16 54#
                 "expl:Ensures clause"
                 ((Int32.(=) result (#"map_c.jc" 236 44 56#
                  "expl:Integer cast" (Int32.of_int (0)))) ->
                  (Int32.(=)
                  (select !__anonstruct_Map_8_capacity_map_1_23 map_1) size)))
                /\
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 117 16 50#
                "expl:Ensures clause"
                ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 119 16 48#
                 "expl:Ensures clause"
                 ((Int32.(=) result (#"map_c.jc" 238 46 58#
                  "expl:Integer cast" (Int32.of_int (0)))) ->
                  (Int32.(=)
                  (select !__anonstruct_Map_8_count_map_1_23 map_1)
                  (#"map_c.jc" 239 60 72# "expl:Integer cast" (Int32.of_int
                  (0))))))
                /\
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 117 16 50#
                "expl:Ensures clause"
                ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 120 16 97#
                 "expl:Ensures clause"
                 ((Int32.(=) result (#"map_c.jc" 240 48 60#
                  "expl:Integer cast" (Int32.of_int (0)))) ->
                  (forall i_2 : int.
                   ((((<=) (0) i_2) /\ ((<) i_2 (Int32.to_int size))) ->
                    (Int32.(=)
                    (select !__anonstruct_Item_7_existent_items_51
                    (shift (select !__anonstruct_Map_8_items_map_1_23 map_1)
                    i_2)) (#"map_c.jc" 245 43 55# "expl:Integer cast"
                    (Int32.of_int (0))))))))
                /\
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 121 16 51#
                "expl:Ensures clause"
                ((not
                 (Int32.(=) result (#"map_c.jc" 246 52 64#
                 "expl:Integer cast" (Int32.of_int (0))))) ->
                 (not
                 (is_map_valid map_1 !voidP_items_51_alloc_table
                 !__anonstruct_Value_6_items_51_alloc_table
                 !__anonstruct_Map_8_count_map_1_23
                 !__anonstruct_Map_8_capacity_map_1_23
                 !__anonstruct_Map_8_items_map_1_23
                 __anonstruct_Item_7_value_1_items_51)))))))))))))) }
  
end

module Function_initializeMap_safe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import core.Same_except 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import ref.Ref 
  
  use import core.Pset_deref 
  
  use import core.Pset_all 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_map_valid 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  val initializeMap
  (map_1 : (pointer __anonstruct_Map_8)) 
   (size : Int32.t) 
    (voidP_items_51_alloc_table : ref (alloc_table voidP)) 
     (__anonstruct_Value_6_items_51_alloc_table : ref (alloc_table
      __anonstruct_Value_6)) 
      (__anonstruct_Map_8_map_1_23_alloc_table : ref (alloc_table
       __anonstruct_Map_8)) 
       (voidP_items_51_tag_table : ref (tag_table voidP)) 
        (__anonstruct_Value_6_items_51_tag_table : ref (tag_table
         __anonstruct_Value_6)) 
         (__anonstruct_Map_8_count_map_1_23 : ref (memory __anonstruct_Map_8
          Int32.t)) 
          (__anonstruct_Map_8_capacity_map_1_23 : ref (memory
           __anonstruct_Map_8 Int32.t)) 
           (__anonstruct_Map_8_items_map_1_23 : ref (memory
            __anonstruct_Map_8 (pointer voidP))) 
            (__anonstruct_Item_7_existent_items_51 : ref (memory voidP
             Int32.t)) 
             (__anonstruct_Item_7_value_1_items_51 : (memory voidP (pointer
              __anonstruct_Value_6))) : Int32.t
              requires {
                ("expl:Internal"
                (#"map_c.jc" 228 12 243# "expl:Requires clause"
                ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 115 16 24#
                 "expl:Requires clause"
                 (Int32.(>) size (#"map_c.jc" 228 29 41# "expl:Integer cast"
                 (Int32.of_int (0)))))
                /\
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 116 16 27#
                "expl:Requires clause"
                (#"map_c.jc" 228 12 243# "expl:Requires clause"
                ((#"map_c.jc" 228 12 243# "expl:Requires clause"
                 ((<=)
                 (offset_min !__anonstruct_Map_8_map_1_23_alloc_table map_1)
                 (0)))
                /\
                (#"map_c.jc" 228 12 243# "expl:Requires clause"
                ((#"map_c.jc" 228 12 243# "expl:Requires clause"
                 ((>=)
                 (offset_max !__anonstruct_Map_8_map_1_23_alloc_table map_1)
                 (0)))
                /\
                (#"map_c.jc" 228 12 243# "expl:Requires clause"
                ((=) true true)))))))))) }
              reads { __anonstruct_Item_7_existent_items_51,
              __anonstruct_Map_8_capacity_map_1_23,
              __anonstruct_Map_8_count_map_1_23,
              __anonstruct_Map_8_items_map_1_23,
              __anonstruct_Map_8_map_1_23_alloc_table,
              __anonstruct_Value_6_items_51_alloc_table,
              voidP_items_51_alloc_table, voidP_items_51_tag_table } writes {
              __anonstruct_Item_7_existent_items_51,
              __anonstruct_Map_8_capacity_map_1_23,
              __anonstruct_Map_8_count_map_1_23,
              __anonstruct_Map_8_items_map_1_23,
              __anonstruct_Map_8_map_1_23_alloc_table,
              __anonstruct_Value_6_items_51_alloc_table,
              __anonstruct_Value_6_items_51_tag_table,
              voidP_items_51_alloc_table, voidP_items_51_tag_table }
              ensures {
                ((#"map_c.jc" 233 12 32# "expl:Allocates clause"
                 (((#"map_c.jc" 233 12 32# "expl:Allocates clause"
                   (alloc_same_except (old !voidP_items_51_alloc_table)
                   !voidP_items_51_alloc_table
                   (pset_all
                   (pset_deref !__anonstruct_Map_8_items_map_1_23
                   (pset_singleton map_1)))))
                  /\
                  ((#"map_c.jc" 233 12 32# "expl:Allocates clause"
                   (alloc_same_except (old
                   !__anonstruct_Value_6_items_51_alloc_table)
                   !__anonstruct_Value_6_items_51_alloc_table
                   (pset_all
                   (pset_deref __anonstruct_Item_7_value_1_items_51
                   (pset_singleton
                   (select !__anonstruct_Map_8_items_map_1_23 map_1))))))
                  /\
                  (#"map_c.jc" 233 12 32# "expl:Allocates clause"
                  (alloc_same_except (old
                  !__anonstruct_Map_8_map_1_23_alloc_table)
                  !__anonstruct_Map_8_map_1_23_alloc_table pset_empty))))
                 /\
                 ((#"map_c.jc" 233 12 32# "expl:Allocates clause"
                  (tag_extends (old !voidP_items_51_tag_table)
                  !voidP_items_51_tag_table))
                 /\
                 (#"map_c.jc" 233 12 32# "expl:Allocates clause"
                 (tag_extends (old !__anonstruct_Value_6_items_51_tag_table)
                 !__anonstruct_Value_6_items_51_tag_table)))))
                /\
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 117 16 50#
                "expl:Ensures clause"
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 117 16 50#
                "expl:Ensures clause"
                ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 117 16 50#
                 "expl:Ensures clause"
                 ((Int32.(=) result (#"map_c.jc" 234 42 54#
                  "expl:Integer cast" (Int32.of_int (0)))) ->
                  (is_map_valid map_1 !voidP_items_51_alloc_table
                  !__anonstruct_Value_6_items_51_alloc_table
                  !__anonstruct_Map_8_count_map_1_23
                  !__anonstruct_Map_8_capacity_map_1_23
                  !__anonstruct_Map_8_items_map_1_23
                  __anonstruct_Item_7_value_1_items_51)))
                /\
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 117 16 50#
                "expl:Ensures clause"
                ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 118 16 54#
                 "expl:Ensures clause"
                 ((Int32.(=) result (#"map_c.jc" 236 44 56#
                  "expl:Integer cast" (Int32.of_int (0)))) ->
                  (Int32.(=)
                  (select !__anonstruct_Map_8_capacity_map_1_23 map_1) size)))
                /\
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 117 16 50#
                "expl:Ensures clause"
                ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 119 16 48#
                 "expl:Ensures clause"
                 ((Int32.(=) result (#"map_c.jc" 238 46 58#
                  "expl:Integer cast" (Int32.of_int (0)))) ->
                  (Int32.(=)
                  (select !__anonstruct_Map_8_count_map_1_23 map_1)
                  (#"map_c.jc" 239 60 72# "expl:Integer cast" (Int32.of_int
                  (0))))))
                /\
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 117 16 50#
                "expl:Ensures clause"
                ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 120 16 97#
                 "expl:Ensures clause"
                 ((Int32.(=) result (#"map_c.jc" 240 48 60#
                  "expl:Integer cast" (Int32.of_int (0)))) ->
                  (forall i_2 : int.
                   ((((<=) (0) i_2) /\ ((<) i_2 (Int32.to_int size))) ->
                    (Int32.(=)
                    (select !__anonstruct_Item_7_existent_items_51
                    (shift (select !__anonstruct_Map_8_items_map_1_23 map_1)
                    i_2)) (#"map_c.jc" 245 43 55# "expl:Integer cast"
                    (Int32.of_int (0))))))))
                /\
                (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 121 16 51#
                "expl:Ensures clause"
                ((not
                 (Int32.(=) result (#"map_c.jc" 246 52 64#
                 "expl:Integer cast" (Int32.of_int (0))))) ->
                 (not
                 (is_map_valid map_1 !voidP_items_51_alloc_table
                 !__anonstruct_Value_6_items_51_alloc_table
                 !__anonstruct_Map_8_count_map_1_23
                 !__anonstruct_Map_8_capacity_map_1_23
                 !__anonstruct_Map_8_items_map_1_23
                 __anonstruct_Item_7_value_1_items_51)))))))))))))) }
  
end

module Function_removeElement

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import Root___anonstruct_Key_5 
  
  use import ref.Ref 
  
  use import core.Pset_range 
  
  use import core.Pset_deref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_pair_exists 
  
  use import Logic_is_map_correct 
  
  use import Logic_is_key_exists 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Axiomatic_ItemsCount 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val removeElement
  (map_2 : (pointer __anonstruct_Map_8)) 
   (key_1 : (pointer __anonstruct_Key_5)) 
    (value_0_0 : (pointer __anonstruct_Value_6)) 
     (__anonstruct_Map_8_count_map_2_26 : ref (memory __anonstruct_Map_8
      Int32.t)) 
      (__anonstruct_Map_8_items_map_2_26 : ref (memory __anonstruct_Map_8
       (pointer voidP))) 
       (__anonstruct_Item_7_existent_items_54 : ref (memory voidP Int32.t)) 
        (__anonstruct_Item_7___anonstruct_Key_5_b_items_54 : ref (memory
         voidP Int32.t)) 
         (__anonstruct_Item_7___anonstruct_Key_5_a_items_54 : ref (memory
          voidP Int32.t)) 
          (__anonstruct_Value_6_d_items_54 : ref (memory __anonstruct_Value_6
           Int32.t)) 
           (__anonstruct_Value_6_d_value_0_28 : ref (memory
            __anonstruct_Value_6 Int32.t)) 
            (__anonstruct_Value_6_c_items_54 : ref (memory
             __anonstruct_Value_6 Int32.t)) 
             (__anonstruct_Value_6_c_value_0_28 : ref (memory
              __anonstruct_Value_6 Int32.t)) 
              (voidP_items_54_alloc_table : (alloc_table voidP)) 
               (__anonstruct_Value_6_items_54_alloc_table : (alloc_table
                __anonstruct_Value_6)) 
                (__anonstruct_Value_6_value_0_28_alloc_table : (alloc_table
                 __anonstruct_Value_6)) 
                 (__anonstruct_Map_8_map_2_26_alloc_table : (alloc_table
                  __anonstruct_Map_8)) 
                  (__anonstruct_Key_5_key_1_27_alloc_table : (alloc_table
                   __anonstruct_Key_5)) 
                   (voidP_items_54_tag_table : (tag_table voidP)) 
                    (__anonstruct_Map_8_capacity_map_2_26 : (memory
                     __anonstruct_Map_8 Int32.t)) 
                     (__anonstruct_Item_7_value_1_items_54 : (memory voidP
                      (pointer __anonstruct_Value_6))) 
                      (__anonstruct_Key_5_b_key_1_27 : (memory
                       __anonstruct_Key_5 Int32.t)) 
                       (__anonstruct_Key_5_a_key_1_27 : (memory
                        __anonstruct_Key_5 Int32.t)) : Int32.t
                        requires { true } reads {
                        __anonstruct_Item_7___anonstruct_Key_5_a_items_54,
                        __anonstruct_Item_7___anonstruct_Key_5_b_items_54,
                        __anonstruct_Item_7_existent_items_54,
                        __anonstruct_Map_8_count_map_2_26,
                        __anonstruct_Map_8_items_map_2_26,
                        __anonstruct_Value_6_c_items_54,
                        __anonstruct_Value_6_c_value_0_28,
                        __anonstruct_Value_6_d_items_54,
                        __anonstruct_Value_6_d_value_0_28 } writes {
                        __anonstruct_Item_7___anonstruct_Key_5_a_items_54,
                        __anonstruct_Item_7___anonstruct_Key_5_b_items_54,
                        __anonstruct_Item_7_existent_items_54,
                        __anonstruct_Map_8_count_map_2_26,
                        __anonstruct_Map_8_items_map_2_26,
                        __anonstruct_Value_6_c_items_54,
                        __anonstruct_Value_6_c_value_0_28,
                        __anonstruct_Value_6_d_items_54,
                        __anonstruct_Value_6_d_value_0_28 }
                        ensures {
                          ((((((((((#"map_c.jc" 383 10 408#
                                   "expl:Assigns clause"
                                   (not_assigns
                                   __anonstruct_Value_6_value_0_28_alloc_table
                                   __anonstruct_Value_6_value_0_28_alloc_table
                                   (old !__anonstruct_Value_6_c_value_0_28)
                                   !__anonstruct_Value_6_c_value_0_28
                                   (pset_singleton value_0_0)))
                                  /\
                                  (#"map_c.jc" 383 10 408#
                                  "expl:Assigns clause"
                                  (not_assigns
                                  __anonstruct_Value_6_items_54_alloc_table
                                  __anonstruct_Value_6_items_54_alloc_table
                                  (old !__anonstruct_Value_6_c_items_54)
                                  !__anonstruct_Value_6_c_items_54
                                  (pset_deref
                                  __anonstruct_Item_7_value_1_items_54
                                  (pset_range
                                  (pset_deref (old
                                  !__anonstruct_Map_8_items_map_2_26)
                                  (pset_singleton map_2)) (0)
                                  (Int.(-)
                                  (Int32.to_int
                                  (select
                                  __anonstruct_Map_8_capacity_map_2_26 map_2))
                                  (1)))))))
                                 /\
                                 (#"map_c.jc" 383 10 408#
                                 "expl:Assigns clause"
                                 (not_assigns
                                 __anonstruct_Value_6_value_0_28_alloc_table
                                 __anonstruct_Value_6_value_0_28_alloc_table
                                 (old !__anonstruct_Value_6_d_value_0_28)
                                 !__anonstruct_Value_6_d_value_0_28
                                 (pset_singleton value_0_0))))
                                /\
                                (#"map_c.jc" 383 10 408#
                                "expl:Assigns clause"
                                (not_assigns
                                __anonstruct_Value_6_items_54_alloc_table
                                __anonstruct_Value_6_items_54_alloc_table
                                (old !__anonstruct_Value_6_d_items_54)
                                !__anonstruct_Value_6_d_items_54
                                (pset_deref
                                __anonstruct_Item_7_value_1_items_54
                                (pset_range
                                (pset_deref (old
                                !__anonstruct_Map_8_items_map_2_26)
                                (pset_singleton map_2)) (0)
                                (Int.(-)
                                (Int32.to_int
                                (select __anonstruct_Map_8_capacity_map_2_26
                                map_2)) (1)))))))
                               /\
                               (#"map_c.jc" 383 10 408# "expl:Assigns clause"
                               (not_assigns voidP_items_54_alloc_table
                               voidP_items_54_alloc_table (old
                               !__anonstruct_Item_7___anonstruct_Key_5_a_items_54)
                               !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                               (pset_range
                               (pset_deref (old
                               !__anonstruct_Map_8_items_map_2_26)
                               (pset_singleton map_2)) (0)
                               (Int.(-)
                               (Int32.to_int
                               (select __anonstruct_Map_8_capacity_map_2_26
                               map_2)) (1))))))
                              /\
                              (#"map_c.jc" 383 10 408# "expl:Assigns clause"
                              (not_assigns voidP_items_54_alloc_table
                              voidP_items_54_alloc_table (old
                              !__anonstruct_Item_7___anonstruct_Key_5_b_items_54)
                              !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                              (pset_range
                              (pset_deref (old
                              !__anonstruct_Map_8_items_map_2_26)
                              (pset_singleton map_2)) (0)
                              (Int.(-)
                              (Int32.to_int
                              (select __anonstruct_Map_8_capacity_map_2_26
                              map_2)) (1))))))
                             /\
                             (#"map_c.jc" 383 10 408# "expl:Assigns clause"
                             (not_assigns voidP_items_54_alloc_table
                             voidP_items_54_alloc_table (old
                             !__anonstruct_Item_7_existent_items_54)
                             !__anonstruct_Item_7_existent_items_54
                             (pset_range
                             (pset_deref (old
                             !__anonstruct_Map_8_items_map_2_26)
                             (pset_singleton map_2)) (0)
                             (Int.(-)
                             (Int32.to_int
                             (select __anonstruct_Map_8_capacity_map_2_26
                             map_2)) (1))))))
                            /\
                            (#"map_c.jc" 383 10 408# "expl:Assigns clause"
                            (not_assigns
                            __anonstruct_Map_8_map_2_26_alloc_table
                            __anonstruct_Map_8_map_2_26_alloc_table (old
                            !__anonstruct_Map_8_items_map_2_26)
                            !__anonstruct_Map_8_items_map_2_26 pset_empty)))
                           /\
                           (#"map_c.jc" 383 10 408# "expl:Assigns clause"
                           (not_assigns
                           __anonstruct_Map_8_map_2_26_alloc_table
                           __anonstruct_Map_8_map_2_26_alloc_table (old
                           !__anonstruct_Map_8_count_map_2_26)
                           !__anonstruct_Map_8_count_map_2_26
                           (pset_singleton map_2))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 20#
                           "expl:Ensures clause"
                           (Int32.(=)
                           (select __anonstruct_Key_5_a_key_1_27 key_1)
                           (select __anonstruct_Key_5_a_key_1_27 key_1)))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 20#
                           "expl:Ensures clause"
                           (Int32.(=)
                           (select __anonstruct_Key_5_b_key_1_27 key_1)
                           (select __anonstruct_Key_5_b_key_1_27 key_1)))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 259 16 391#
                           "expl:Ensures clause"
                           (((((<=)
                              (offset_min
                              __anonstruct_Value_6_value_0_28_alloc_table
                              value_0_0) (0))
                             /\
                             (((>=)
                              (offset_max
                              __anonstruct_Value_6_value_0_28_alloc_table
                              value_0_0) (0))
                             /\ ((=) true true)))
                            /\
                            (Int32.(=) result (#"map_c.jc" 399 48 60#
                            "expl:Integer cast" (Int32.of_int (1))))) ->
                            (forall i_5 : int.
                             (((Int32.(=)
                               (select
                               !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                               (shift
                               (select !__anonstruct_Map_8_items_map_2_26
                               map_2) i_5))
                               (select __anonstruct_Key_5_a_key_1_27 key_1))
                              /\
                              ((Int32.(=)
                               (select
                               !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                               (shift
                               (select !__anonstruct_Map_8_items_map_2_26
                               map_2) i_5))
                               (select __anonstruct_Key_5_b_key_1_27 key_1))
                              /\
                              (Int32.(=) result (#"map_c.jc" 405 52 64#
                              "expl:Integer cast" (Int32.of_int (1)))))) ->
                              ((Int32.(=)
                               (select !__anonstruct_Value_6_c_value_0_28
                               value_0_0)
                               (select (old !__anonstruct_Value_6_c_items_54)
                               (select __anonstruct_Item_7_value_1_items_54
                               (shift
                               (select (old
                               !__anonstruct_Map_8_items_map_2_26) map_2)
                               i_5))))
                              /\
                              (Int32.(=)
                              (select !__anonstruct_Value_6_d_value_0_28
                              value_0_0)
                              (select (old !__anonstruct_Value_6_d_items_54)
                              (select __anonstruct_Item_7_value_1_items_54
                              (shift
                              (select (old
                              !__anonstruct_Map_8_items_map_2_26) map_2) i_5)))))))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 265 16 27#
                           "expl:Ensures clause"
                           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                           "expl:Ensures clause"
                           ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                            "expl:Ensures clause"
                            ((<=)
                            (offset_min
                            __anonstruct_Map_8_map_2_26_alloc_table map_2)
                            (0)))
                           /\
                           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                           "expl:Ensures clause"
                           ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                            "expl:Ensures clause"
                            ((>=)
                            (offset_max
                            __anonstruct_Map_8_map_2_26_alloc_table map_2)
                            (0)))
                           /\
                           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                           "expl:Ensures clause" ((=) true true)))))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 265 31 50#
                           "expl:Ensures clause"
                           (is_map_correct map_2 voidP_items_54_alloc_table
                           __anonstruct_Value_6_items_54_alloc_table
                           !__anonstruct_Map_8_count_map_2_26
                           __anonstruct_Map_8_capacity_map_2_26
                           !__anonstruct_Map_8_items_map_2_26
                           !__anonstruct_Item_7_existent_items_54
                           __anonstruct_Item_7_value_1_items_54
                           !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                           !__anonstruct_Item_7___anonstruct_Key_5_a_items_54))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 266 16 67#
                           "expl:Ensures clause"
                           ((Int32.(=) result (#"map_c.jc" 416 50 62#
                            "expl:Integer cast" (Int32.of_int (1)))) ->
                            ((=)
                            (Int32.to_int
                            (select (old !__anonstruct_Map_8_count_map_2_26)
                            map_2))
                            (Int.(+)
                            (Int32.to_int
                            (select !__anonstruct_Map_8_count_map_2_26 map_2))
                            (1)))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 267 16 63#
                           "expl:Ensures clause"
                           ((Int32.(=) result (#"map_c.jc" 420 52 64#
                            "expl:Integer cast" (Int32.of_int (0)))) ->
                            (Int32.(=)
                            (select (old !__anonstruct_Map_8_count_map_2_26)
                            map_2)
                            (select !__anonstruct_Map_8_count_map_2_26 map_2))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 268 16 52#
                           "expl:Ensures clause"
                           (Int32.(=)
                           (select __anonstruct_Map_8_capacity_map_2_26
                           map_2)
                           (select __anonstruct_Map_8_capacity_map_2_26
                           map_2)))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 270 16 90#
                           "expl:Ensures clause"
                           ((Int32.(=) result (#"map_c.jc" 425 56 68#
                            "expl:Integer cast" (Int32.of_int (1)))) ->
                            ((is_key_exists map_2 key_1
                             __anonstruct_Map_8_capacity_map_2_26
                             !__anonstruct_Map_8_items_map_2_26
                             !__anonstruct_Item_7_existent_items_54
                             __anonstruct_Item_7_value_1_items_54
                             !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                             !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                             !__anonstruct_Value_6_d_items_54
                             !__anonstruct_Value_6_c_items_54
                             __anonstruct_Key_5_b_key_1_27
                             __anonstruct_Key_5_a_key_1_27)
                            /\
                            (not
                            (is_key_exists map_2 key_1
                            __anonstruct_Map_8_capacity_map_2_26
                            !__anonstruct_Map_8_items_map_2_26
                            !__anonstruct_Item_7_existent_items_54
                            __anonstruct_Item_7_value_1_items_54
                            !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                            !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                            !__anonstruct_Value_6_d_items_54
                            !__anonstruct_Value_6_c_items_54
                            __anonstruct_Key_5_b_key_1_27
                            __anonstruct_Key_5_a_key_1_27)))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 271 16 196#
                           "expl:Ensures clause"
                           ((Int32.(=) result (#"map_c.jc" 430 58 70#
                            "expl:Integer cast" (Int32.of_int (1)))) ->
                            ((is_pair_exists map_2 key_1 value_0_0
                             __anonstruct_Map_8_capacity_map_2_26
                             !__anonstruct_Map_8_items_map_2_26
                             !__anonstruct_Item_7_existent_items_54
                             __anonstruct_Item_7_value_1_items_54
                             !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                             !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                             !__anonstruct_Value_6_d_items_54
                             !__anonstruct_Value_6_d_value_0_28
                             !__anonstruct_Value_6_c_items_54
                             !__anonstruct_Value_6_c_value_0_28
                             __anonstruct_Key_5_b_key_1_27
                             __anonstruct_Key_5_a_key_1_27)
                            /\
                            (not
                            (is_pair_exists map_2 key_1 value_0_0
                            __anonstruct_Map_8_capacity_map_2_26
                            !__anonstruct_Map_8_items_map_2_26
                            !__anonstruct_Item_7_existent_items_54
                            __anonstruct_Item_7_value_1_items_54
                            !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                            !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                            !__anonstruct_Value_6_d_items_54
                            !__anonstruct_Value_6_d_value_0_28
                            !__anonstruct_Value_6_c_items_54
                            !__anonstruct_Value_6_c_value_0_28
                            __anonstruct_Key_5_b_key_1_27
                            __anonstruct_Key_5_a_key_1_27)))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 273 16 63#
                           "expl:Ensures clause"
                           ((not
                            (is_key_exists map_2 key_1
                            __anonstruct_Map_8_capacity_map_2_26
                            !__anonstruct_Map_8_items_map_2_26
                            !__anonstruct_Item_7_existent_items_54
                            __anonstruct_Item_7_value_1_items_54
                            !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                            !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                            !__anonstruct_Value_6_d_items_54
                            !__anonstruct_Value_6_c_items_54
                            __anonstruct_Key_5_b_key_1_27
                            __anonstruct_Key_5_a_key_1_27)) ->
                            (Int32.(=) result (#"map_c.jc" 442 61 73#
                            "expl:Integer cast" (Int32.of_int (0))))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 274 16 31#
                           "expl:Ensures clause"
                           (Int32.(=)
                           (select !__anonstruct_Map_8_count_map_2_26 map_2)
                           (#"map_c.jc" 444 52 64# "expl:Integer cast"
                           (Int32.of_int (0)))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 275 27 98#
                           "expl:Ensures clause"
                           (forall index_9 : int.
                            ((Int32.(=)
                             (select !__anonstruct_Item_7_existent_items_54
                             (shift
                             (select !__anonstruct_Map_8_items_map_2_26
                             map_2) index_9)) (#"map_c.jc" 448 56 68#
                             "expl:Integer cast" (Int32.of_int (0)))) ->
                             (Int32.(=) result (#"map_c.jc" 450 57 69#
                             "expl:Integer cast" (Int32.of_int (0)))))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 277 16 215#
                          "expl:Ensures clause"
                          ((is_key_exists map_2 key_1
                           __anonstruct_Map_8_capacity_map_2_26 (old
                           !__anonstruct_Map_8_items_map_2_26) (old
                           !__anonstruct_Item_7_existent_items_54)
                           __anonstruct_Item_7_value_1_items_54 (old
                           !__anonstruct_Item_7___anonstruct_Key_5_b_items_54)
                           (old
                           !__anonstruct_Item_7___anonstruct_Key_5_a_items_54)
                           (old !__anonstruct_Value_6_d_items_54) (old
                           !__anonstruct_Value_6_c_items_54)
                           __anonstruct_Key_5_b_key_1_27
                           __anonstruct_Key_5_a_key_1_27) ->
                           ((Int32.(=) result (#"map_c.jc" 455 56 68#
                            "expl:Integer cast" (Int32.of_int (1))))
                           /\
                           (((=)
                            (Int.(+)
                            (all_count map_2
                            __anonstruct_Map_8_capacity_map_2_26
                            !__anonstruct_Map_8_items_map_2_26
                            !__anonstruct_Item_7_existent_items_54) (1))
                            (all_count map_2
                            __anonstruct_Map_8_capacity_map_2_26 (old
                            !__anonstruct_Map_8_items_map_2_26) (old
                            !__anonstruct_Item_7_existent_items_54)))
                           /\
                           (not
                           (is_pair_exists map_2 key_1 value_0_0
                           __anonstruct_Map_8_capacity_map_2_26
                           !__anonstruct_Map_8_items_map_2_26
                           !__anonstruct_Item_7_existent_items_54
                           __anonstruct_Item_7_value_1_items_54
                           !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                           !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                           !__anonstruct_Value_6_d_items_54
                           !__anonstruct_Value_6_d_value_0_28
                           !__anonstruct_Value_6_c_items_54
                           !__anonstruct_Value_6_c_value_0_28
                           __anonstruct_Key_5_b_key_1_27
                           __anonstruct_Key_5_a_key_1_27))))))))))))))))))))))))))))))))))
                          }
  
end

module Function_removeElement_safe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import Root___anonstruct_Key_5 
  
  use import ref.Ref 
  
  use import core.Pset_range 
  
  use import core.Pset_deref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_value_valid 
  
  use import Logic_is_pair_exists 
  
  use import Logic_is_map_correct 
  
  use import Logic_is_key_valid 
  
  use import Logic_is_key_exists 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Axiomatic_ItemsCount 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val removeElement
  (map_2 : (pointer __anonstruct_Map_8)) 
   (key_1 : (pointer __anonstruct_Key_5)) 
    (value_0_0 : (pointer __anonstruct_Value_6)) 
     (__anonstruct_Map_8_count_map_2_26 : ref (memory __anonstruct_Map_8
      Int32.t)) 
      (__anonstruct_Map_8_items_map_2_26 : ref (memory __anonstruct_Map_8
       (pointer voidP))) 
       (__anonstruct_Item_7_existent_items_54 : ref (memory voidP Int32.t)) 
        (__anonstruct_Item_7___anonstruct_Key_5_b_items_54 : ref (memory
         voidP Int32.t)) 
         (__anonstruct_Item_7___anonstruct_Key_5_a_items_54 : ref (memory
          voidP Int32.t)) 
          (__anonstruct_Value_6_d_items_54 : ref (memory __anonstruct_Value_6
           Int32.t)) 
           (__anonstruct_Value_6_d_value_0_28 : ref (memory
            __anonstruct_Value_6 Int32.t)) 
            (__anonstruct_Value_6_c_items_54 : ref (memory
             __anonstruct_Value_6 Int32.t)) 
             (__anonstruct_Value_6_c_value_0_28 : ref (memory
              __anonstruct_Value_6 Int32.t)) 
              (voidP_items_54_alloc_table : (alloc_table voidP)) 
               (__anonstruct_Value_6_items_54_alloc_table : (alloc_table
                __anonstruct_Value_6)) 
                (__anonstruct_Value_6_value_0_28_alloc_table : (alloc_table
                 __anonstruct_Value_6)) 
                 (__anonstruct_Map_8_map_2_26_alloc_table : (alloc_table
                  __anonstruct_Map_8)) 
                  (__anonstruct_Key_5_key_1_27_alloc_table : (alloc_table
                   __anonstruct_Key_5)) 
                   (voidP_items_54_tag_table : (tag_table voidP)) 
                    (__anonstruct_Map_8_capacity_map_2_26 : (memory
                     __anonstruct_Map_8 Int32.t)) 
                     (__anonstruct_Item_7_value_1_items_54 : (memory voidP
                      (pointer __anonstruct_Value_6))) 
                      (__anonstruct_Key_5_b_key_1_27 : (memory
                       __anonstruct_Key_5 Int32.t)) 
                       (__anonstruct_Key_5_a_key_1_27 : (memory
                        __anonstruct_Key_5 Int32.t)) : Int32.t
                        requires {
                          ("expl:Internal"
                          (#"map_c.jc" 364 12 1173# "expl:Requires clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 254 16 27#
                           "expl:Requires clause"
                           (#"map_c.jc" 364 12 1173# "expl:Requires clause"
                           ((#"map_c.jc" 364 12 1173# "expl:Requires clause"
                            ((<=)
                            (offset_min
                            __anonstruct_Map_8_map_2_26_alloc_table map_2)
                            (0)))
                           /\
                           (#"map_c.jc" 364 12 1173# "expl:Requires clause"
                           ((#"map_c.jc" 364 12 1173# "expl:Requires clause"
                            ((>=)
                            (offset_max
                            __anonstruct_Map_8_map_2_26_alloc_table map_2)
                            (0)))
                           /\
                           (#"map_c.jc" 364 12 1173# "expl:Requires clause"
                           ((=) true true)))))))
                          /\
                          (#"map_c.jc" 364 12 1173# "expl:Requires clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 254 31 50#
                           "expl:Requires clause"
                           (is_map_correct map_2 voidP_items_54_alloc_table
                           __anonstruct_Value_6_items_54_alloc_table
                           !__anonstruct_Map_8_count_map_2_26
                           __anonstruct_Map_8_capacity_map_2_26
                           !__anonstruct_Map_8_items_map_2_26
                           !__anonstruct_Item_7_existent_items_54
                           __anonstruct_Item_7_value_1_items_54
                           !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                           !__anonstruct_Item_7___anonstruct_Key_5_a_items_54))
                          /\
                          (#"map_c.jc" 364 12 1173# "expl:Requires clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 255 16 27#
                           "expl:Requires clause"
                           (#"map_c.jc" 364 12 1173# "expl:Requires clause"
                           ((#"map_c.jc" 364 12 1173# "expl:Requires clause"
                            ((<=)
                            (offset_min
                            __anonstruct_Key_5_key_1_27_alloc_table key_1)
                            (0)))
                           /\
                           (#"map_c.jc" 364 12 1173# "expl:Requires clause"
                           ((#"map_c.jc" 364 12 1173# "expl:Requires clause"
                            ((>=)
                            (offset_max
                            __anonstruct_Key_5_key_1_27_alloc_table key_1)
                            (0)))
                           /\
                           (#"map_c.jc" 364 12 1173# "expl:Requires clause"
                           ((=) true true)))))))
                          /\
                          (#"map_c.jc" 364 12 1173# "expl:Requires clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 255 31 96#
                           "expl:Requires clause"
                           (forall i_3_0 : int.
                            ((((<=) (0) i_3_0) /\
                             ((<) i_3_0
                             (Int32.to_int
                             (select !__anonstruct_Map_8_count_map_2_26
                             map_2)))) ->
                             (is_key_valid map_2 i_3_0
                             !__anonstruct_Map_8_items_map_2_26
                             !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                             !__anonstruct_Item_7___anonstruct_Key_5_a_items_54))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 256 16 81#
                          "expl:Requires clause"
                          (forall i_4 : int.
                           ((((<=) (0) i_4) /\
                            ((<) i_4
                            (Int32.to_int
                            (select !__anonstruct_Map_8_count_map_2_26 map_2))))
                            ->
                            (is_value_valid map_2 i_4
                            !__anonstruct_Map_8_items_map_2_26
                            __anonstruct_Item_7_value_1_items_54
                            !__anonstruct_Value_6_d_items_54
                            !__anonstruct_Value_6_c_items_54))))))))))))) }
                        reads {
                        __anonstruct_Item_7___anonstruct_Key_5_a_items_54,
                        __anonstruct_Item_7___anonstruct_Key_5_b_items_54,
                        __anonstruct_Item_7_existent_items_54,
                        __anonstruct_Map_8_count_map_2_26,
                        __anonstruct_Map_8_items_map_2_26,
                        __anonstruct_Value_6_c_items_54,
                        __anonstruct_Value_6_c_value_0_28,
                        __anonstruct_Value_6_d_items_54,
                        __anonstruct_Value_6_d_value_0_28 } writes {
                        __anonstruct_Item_7___anonstruct_Key_5_a_items_54,
                        __anonstruct_Item_7___anonstruct_Key_5_b_items_54,
                        __anonstruct_Item_7_existent_items_54,
                        __anonstruct_Map_8_count_map_2_26,
                        __anonstruct_Map_8_items_map_2_26,
                        __anonstruct_Value_6_c_items_54,
                        __anonstruct_Value_6_c_value_0_28,
                        __anonstruct_Value_6_d_items_54,
                        __anonstruct_Value_6_d_value_0_28 }
                        ensures {
                          ((((((((((#"map_c.jc" 383 10 408#
                                   "expl:Assigns clause"
                                   (not_assigns
                                   __anonstruct_Value_6_value_0_28_alloc_table
                                   __anonstruct_Value_6_value_0_28_alloc_table
                                   (old !__anonstruct_Value_6_c_value_0_28)
                                   !__anonstruct_Value_6_c_value_0_28
                                   (pset_singleton value_0_0)))
                                  /\
                                  (#"map_c.jc" 383 10 408#
                                  "expl:Assigns clause"
                                  (not_assigns
                                  __anonstruct_Value_6_items_54_alloc_table
                                  __anonstruct_Value_6_items_54_alloc_table
                                  (old !__anonstruct_Value_6_c_items_54)
                                  !__anonstruct_Value_6_c_items_54
                                  (pset_deref
                                  __anonstruct_Item_7_value_1_items_54
                                  (pset_range
                                  (pset_deref (old
                                  !__anonstruct_Map_8_items_map_2_26)
                                  (pset_singleton map_2)) (0)
                                  (Int.(-)
                                  (Int32.to_int
                                  (select
                                  __anonstruct_Map_8_capacity_map_2_26 map_2))
                                  (1)))))))
                                 /\
                                 (#"map_c.jc" 383 10 408#
                                 "expl:Assigns clause"
                                 (not_assigns
                                 __anonstruct_Value_6_value_0_28_alloc_table
                                 __anonstruct_Value_6_value_0_28_alloc_table
                                 (old !__anonstruct_Value_6_d_value_0_28)
                                 !__anonstruct_Value_6_d_value_0_28
                                 (pset_singleton value_0_0))))
                                /\
                                (#"map_c.jc" 383 10 408#
                                "expl:Assigns clause"
                                (not_assigns
                                __anonstruct_Value_6_items_54_alloc_table
                                __anonstruct_Value_6_items_54_alloc_table
                                (old !__anonstruct_Value_6_d_items_54)
                                !__anonstruct_Value_6_d_items_54
                                (pset_deref
                                __anonstruct_Item_7_value_1_items_54
                                (pset_range
                                (pset_deref (old
                                !__anonstruct_Map_8_items_map_2_26)
                                (pset_singleton map_2)) (0)
                                (Int.(-)
                                (Int32.to_int
                                (select __anonstruct_Map_8_capacity_map_2_26
                                map_2)) (1)))))))
                               /\
                               (#"map_c.jc" 383 10 408# "expl:Assigns clause"
                               (not_assigns voidP_items_54_alloc_table
                               voidP_items_54_alloc_table (old
                               !__anonstruct_Item_7___anonstruct_Key_5_a_items_54)
                               !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                               (pset_range
                               (pset_deref (old
                               !__anonstruct_Map_8_items_map_2_26)
                               (pset_singleton map_2)) (0)
                               (Int.(-)
                               (Int32.to_int
                               (select __anonstruct_Map_8_capacity_map_2_26
                               map_2)) (1))))))
                              /\
                              (#"map_c.jc" 383 10 408# "expl:Assigns clause"
                              (not_assigns voidP_items_54_alloc_table
                              voidP_items_54_alloc_table (old
                              !__anonstruct_Item_7___anonstruct_Key_5_b_items_54)
                              !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                              (pset_range
                              (pset_deref (old
                              !__anonstruct_Map_8_items_map_2_26)
                              (pset_singleton map_2)) (0)
                              (Int.(-)
                              (Int32.to_int
                              (select __anonstruct_Map_8_capacity_map_2_26
                              map_2)) (1))))))
                             /\
                             (#"map_c.jc" 383 10 408# "expl:Assigns clause"
                             (not_assigns voidP_items_54_alloc_table
                             voidP_items_54_alloc_table (old
                             !__anonstruct_Item_7_existent_items_54)
                             !__anonstruct_Item_7_existent_items_54
                             (pset_range
                             (pset_deref (old
                             !__anonstruct_Map_8_items_map_2_26)
                             (pset_singleton map_2)) (0)
                             (Int.(-)
                             (Int32.to_int
                             (select __anonstruct_Map_8_capacity_map_2_26
                             map_2)) (1))))))
                            /\
                            (#"map_c.jc" 383 10 408# "expl:Assigns clause"
                            (not_assigns
                            __anonstruct_Map_8_map_2_26_alloc_table
                            __anonstruct_Map_8_map_2_26_alloc_table (old
                            !__anonstruct_Map_8_items_map_2_26)
                            !__anonstruct_Map_8_items_map_2_26 pset_empty)))
                           /\
                           (#"map_c.jc" 383 10 408# "expl:Assigns clause"
                           (not_assigns
                           __anonstruct_Map_8_map_2_26_alloc_table
                           __anonstruct_Map_8_map_2_26_alloc_table (old
                           !__anonstruct_Map_8_count_map_2_26)
                           !__anonstruct_Map_8_count_map_2_26
                           (pset_singleton map_2))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 20#
                           "expl:Ensures clause"
                           (Int32.(=)
                           (select __anonstruct_Key_5_a_key_1_27 key_1)
                           (select __anonstruct_Key_5_a_key_1_27 key_1)))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 20#
                           "expl:Ensures clause"
                           (Int32.(=)
                           (select __anonstruct_Key_5_b_key_1_27 key_1)
                           (select __anonstruct_Key_5_b_key_1_27 key_1)))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 259 16 391#
                           "expl:Ensures clause"
                           (((((<=)
                              (offset_min
                              __anonstruct_Value_6_value_0_28_alloc_table
                              value_0_0) (0))
                             /\
                             (((>=)
                              (offset_max
                              __anonstruct_Value_6_value_0_28_alloc_table
                              value_0_0) (0))
                             /\ ((=) true true)))
                            /\
                            (Int32.(=) result (#"map_c.jc" 399 48 60#
                            "expl:Integer cast" (Int32.of_int (1))))) ->
                            (forall i_5 : int.
                             (((Int32.(=)
                               (select
                               !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                               (shift
                               (select !__anonstruct_Map_8_items_map_2_26
                               map_2) i_5))
                               (select __anonstruct_Key_5_a_key_1_27 key_1))
                              /\
                              ((Int32.(=)
                               (select
                               !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                               (shift
                               (select !__anonstruct_Map_8_items_map_2_26
                               map_2) i_5))
                               (select __anonstruct_Key_5_b_key_1_27 key_1))
                              /\
                              (Int32.(=) result (#"map_c.jc" 405 52 64#
                              "expl:Integer cast" (Int32.of_int (1)))))) ->
                              ((Int32.(=)
                               (select !__anonstruct_Value_6_c_value_0_28
                               value_0_0)
                               (select (old !__anonstruct_Value_6_c_items_54)
                               (select __anonstruct_Item_7_value_1_items_54
                               (shift
                               (select (old
                               !__anonstruct_Map_8_items_map_2_26) map_2)
                               i_5))))
                              /\
                              (Int32.(=)
                              (select !__anonstruct_Value_6_d_value_0_28
                              value_0_0)
                              (select (old !__anonstruct_Value_6_d_items_54)
                              (select __anonstruct_Item_7_value_1_items_54
                              (shift
                              (select (old
                              !__anonstruct_Map_8_items_map_2_26) map_2) i_5)))))))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 265 16 27#
                           "expl:Ensures clause"
                           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                           "expl:Ensures clause"
                           ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                            "expl:Ensures clause"
                            ((<=)
                            (offset_min
                            __anonstruct_Map_8_map_2_26_alloc_table map_2)
                            (0)))
                           /\
                           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                           "expl:Ensures clause"
                           ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                            "expl:Ensures clause"
                            ((>=)
                            (offset_max
                            __anonstruct_Map_8_map_2_26_alloc_table map_2)
                            (0)))
                           /\
                           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                           "expl:Ensures clause" ((=) true true)))))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 265 31 50#
                           "expl:Ensures clause"
                           (is_map_correct map_2 voidP_items_54_alloc_table
                           __anonstruct_Value_6_items_54_alloc_table
                           !__anonstruct_Map_8_count_map_2_26
                           __anonstruct_Map_8_capacity_map_2_26
                           !__anonstruct_Map_8_items_map_2_26
                           !__anonstruct_Item_7_existent_items_54
                           __anonstruct_Item_7_value_1_items_54
                           !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                           !__anonstruct_Item_7___anonstruct_Key_5_a_items_54))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 266 16 67#
                           "expl:Ensures clause"
                           ((Int32.(=) result (#"map_c.jc" 416 50 62#
                            "expl:Integer cast" (Int32.of_int (1)))) ->
                            ((=)
                            (Int32.to_int
                            (select (old !__anonstruct_Map_8_count_map_2_26)
                            map_2))
                            (Int.(+)
                            (Int32.to_int
                            (select !__anonstruct_Map_8_count_map_2_26 map_2))
                            (1)))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 267 16 63#
                           "expl:Ensures clause"
                           ((Int32.(=) result (#"map_c.jc" 420 52 64#
                            "expl:Integer cast" (Int32.of_int (0)))) ->
                            (Int32.(=)
                            (select (old !__anonstruct_Map_8_count_map_2_26)
                            map_2)
                            (select !__anonstruct_Map_8_count_map_2_26 map_2))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 268 16 52#
                           "expl:Ensures clause"
                           (Int32.(=)
                           (select __anonstruct_Map_8_capacity_map_2_26
                           map_2)
                           (select __anonstruct_Map_8_capacity_map_2_26
                           map_2)))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 270 16 90#
                           "expl:Ensures clause"
                           ((Int32.(=) result (#"map_c.jc" 425 56 68#
                            "expl:Integer cast" (Int32.of_int (1)))) ->
                            ((is_key_exists map_2 key_1
                             __anonstruct_Map_8_capacity_map_2_26
                             !__anonstruct_Map_8_items_map_2_26
                             !__anonstruct_Item_7_existent_items_54
                             __anonstruct_Item_7_value_1_items_54
                             !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                             !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                             !__anonstruct_Value_6_d_items_54
                             !__anonstruct_Value_6_c_items_54
                             __anonstruct_Key_5_b_key_1_27
                             __anonstruct_Key_5_a_key_1_27)
                            /\
                            (not
                            (is_key_exists map_2 key_1
                            __anonstruct_Map_8_capacity_map_2_26
                            !__anonstruct_Map_8_items_map_2_26
                            !__anonstruct_Item_7_existent_items_54
                            __anonstruct_Item_7_value_1_items_54
                            !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                            !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                            !__anonstruct_Value_6_d_items_54
                            !__anonstruct_Value_6_c_items_54
                            __anonstruct_Key_5_b_key_1_27
                            __anonstruct_Key_5_a_key_1_27)))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 271 16 196#
                           "expl:Ensures clause"
                           ((Int32.(=) result (#"map_c.jc" 430 58 70#
                            "expl:Integer cast" (Int32.of_int (1)))) ->
                            ((is_pair_exists map_2 key_1 value_0_0
                             __anonstruct_Map_8_capacity_map_2_26
                             !__anonstruct_Map_8_items_map_2_26
                             !__anonstruct_Item_7_existent_items_54
                             __anonstruct_Item_7_value_1_items_54
                             !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                             !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                             !__anonstruct_Value_6_d_items_54
                             !__anonstruct_Value_6_d_value_0_28
                             !__anonstruct_Value_6_c_items_54
                             !__anonstruct_Value_6_c_value_0_28
                             __anonstruct_Key_5_b_key_1_27
                             __anonstruct_Key_5_a_key_1_27)
                            /\
                            (not
                            (is_pair_exists map_2 key_1 value_0_0
                            __anonstruct_Map_8_capacity_map_2_26
                            !__anonstruct_Map_8_items_map_2_26
                            !__anonstruct_Item_7_existent_items_54
                            __anonstruct_Item_7_value_1_items_54
                            !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                            !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                            !__anonstruct_Value_6_d_items_54
                            !__anonstruct_Value_6_d_value_0_28
                            !__anonstruct_Value_6_c_items_54
                            !__anonstruct_Value_6_c_value_0_28
                            __anonstruct_Key_5_b_key_1_27
                            __anonstruct_Key_5_a_key_1_27)))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 273 16 63#
                           "expl:Ensures clause"
                           ((not
                            (is_key_exists map_2 key_1
                            __anonstruct_Map_8_capacity_map_2_26
                            !__anonstruct_Map_8_items_map_2_26
                            !__anonstruct_Item_7_existent_items_54
                            __anonstruct_Item_7_value_1_items_54
                            !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                            !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                            !__anonstruct_Value_6_d_items_54
                            !__anonstruct_Value_6_c_items_54
                            __anonstruct_Key_5_b_key_1_27
                            __anonstruct_Key_5_a_key_1_27)) ->
                            (Int32.(=) result (#"map_c.jc" 442 61 73#
                            "expl:Integer cast" (Int32.of_int (0))))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 274 16 31#
                           "expl:Ensures clause"
                           (Int32.(=)
                           (select !__anonstruct_Map_8_count_map_2_26 map_2)
                           (#"map_c.jc" 444 52 64# "expl:Integer cast"
                           (Int32.of_int (0)))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 258 16 34#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 275 27 98#
                           "expl:Ensures clause"
                           (forall index_9 : int.
                            ((Int32.(=)
                             (select !__anonstruct_Item_7_existent_items_54
                             (shift
                             (select !__anonstruct_Map_8_items_map_2_26
                             map_2) index_9)) (#"map_c.jc" 448 56 68#
                             "expl:Integer cast" (Int32.of_int (0)))) ->
                             (Int32.(=) result (#"map_c.jc" 450 57 69#
                             "expl:Integer cast" (Int32.of_int (0)))))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 277 16 215#
                          "expl:Ensures clause"
                          ((is_key_exists map_2 key_1
                           __anonstruct_Map_8_capacity_map_2_26 (old
                           !__anonstruct_Map_8_items_map_2_26) (old
                           !__anonstruct_Item_7_existent_items_54)
                           __anonstruct_Item_7_value_1_items_54 (old
                           !__anonstruct_Item_7___anonstruct_Key_5_b_items_54)
                           (old
                           !__anonstruct_Item_7___anonstruct_Key_5_a_items_54)
                           (old !__anonstruct_Value_6_d_items_54) (old
                           !__anonstruct_Value_6_c_items_54)
                           __anonstruct_Key_5_b_key_1_27
                           __anonstruct_Key_5_a_key_1_27) ->
                           ((Int32.(=) result (#"map_c.jc" 455 56 68#
                            "expl:Integer cast" (Int32.of_int (1))))
                           /\
                           (((=)
                            (Int.(+)
                            (all_count map_2
                            __anonstruct_Map_8_capacity_map_2_26
                            !__anonstruct_Map_8_items_map_2_26
                            !__anonstruct_Item_7_existent_items_54) (1))
                            (all_count map_2
                            __anonstruct_Map_8_capacity_map_2_26 (old
                            !__anonstruct_Map_8_items_map_2_26) (old
                            !__anonstruct_Item_7_existent_items_54)))
                           /\
                           (not
                           (is_pair_exists map_2 key_1 value_0_0
                           __anonstruct_Map_8_capacity_map_2_26
                           !__anonstruct_Map_8_items_map_2_26
                           !__anonstruct_Item_7_existent_items_54
                           __anonstruct_Item_7_value_1_items_54
                           !__anonstruct_Item_7___anonstruct_Key_5_b_items_54
                           !__anonstruct_Item_7___anonstruct_Key_5_a_items_54
                           !__anonstruct_Value_6_d_items_54
                           !__anonstruct_Value_6_d_value_0_28
                           !__anonstruct_Value_6_c_items_54
                           !__anonstruct_Value_6_c_value_0_28
                           __anonstruct_Key_5_b_key_1_27
                           __anonstruct_Key_5_a_key_1_27))))))))))))))))))))))))))))))))))
                          }
  
end

module Function_getElement

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import Root___anonstruct_Key_5 
  
  use import ref.Ref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_pair_exists 
  
  use import Logic_is_map_correct 
  
  use import Logic_is_key_exists 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val getElement
  (map_0_0 : (pointer __anonstruct_Map_8)) 
   (key_2 : (pointer __anonstruct_Key_5)) 
    (value_1 : (pointer __anonstruct_Value_6)) 
     (__anonstruct_Value_6_d_value_31 : ref (memory __anonstruct_Value_6
      Int32.t)) 
      (__anonstruct_Value_6_c_value_31 : ref (memory __anonstruct_Value_6
       Int32.t)) 
       (voidP_items_56_alloc_table : (alloc_table voidP)) 
        (__anonstruct_Value_6_items_56_alloc_table : (alloc_table
         __anonstruct_Value_6)) 
         (__anonstruct_Value_6_value_31_alloc_table : (alloc_table
          __anonstruct_Value_6)) 
          (__anonstruct_Map_8_map_0_29_alloc_table : (alloc_table
           __anonstruct_Map_8)) 
           (__anonstruct_Key_5_key_30_alloc_table : (alloc_table
            __anonstruct_Key_5)) 
            (voidP_items_56_tag_table : (tag_table voidP)) 
             (__anonstruct_Map_8_count_map_0_29 : (memory __anonstruct_Map_8
              Int32.t)) 
              (__anonstruct_Map_8_capacity_map_0_29 : (memory
               __anonstruct_Map_8 Int32.t)) 
               (__anonstruct_Map_8_items_map_0_29 : (memory
                __anonstruct_Map_8 (pointer voidP))) 
                (__anonstruct_Item_7_existent_items_56 : (memory voidP
                 Int32.t)) 
                 (__anonstruct_Item_7_value_1_items_56 : (memory voidP
                  (pointer __anonstruct_Value_6))) 
                  (__anonstruct_Item_7___anonstruct_Key_5_b_items_56 :
                   (memory voidP Int32.t)) 
                   (__anonstruct_Item_7___anonstruct_Key_5_a_items_56 :
                    (memory voidP Int32.t)) 
                    (__anonstruct_Value_6_d_items_56 : (memory
                     __anonstruct_Value_6 Int32.t)) 
                     (__anonstruct_Value_6_c_items_56 : (memory
                      __anonstruct_Value_6 Int32.t)) 
                      (__anonstruct_Key_5_b_key_30 : (memory
                       __anonstruct_Key_5 Int32.t)) 
                       (__anonstruct_Key_5_a_key_30 : (memory
                        __anonstruct_Key_5 Int32.t)) : Int32.t
                        requires { true } reads {
                        __anonstruct_Value_6_c_value_31,
                        __anonstruct_Value_6_d_value_31 } writes {
                        __anonstruct_Value_6_c_value_31,
                        __anonstruct_Value_6_d_value_31 }
                        ensures {
                          (((#"map_c.jc" 651 10 28# "expl:Assigns clause"
                            (not_assigns
                            __anonstruct_Value_6_value_31_alloc_table
                            __anonstruct_Value_6_value_31_alloc_table (old
                            !__anonstruct_Value_6_c_value_31)
                            !__anonstruct_Value_6_c_value_31
                            (pset_singleton value_1)))
                           /\
                           (#"map_c.jc" 651 10 28# "expl:Assigns clause"
                           (not_assigns
                           __anonstruct_Value_6_value_31_alloc_table
                           __anonstruct_Value_6_value_31_alloc_table (old
                           !__anonstruct_Value_6_d_value_31)
                           !__anonstruct_Value_6_d_value_31
                           (pset_singleton value_1))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                          "expl:Ensures clause"
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 27#
                           "expl:Ensures clause"
                           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                           "expl:Ensures clause"
                           ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                            "expl:Ensures clause"
                            ((<=)
                            (offset_min
                            __anonstruct_Map_8_map_0_29_alloc_table map_0_0)
                            (0)))
                           /\
                           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                           "expl:Ensures clause"
                           ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                            "expl:Ensures clause"
                            ((>=)
                            (offset_max
                            __anonstruct_Map_8_map_0_29_alloc_table map_0_0)
                            (0)))
                           /\
                           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                           "expl:Ensures clause" ((=) true true)))))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 31 50#
                           "expl:Ensures clause"
                           (is_map_correct map_0_0 voidP_items_56_alloc_table
                           __anonstruct_Value_6_items_56_alloc_table
                           __anonstruct_Map_8_count_map_0_29
                           __anonstruct_Map_8_capacity_map_0_29
                           __anonstruct_Map_8_items_map_0_29
                           __anonstruct_Item_7_existent_items_56
                           __anonstruct_Item_7_value_1_items_56
                           __anonstruct_Item_7___anonstruct_Key_5_b_items_56
                           __anonstruct_Item_7___anonstruct_Key_5_a_items_56))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 349 16 46#
                           "expl:Ensures clause"
                           (Int32.(=)
                           (select __anonstruct_Map_8_count_map_0_29 map_0_0)
                           (select __anonstruct_Map_8_count_map_0_29 map_0_0)))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 350 16 52#
                           "expl:Ensures clause"
                           (Int32.(=)
                           (select __anonstruct_Map_8_capacity_map_0_29
                           map_0_0)
                           (select __anonstruct_Map_8_capacity_map_0_29
                           map_0_0)))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 351 16 418#
                           "expl:Ensures clause"
                           (forall i_8 : int.
                            ((Int32.(=)
                             (select
                             __anonstruct_Item_7___anonstruct_Key_5_a_items_56
                             (shift
                             (select __anonstruct_Map_8_items_map_0_29
                             map_0_0) i_8))
                             (select
                             __anonstruct_Item_7___anonstruct_Key_5_a_items_56
                             (shift
                             (select __anonstruct_Map_8_items_map_0_29
                             map_0_0) i_8)))
                            /\
                            ((Int32.(=)
                             (select
                             __anonstruct_Item_7___anonstruct_Key_5_b_items_56
                             (shift
                             (select __anonstruct_Map_8_items_map_0_29
                             map_0_0) i_8))
                             (select
                             __anonstruct_Item_7___anonstruct_Key_5_b_items_56
                             (shift
                             (select __anonstruct_Map_8_items_map_0_29
                             map_0_0) i_8)))
                            /\
                            ((Int32.(=)
                             (select __anonstruct_Item_7_existent_items_56
                             (shift
                             (select __anonstruct_Map_8_items_map_0_29
                             map_0_0) i_8))
                             (select __anonstruct_Item_7_existent_items_56
                             (shift
                             (select __anonstruct_Map_8_items_map_0_29
                             map_0_0) i_8)))
                            /\
                            ((Int32.(=)
                             (select __anonstruct_Value_6_c_items_56
                             (select __anonstruct_Item_7_value_1_items_56
                             (shift
                             (select __anonstruct_Map_8_items_map_0_29
                             map_0_0) i_8)))
                             (select __anonstruct_Value_6_c_items_56
                             (select __anonstruct_Item_7_value_1_items_56
                             (shift
                             (select __anonstruct_Map_8_items_map_0_29
                             map_0_0) i_8))))
                            /\
                            (Int32.(=)
                            (select __anonstruct_Value_6_d_items_56
                            (select __anonstruct_Item_7_value_1_items_56
                            (shift
                            (select __anonstruct_Map_8_items_map_0_29
                            map_0_0) i_8)))
                            (select __anonstruct_Value_6_d_items_56
                            (select __anonstruct_Item_7_value_1_items_56
                            (shift
                            (select __anonstruct_Map_8_items_map_0_29
                            map_0_0) i_8))))))))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 356 16 32#
                           "expl:Ensures clause" ((=) key_2 key_2))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 357 16 91#
                           "expl:Ensures clause"
                           (((is_key_exists map_0_0 key_2
                             __anonstruct_Map_8_capacity_map_0_29
                             __anonstruct_Map_8_items_map_0_29
                             __anonstruct_Item_7_existent_items_56
                             __anonstruct_Item_7_value_1_items_56
                             __anonstruct_Item_7___anonstruct_Key_5_b_items_56
                             __anonstruct_Item_7___anonstruct_Key_5_a_items_56
                             __anonstruct_Value_6_d_items_56
                             __anonstruct_Value_6_c_items_56
                             __anonstruct_Key_5_b_key_30
                             __anonstruct_Key_5_a_key_30)
                            /\
                            (is_pair_exists map_0_0 key_2 value_1
                            __anonstruct_Map_8_capacity_map_0_29
                            __anonstruct_Map_8_items_map_0_29
                            __anonstruct_Item_7_existent_items_56
                            __anonstruct_Item_7_value_1_items_56
                            __anonstruct_Item_7___anonstruct_Key_5_b_items_56
                            __anonstruct_Item_7___anonstruct_Key_5_a_items_56
                            __anonstruct_Value_6_d_items_56
                            !__anonstruct_Value_6_d_value_31
                            __anonstruct_Value_6_c_items_56
                            !__anonstruct_Value_6_c_value_31
                            __anonstruct_Key_5_b_key_30
                            __anonstruct_Key_5_a_key_30)) ->
                            (Int32.(=) result (#"map_c.jc" 681 55 67#
                            "expl:Integer cast" (Int32.of_int (1))))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 358 16 81#
                          "expl:Ensures clause"
                          ((not
                           (is_key_exists map_0_0 key_2
                           __anonstruct_Map_8_capacity_map_0_29
                           __anonstruct_Map_8_items_map_0_29
                           __anonstruct_Item_7_existent_items_56
                           __anonstruct_Item_7_value_1_items_56
                           __anonstruct_Item_7___anonstruct_Key_5_b_items_56
                           __anonstruct_Item_7___anonstruct_Key_5_a_items_56
                           __anonstruct_Value_6_d_items_56
                           __anonstruct_Value_6_c_items_56
                           __anonstruct_Key_5_b_key_30
                           __anonstruct_Key_5_a_key_30)) ->
                           ((Int32.(=) result (#"map_c.jc" 684 57 69#
                            "expl:Integer cast" (Int32.of_int (0))))
                           /\ ((=) value_1 value_1)))))))))))))))))))) }
  
end

module Function_getElement_safe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Root___anonstruct_Value_6 
  
  use import Root___anonstruct_Map_8 
  
  use import Root___anonstruct_Key_5 
  
  use import ref.Ref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_value_valid 
  
  use import Logic_is_pair_exists 
  
  use import Logic_is_map_correct 
  
  use import Logic_is_key_valid 
  
  use import Logic_is_key_exists 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val getElement
  (map_0_0 : (pointer __anonstruct_Map_8)) 
   (key_2 : (pointer __anonstruct_Key_5)) 
    (value_1 : (pointer __anonstruct_Value_6)) 
     (__anonstruct_Value_6_d_value_31 : ref (memory __anonstruct_Value_6
      Int32.t)) 
      (__anonstruct_Value_6_c_value_31 : ref (memory __anonstruct_Value_6
       Int32.t)) 
       (voidP_items_56_alloc_table : (alloc_table voidP)) 
        (__anonstruct_Value_6_items_56_alloc_table : (alloc_table
         __anonstruct_Value_6)) 
         (__anonstruct_Value_6_value_31_alloc_table : (alloc_table
          __anonstruct_Value_6)) 
          (__anonstruct_Map_8_map_0_29_alloc_table : (alloc_table
           __anonstruct_Map_8)) 
           (__anonstruct_Key_5_key_30_alloc_table : (alloc_table
            __anonstruct_Key_5)) 
            (voidP_items_56_tag_table : (tag_table voidP)) 
             (__anonstruct_Map_8_count_map_0_29 : (memory __anonstruct_Map_8
              Int32.t)) 
              (__anonstruct_Map_8_capacity_map_0_29 : (memory
               __anonstruct_Map_8 Int32.t)) 
               (__anonstruct_Map_8_items_map_0_29 : (memory
                __anonstruct_Map_8 (pointer voidP))) 
                (__anonstruct_Item_7_existent_items_56 : (memory voidP
                 Int32.t)) 
                 (__anonstruct_Item_7_value_1_items_56 : (memory voidP
                  (pointer __anonstruct_Value_6))) 
                  (__anonstruct_Item_7___anonstruct_Key_5_b_items_56 :
                   (memory voidP Int32.t)) 
                   (__anonstruct_Item_7___anonstruct_Key_5_a_items_56 :
                    (memory voidP Int32.t)) 
                    (__anonstruct_Value_6_d_items_56 : (memory
                     __anonstruct_Value_6 Int32.t)) 
                     (__anonstruct_Value_6_c_items_56 : (memory
                      __anonstruct_Value_6 Int32.t)) 
                      (__anonstruct_Key_5_b_key_30 : (memory
                       __anonstruct_Key_5 Int32.t)) 
                       (__anonstruct_Key_5_a_key_30 : (memory
                        __anonstruct_Key_5 Int32.t)) : Int32.t
                        requires {
                          ("expl:Internal"
                          (#"map_c.jc" 626 12 1580# "expl:Requires clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 344 16 27#
                           "expl:Requires clause"
                           (#"map_c.jc" 626 12 1580# "expl:Requires clause"
                           ((#"map_c.jc" 626 12 1580# "expl:Requires clause"
                            ((<=)
                            (offset_min
                            __anonstruct_Map_8_map_0_29_alloc_table map_0_0)
                            (0)))
                           /\
                           (#"map_c.jc" 626 12 1580# "expl:Requires clause"
                           ((#"map_c.jc" 626 12 1580# "expl:Requires clause"
                            ((>=)
                            (offset_max
                            __anonstruct_Map_8_map_0_29_alloc_table map_0_0)
                            (0)))
                           /\
                           (#"map_c.jc" 626 12 1580# "expl:Requires clause"
                           ((=) true true)))))))
                          /\
                          (#"map_c.jc" 626 12 1580# "expl:Requires clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 344 31 50#
                           "expl:Requires clause"
                           (is_map_correct map_0_0 voidP_items_56_alloc_table
                           __anonstruct_Value_6_items_56_alloc_table
                           __anonstruct_Map_8_count_map_0_29
                           __anonstruct_Map_8_capacity_map_0_29
                           __anonstruct_Map_8_items_map_0_29
                           __anonstruct_Item_7_existent_items_56
                           __anonstruct_Item_7_value_1_items_56
                           __anonstruct_Item_7___anonstruct_Key_5_b_items_56
                           __anonstruct_Item_7___anonstruct_Key_5_a_items_56))
                          /\
                          (#"map_c.jc" 626 12 1580# "expl:Requires clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 345 16 27#
                           "expl:Requires clause"
                           (#"map_c.jc" 626 12 1580# "expl:Requires clause"
                           ((#"map_c.jc" 626 12 1580# "expl:Requires clause"
                            ((<=)
                            (offset_min __anonstruct_Key_5_key_30_alloc_table
                            key_2) (0)))
                           /\
                           (#"map_c.jc" 626 12 1580# "expl:Requires clause"
                           ((#"map_c.jc" 626 12 1580# "expl:Requires clause"
                            ((>=)
                            (offset_max __anonstruct_Key_5_key_30_alloc_table
                            key_2) (0)))
                           /\
                           (#"map_c.jc" 626 12 1580# "expl:Requires clause"
                           ((=) true true)))))))
                          /\
                          (#"map_c.jc" 626 12 1580# "expl:Requires clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 345 31 96#
                           "expl:Requires clause"
                           (forall i_6 : int.
                            ((((<=) (0) i_6) /\
                             ((<) i_6
                             (Int32.to_int
                             (select __anonstruct_Map_8_count_map_0_29
                             map_0_0)))) ->
                             (is_key_valid map_0_0 i_6
                             __anonstruct_Map_8_items_map_0_29
                             __anonstruct_Item_7___anonstruct_Key_5_b_items_56
                             __anonstruct_Item_7___anonstruct_Key_5_a_items_56))))
                          /\
                          (#"map_c.jc" 626 12 1580# "expl:Requires clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 346 16 29#
                           "expl:Requires clause"
                           (#"map_c.jc" 626 12 1580# "expl:Requires clause"
                           ((#"map_c.jc" 626 12 1580# "expl:Requires clause"
                            ((<=)
                            (offset_min
                            __anonstruct_Value_6_value_31_alloc_table
                            value_1) (0)))
                           /\
                           (#"map_c.jc" 626 12 1580# "expl:Requires clause"
                           ((#"map_c.jc" 626 12 1580# "expl:Requires clause"
                            ((>=)
                            (offset_max
                            __anonstruct_Value_6_value_31_alloc_table
                            value_1) (0)))
                           /\
                           (#"map_c.jc" 626 12 1580# "expl:Requires clause"
                           ((=) true true)))))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 346 33 100#
                          "expl:Requires clause"
                          (forall i_7 : int.
                           ((((<=) (0) i_7) /\
                            ((<) i_7
                            (Int32.to_int
                            (select __anonstruct_Map_8_count_map_0_29
                            map_0_0)))) ->
                            (is_value_valid map_0_0 i_7
                            __anonstruct_Map_8_items_map_0_29
                            __anonstruct_Item_7_value_1_items_56
                            __anonstruct_Value_6_d_items_56
                            __anonstruct_Value_6_c_items_56))))))))))))))) }
                        reads { __anonstruct_Value_6_c_value_31,
                        __anonstruct_Value_6_d_value_31 } writes {
                        __anonstruct_Value_6_c_value_31,
                        __anonstruct_Value_6_d_value_31 }
                        ensures {
                          (((#"map_c.jc" 651 10 28# "expl:Assigns clause"
                            (not_assigns
                            __anonstruct_Value_6_value_31_alloc_table
                            __anonstruct_Value_6_value_31_alloc_table (old
                            !__anonstruct_Value_6_c_value_31)
                            !__anonstruct_Value_6_c_value_31
                            (pset_singleton value_1)))
                           /\
                           (#"map_c.jc" 651 10 28# "expl:Assigns clause"
                           (not_assigns
                           __anonstruct_Value_6_value_31_alloc_table
                           __anonstruct_Value_6_value_31_alloc_table (old
                           !__anonstruct_Value_6_d_value_31)
                           !__anonstruct_Value_6_d_value_31
                           (pset_singleton value_1))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                          "expl:Ensures clause"
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 27#
                           "expl:Ensures clause"
                           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                           "expl:Ensures clause"
                           ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                            "expl:Ensures clause"
                            ((<=)
                            (offset_min
                            __anonstruct_Map_8_map_0_29_alloc_table map_0_0)
                            (0)))
                           /\
                           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                           "expl:Ensures clause"
                           ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                            "expl:Ensures clause"
                            ((>=)
                            (offset_max
                            __anonstruct_Map_8_map_0_29_alloc_table map_0_0)
                            (0)))
                           /\
                           (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                           "expl:Ensures clause" ((=) true true)))))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 31 50#
                           "expl:Ensures clause"
                           (is_map_correct map_0_0 voidP_items_56_alloc_table
                           __anonstruct_Value_6_items_56_alloc_table
                           __anonstruct_Map_8_count_map_0_29
                           __anonstruct_Map_8_capacity_map_0_29
                           __anonstruct_Map_8_items_map_0_29
                           __anonstruct_Item_7_existent_items_56
                           __anonstruct_Item_7_value_1_items_56
                           __anonstruct_Item_7___anonstruct_Key_5_b_items_56
                           __anonstruct_Item_7___anonstruct_Key_5_a_items_56))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 349 16 46#
                           "expl:Ensures clause"
                           (Int32.(=)
                           (select __anonstruct_Map_8_count_map_0_29 map_0_0)
                           (select __anonstruct_Map_8_count_map_0_29 map_0_0)))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 350 16 52#
                           "expl:Ensures clause"
                           (Int32.(=)
                           (select __anonstruct_Map_8_capacity_map_0_29
                           map_0_0)
                           (select __anonstruct_Map_8_capacity_map_0_29
                           map_0_0)))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 351 16 418#
                           "expl:Ensures clause"
                           (forall i_8 : int.
                            ((Int32.(=)
                             (select
                             __anonstruct_Item_7___anonstruct_Key_5_a_items_56
                             (shift
                             (select __anonstruct_Map_8_items_map_0_29
                             map_0_0) i_8))
                             (select
                             __anonstruct_Item_7___anonstruct_Key_5_a_items_56
                             (shift
                             (select __anonstruct_Map_8_items_map_0_29
                             map_0_0) i_8)))
                            /\
                            ((Int32.(=)
                             (select
                             __anonstruct_Item_7___anonstruct_Key_5_b_items_56
                             (shift
                             (select __anonstruct_Map_8_items_map_0_29
                             map_0_0) i_8))
                             (select
                             __anonstruct_Item_7___anonstruct_Key_5_b_items_56
                             (shift
                             (select __anonstruct_Map_8_items_map_0_29
                             map_0_0) i_8)))
                            /\
                            ((Int32.(=)
                             (select __anonstruct_Item_7_existent_items_56
                             (shift
                             (select __anonstruct_Map_8_items_map_0_29
                             map_0_0) i_8))
                             (select __anonstruct_Item_7_existent_items_56
                             (shift
                             (select __anonstruct_Map_8_items_map_0_29
                             map_0_0) i_8)))
                            /\
                            ((Int32.(=)
                             (select __anonstruct_Value_6_c_items_56
                             (select __anonstruct_Item_7_value_1_items_56
                             (shift
                             (select __anonstruct_Map_8_items_map_0_29
                             map_0_0) i_8)))
                             (select __anonstruct_Value_6_c_items_56
                             (select __anonstruct_Item_7_value_1_items_56
                             (shift
                             (select __anonstruct_Map_8_items_map_0_29
                             map_0_0) i_8))))
                            /\
                            (Int32.(=)
                            (select __anonstruct_Value_6_d_items_56
                            (select __anonstruct_Item_7_value_1_items_56
                            (shift
                            (select __anonstruct_Map_8_items_map_0_29
                            map_0_0) i_8)))
                            (select __anonstruct_Value_6_d_items_56
                            (select __anonstruct_Item_7_value_1_items_56
                            (shift
                            (select __anonstruct_Map_8_items_map_0_29
                            map_0_0) i_8))))))))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 356 16 32#
                           "expl:Ensures clause" ((=) key_2 key_2))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 348 16 50#
                          "expl:Ensures clause"
                          ((#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 357 16 91#
                           "expl:Ensures clause"
                           (((is_key_exists map_0_0 key_2
                             __anonstruct_Map_8_capacity_map_0_29
                             __anonstruct_Map_8_items_map_0_29
                             __anonstruct_Item_7_existent_items_56
                             __anonstruct_Item_7_value_1_items_56
                             __anonstruct_Item_7___anonstruct_Key_5_b_items_56
                             __anonstruct_Item_7___anonstruct_Key_5_a_items_56
                             __anonstruct_Value_6_d_items_56
                             __anonstruct_Value_6_c_items_56
                             __anonstruct_Key_5_b_key_30
                             __anonstruct_Key_5_a_key_30)
                            /\
                            (is_pair_exists map_0_0 key_2 value_1
                            __anonstruct_Map_8_capacity_map_0_29
                            __anonstruct_Map_8_items_map_0_29
                            __anonstruct_Item_7_existent_items_56
                            __anonstruct_Item_7_value_1_items_56
                            __anonstruct_Item_7___anonstruct_Key_5_b_items_56
                            __anonstruct_Item_7___anonstruct_Key_5_a_items_56
                            __anonstruct_Value_6_d_items_56
                            !__anonstruct_Value_6_d_value_31
                            __anonstruct_Value_6_c_items_56
                            !__anonstruct_Value_6_c_value_31
                            __anonstruct_Key_5_b_key_30
                            __anonstruct_Key_5_a_key_30)) ->
                            (Int32.(=) result (#"map_c.jc" 681 55 67#
                            "expl:Integer cast" (Int32.of_int (1))))))
                          /\
                          (#"/home/vladimir/MSU/kornyhin/labs/task4/map.c" 358 16 81#
                          "expl:Ensures clause"
                          ((not
                           (is_key_exists map_0_0 key_2
                           __anonstruct_Map_8_capacity_map_0_29
                           __anonstruct_Map_8_items_map_0_29
                           __anonstruct_Item_7_existent_items_56
                           __anonstruct_Item_7_value_1_items_56
                           __anonstruct_Item_7___anonstruct_Key_5_b_items_56
                           __anonstruct_Item_7___anonstruct_Key_5_a_items_56
                           __anonstruct_Value_6_d_items_56
                           __anonstruct_Value_6_c_items_56
                           __anonstruct_Key_5_b_key_30
                           __anonstruct_Key_5_a_key_30)) ->
                           ((Int32.(=) result (#"map_c.jc" 684 57 69#
                            "expl:Integer cast" (Int32.of_int (0))))
                           /\ ((=) value_1 value_1)))))))))))))))))))) }
  
end
